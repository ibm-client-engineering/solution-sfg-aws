global:
  license: true
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi"
    tag: "6.1.2.1"
    digest: sha256:7426e3f8d935f28135b3f2b9cd5bc653105af9609606da967cb1cf70ca0b49de
    pullPolicy: IfNotPresent
    pullSecret: "ibm-pull-secret"
  networkPolicies:
    ingress:
      enabled: true
      customPolicies:
    egress:
      enabled: true
      customPolicies:

# metadata:
#  labels: 
#    applicationid: testid
#  annotations: {}

# Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows : 
# #   0 - Do not use
# #   1 - Least preferred
# #   2 - No Preference
# #   3 - Most preferred
arch:
  amd64: "2 - No Preference"
  ppc64le: "2 - No Preference"
  s390x: "2 - No Preference"

serviceAccount:
  name: default

resourcesInit:
  enabled: false
  image:
    repository: "cp.icr.io/cp/ibm-b2bi"
    name: "b2bi-resources"
    tag: "6.1.2.1"
    digest: sha256:660f8b8a48985d2981dc1bb31b9667aabfe4b8829221a8e48e64e3de01eaed08
    pullPolicy: "IfNotPresent"
  command:

persistence:
  enabled: true
  useDynamicProvisioning: true

appResourcesPVC:
  enabled: true
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "resources"
  accessMode: ReadOnlyMany
  size: 100Mi
  preDefinedResourcePVCName: sterlingtoolkit-pvc

appLogsPVC:
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "logs"
  accessMode: ReadWriteMany
  size: 500Mi
  preDefinedLogsPVCName: 
  
appDocumentsPVC:
  enabled: true
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "documents"
  accessMode: ReadWriteMany
  size: 500Mi
  preDefinedDocumentPVCName: 

extraPVCs: []

security:
  supplementalGroups: [65534]
  fsGroup: 
  runAsUser:
  runAsGroup: 

ingress:
  enabled: true
  controller: "nginx"
  annotations: {}
  port:

dataSetup:
# Enabled must be set to true on a first install, but subsequent helm upgrades it needs to be set to false
  enabled: true
  upgrade: false
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi-dbsetup"
    tag: "6.1.2.1"
    digest: sha256:d90c1f4a0d74a69fb00aa52a55540a5780d2d6d48867b41f31a647fea3be1f46
    pullPolicy: IfNotPresent
    pullSecret: "ibm-pull-secret"

env:
  tz: "UTC"
  upgradeCompatibilityVerified: false
  debugMode: false
  extraEnvs: []
  
logs:
  enableAppLogOnConsole: true
applyPolicyToKubeSystem: false

integrations:
  seasIntegration:
    isEnabled: false
    seasVersion: "1.0"
#setup.cfg configuration starts here. Property names must follow camelCase format.
setupCfg:
  #upgrade: false
  basePort: 50000
  #License - specify values as true/false
  licenseAcceptEnableSfg: true
  licenseAcceptEnableEbics: true
  licenseAcceptEnableFinancialServices: true
  licenseAcceptEnableFileOperation: true

  # Name of system passphrase secret if available
  systemPassphraseSecret: b2b-system-passphrase-secret
  enableFipsMode: false
  nistComplianceMode: "off"

  # Provide the DB attributes
  dbVendor: Oracle
  dbHost: sterling-mft-db.cehubq1eqcri.us-east-1.rds.amazonaws.com
  dbPort: 1521
  dbData: ORCL
  dbDrivers: ojdbc8.jar
  dbCreateSchema: true
  oracleUseServiceName: false
  # Values can be either true or false 
  usessl: false
  dbSecret: b2b-db-secret
  # When usessl is set to true
  dbTruststore:
  dbTruststoreSecret:
  dbKeystore:
  dbKeystoreSecret:
  adminEmailAddress: kramerro@us.ibm.com
  # Provide the SMTP host details  
  smtpHost: 127.0.0.1
  softStopTimeout:

  #WMQ
  # This is where we stick our MQ values
  #JMS properties are optional if jmsVendor is empty
  #To use IBMMQ for communication between ASI & AC, change property to jmsVendor: IBMMQ
  # and provide other connection details
  jmsVendor: IBMMQ
  # Provide the name of connection factory class. 
  jmsConnectionFactory: com.ibm.mq.jms.MQQueueConnectionFactory
  jmsConnectionFactoryInstantiator:
  jmsQueueName: DEV.QUEUE.1
  jmsHost: 10.100.98.89
  jmsPort: 1414
  jmsConnectionNameList:
  # Applicable for IBMMQ
  jmsChannel: DEV.APP.SVRCONN
  jmsEnableSsl: false
  # Name of JMS secret if available
  jmsSecret: mq-secret
  # When jmsEnableSsl is true
  jmsKeystorePath:
  jmsKeystoreSecret:
  jmsTruststorePath:
  jmsTruststoreSecret:
  jmsCiphersuite:
  jmsProtocol: TLSv1.2
  # Liberty Profile SSL Config. Specify Liberty keystore file name including it's path relative to the mounted resources volume location, if applicable.
  # If libertyKeystoreSecret is mentioned, provide the name of the key holding the certificate data. 
  libertyKeystoreLocation:
  # Name of Liberty keystore secret containing the certificate, if applicable
  libertyKeystoreSecret:
  libertyProtocol: TLSv1.2
  # Name of Liberty secret if available
  libertySecret:
  libertyJvmOptions:
  # Default document storage option. Can be set to one of the below values
  # DB - Database (default)
  # FS - File System  
  defaultDocumentStorageType: DB 
  # restartCluster can be set to true to restart the application cluster by cleaning up all previous node entries, locks and set the schedules to node1.
  restartCluster: false
  #Enable SSL over RMI calls
  useSslForRmi: true
  # Name of the RMI Secret if available.
  rmiTlsSecretName:

asi:
  replicaCount: 1
  
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35000
        targetPort: http
        nodePort: 30000
        protocol: TCP
      https: 
        name: https
        port: 35001
        targetPort: https
        nodePort: 30001
        protocol: TCP
      soa: 
        name: soa
        port: 35002
        targetPort: soa
        nodePort: 30002
        protocol: TCP
      soassl: 
        name: soassl
        port: 35003
        targetPort: soassl
        nodePort: 30003
        protocol: TCP
      restHttpAdapter: 
        name: rest-adapter
        port: 35007
        targetPort: rest-adapter
        nodePort: 30007
        protocol: TCP            
    extraPorts: []
    loadBalancerIP:  
    annotations: {}  
  
  backendService:
    type: LoadBalancer
    ports: 
      - name: adapter-1
        port: 30201
        targetPort: 30201
        nodePort: 30201
        protocol: TCP
    portRanges:
      - name: adapters
        portRange: 30301-30400
        targetPortRange: 30301-30400
        nodePortRange: 30301-30400
        protocol: TCP
    loadBalancerIP:  
    annotations: {}
      
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 30
    periodSeconds: 60

  # command - command to be executed 
  # arg1, arg2.. - command arguments
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []

  startupProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 30
    periodSeconds: 60
    failureThreshold: 3
      
  internalAccess:
    enableHttps: true
    httpsPort:   
    tlsSecretName:  
      
  externalAccess:
    protocol: http
    address: 
    port:
    
  ingress:
    internal:
      host: "ibm.com"
      tls:
        enabled: true
#        secretName: 
      extraPaths: []
    external:
      host: "ibm.com" 
      tls:
        enabled: true
        secretName: 
      extraPaths: []

  extraPVCs: []
  extraInitContainers: []
  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 8Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 4Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels:
     applicationid: testlabel
#    asiLabel: applicationid
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 

  extraSecrets: []
  extraConfigMaps: []
  myFgAccess:
    myFgPort:
    myFgProtocol:

  hostAliases: []
  performanceTuning:
    allocateMemToBI: false
    allocateMemToSAP: false
    allocateMemToCLA: false
    threadsPerCore: 4
    override: []

  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:

ac:
  replicaCount: 1
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35004
        targetPort: http
        nodePort: 30004
        protocol: TCP
    extraPorts: []
    loadBalancerIP:  
    annotations: {}  
      
  backendService:
    type: LoadBalancer
    ports:
      - name: adapter-1
        port: 30401
        targetPort: 30401
        nodePort: 30401
        protocol: TCP
    portRanges:
      - name: adapters
        portRange: 30501-30600
        targetPortRange: 30501-30600
        nodePortRange: 30501-30600
        protocol: TCP
    loadBalancerIP:  
    annotations: {} 

  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []

  internalAccess:
    enableHttps: true
    tlsSecretName:
      
  ingress:
    internal:
      host: "ibm.com"
      tls:
        enabled: true
        secretName:
      extraPaths: []
    external:
      host: "ibm.com" 
      tls:
        enabled: true
        secretName: 
      extraPaths: []
  
  extraPVCs: []
  extraInitContainers: []
  resources: 
    limits:
      cpu: 4000m
      memory: 8Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 4Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #acLabel: acValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 
  extraSecrets: []
  extraConfigMaps: []
  #If myFG is hosted on HTTP Server adapter on AC server, provide the internal port/protocol details used while configuring that.
  myFgAccess:
    myFgPort:
    myFgProtocol:
  
  hostAliases: []
  performanceTuning:
    allocateMemToSAP: false
    
  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:

api:
  replicaCount: 1
  env:
    #It will be deprecated in future release. Instead use config/jvm.options file to override or add any additional jvm configuration.
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []
    
  frontendService:
    type: ClusterIP
    ports:
      http:
        name: http
        port: 35005
        targetPort: http
        nodePort: 30005
        protocol: TCP
      https:
        name: https
        port: 35006
        targetPort: https
        nodePort: 30006
        protocol: TCP
    extraPorts: []
    loadBalancerIP:  
    annotations: {}  
  
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []
      
  internalAccess:
    enableHttps: true
    tlsSecretName:

  externalAccess:
    protocol: http
    address: 
    port: 

  ingress:
    internal:
      host: "ibm.com"
      tls:
        enabled: true
        secretName:

  extraPVCs: []
  extraInitContainers: []

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 4Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 2Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60
    
  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #apiLabel: apiValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 
  extraSecrets: []
  extraConfigMaps: []
  
  hostAliases: []
  
  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:
nameOverride: ""

fullnameOverride: ""

# Test container
test:
  image:
    repository: 'cp.icr.io/cp'
    name: 'opencontent-common-utils'
    tag: '1.1.54'
    digest: sha256:9bfcc7b58d503c45097dae5d35577b45bb8ffb56e8f9244e8cd3574dd36daf4c
    pullPolicy: 'IfNotPresent'
    pullSecret: ibm-pull-secret
    extraLabels:
      applicationid: testlabel

purge:
  enabled: true
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi-purge"
  # Provide the tag value in double quotes
    tag: "6.1.2.1"
    digest: sha256:b3a8b080fb9640796879105d9c6544a0630a4d2a0e3dc65cc84ac690e9522ba5
    pullPolicy: IfNotPresent
    pullSecret: ibm-pull-secret
    extraLabels:
      applicationid: testlabel
  # Provide a schedule for the purge job as a cron expression. For example "0 0 * * *" will run the purge job at 00:00 every day
  schedule: "0 0 * * *"
  startingDeadlineSeconds: 60
  activeDeadlineSeconds: 3600
  concurrencyPolicy: Forbid
  suspend: false
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1Gi
      ephemeral-storage: "1Gi"
    requests:
      cpu: 100m
      memory: 500Mi 
      ephemeral-storage: "500Mi"
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
