# (C) Copyright 2019-2022 Syncsort Incorporated. All rights reserved.

{{- if and (.Capabilities.APIVersions.Has "route.openshift.io/v1") (.Values.ingress.enabled) }}
{{ include "sch.config.init" (list . "b2bi.sch.chart.config.values") }}
{{- $resourcesPVCName := .sch.chart.components.appResourcesPVC.name -}}
{{- $ibmsecretexist := ((empty (lookup "v1" "Secret" .Release.Namespace .sch.chart.components.ibmDefaultPullSecret.name)) | ternary "false" "true") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.patchIngressJob.name) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.patchIngressJob.name) | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "hook-succeeded, before-hook-creation"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.patchIngressJob.name) | quote }}
      labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.patchIngressJob.name) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering .sch.chart.nonMetering.nonChargeableProductMetric nil "deleteCleanup") | indent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name  | quote }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.podSecurityContextTest) | indent 8 }}
      {{- if or (.Values.global.image.pullSecret) (eq $ibmsecretexist "true") }}
      imagePullSecrets:
      {{- if .Values.global.image.pullSecret }}
        - name: {{ .Values.global.image.pullSecret }}
      {{- else }}
        - name: "{{ .sch.chart.components.ibmDefaultPullSecret.name }}"
      {{- end }}
      {{- end }}
      containers:
      - name: patchingress
        {{- if .Values.test.image.digest }}
        image:  "{{ .Values.test.image.repository }}/{{ .Values.test.image.name }}@{{ .Values.test.image.digest }}"
        {{- else }}
        image:  "{{ .Values.test.image.repository }}/{{ .Values.test.image.name }}:{{ .Values.test.image.tag }}"
        {{- end }}
        imagePullPolicy:  "{{ .Values.test.image.pullPolicy }}"
        securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.containerSecurityContextTest) | indent 10 }}
        command:
        - "/bin/bash"
        - -c
        - |
          echo "starting patch ingress job..."
          echo "release namespace - {{ .Release.Namespace }}"
          
          {{- if and (gt (.Values.api.replicaCount|int) 0) (.Values.api.ingress.internal.tls.enabled) (.Values.api.internalAccess.enableHttps) }}
          kubectl get secret {{ .Values.api.internalAccess.tlsSecretName | default (include "sch.names.fullCompName" (list . .sch.chart.components.apiFrontendService.name)) }} -n {{ .Release.Namespace }} -o jsonpath="{.data.tls\.crt}" | base64 -d > /tmp/api-tls.crt;
          DEST_CABUNDLE_FN=/tmp/api-tls.crt
          DESTCABUNDLE=$(awk '{printf "%s\\n", $0}' ${DEST_CABUNDLE_FN})
          kubectl patch route $(kubectl get routes -l component-name=api -o jsonpath="{.items[*].metadata.name}") -p '{"spec":{"tls":{"destinationCACertificate":"'"${DESTCABUNDLE}"'"}}}'
          {{- end }}
          
          {{- if and (gt (.Values.asi.replicaCount|int) 0) (.Values.asi.ingress.internal.tls.enabled) (.Values.asi.internalAccess.enableHttps) }}
          kubectl get secret {{ .Values.asi.internalAccess.tlsSecretName | default (include "sch.names.fullCompName" (list . .sch.chart.components.asiFrontendService.name)) }} -n {{ .Release.Namespace }} -o jsonpath="{.data.tls\.crt}" | base64 -d > /tmp/asi-tls.crt;
          DEST_CABUNDLE_FN=/tmp/asi-tls.crt
          DESTCABUNDLE=$(awk '{printf "%s\\n", $0}' ${DEST_CABUNDLE_FN})
          kubectl patch route $(kubectl get routes -l component-name=asi -o jsonpath="{.items[*].metadata.name}") -p '{"spec":{"tls":{"destinationCACertificate":"'"${DESTCABUNDLE}"'"}}}'
          {{- end }}
          
        resources:
          requests:
            memory: 128Mi
            cpu: 10m
            ephemeral-storage: "16Mi"
          limits:
            memory: 128Mi
            cpu: 50m
            ephemeral-storage: "32Mi"
      affinity:
{{- include "b2bi.architectureAffinity" . | indent 8 }}
      restartPolicy: Never
{{- end }}
