# (C) Copyright 2019-2022 Syncsort Incorporated. All rights reserved.

{{ include "sch.config.init" (list . "b2bi.sch.chart.config.values") }}
{{- $ingressEnabled := .Values.ingress.enabled | default false }}
{{- if gt (.Values.api.replicaCount|int) 0 }}
{{- $serviceType := .Values.api.frontendService.type }}
{{- $sessionAffinity := .Values.api.frontendService.sessionAffinity | default "ClientIP" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.apiFrontendService.name) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.apiFrontendService.name) | indent 4 }}
  annotations:
    {{- if and (.Capabilities.APIVersions.Has "security.openshift.io/v1") (.Values.api.internalAccess.enableHttps) (not .Values.api.internalAccess.tlsSecretName) }}
    service.beta.openshift.io/serving-cert-secret-name: {{ .Values.api.internalAccess.tlsSecretName | default (include "sch.names.fullCompName" (list . .sch.chart.components.apiFrontendService.name)) }}  
    {{- end }}    
{{- if .Values.api.frontendService.annotations }}
{{ toYaml .Values.api.frontendService.annotations | indent 4 }}
{{- end }}
spec:
  {{ $effectiveServiceType := "ClusterIP" }}
  {{- if eq $ingressEnabled false }}
  {{ $effectiveServiceType = .Values.api.frontendService.type }}
  {{- end }}
  type: {{ $effectiveServiceType }}
  sessionAffinity: {{ $sessionAffinity }}
  {{- if not (eq $sessionAffinity "None") }}
  sessionAffinityConfig:
  {{- if (eq $sessionAffinity "ClientIP") }}
    clientIP:
  {{- end }}
  {{ toYaml .Values.api.frontendService.sessionAffinityConfig | indent 6 }}
  {{- end }}
  {{- if not (eq $effectiveServiceType "ClusterIP") }}
  externalTrafficPolicy: {{ .Values.api.frontendService.externalTrafficPolicy }}
  {{- end }}
  ports:
    - port: {{ .Values.api.frontendService.ports.http.port }}
      targetPort: {{ .Values.api.frontendService.ports.http.targetPort }}
      protocol: {{ .Values.api.frontendService.ports.http.protocol }}
      name: {{ .Values.api.frontendService.ports.http.name }}
      {{- if eq $ingressEnabled false }}
      nodePort: {{ .Values.api.frontendService.ports.http.nodePort }}
      {{- end }}
    - port: {{ .Values.api.frontendService.ports.https.port }}
      targetPort: {{ .Values.api.frontendService.ports.https.targetPort }}
      protocol: {{ .Values.api.frontendService.ports.https.protocol }}
      name: {{ .Values.api.frontendService.ports.https.name }}
      {{- if eq $ingressEnabled false }}
      nodePort: {{ .Values.api.frontendService.ports.https.nodePort }}
      {{- end }}
    {{- range $i, $port := .Values.api.frontendService.extraPorts }}
    - port: {{ $port.port }}
      targetPort: {{ $port.targetPort }}
      protocol: {{ $port.protocol }}
      name: {{ $port.name }}
      {{- if eq $ingressEnabled false }}
      nodePort: {{ $port.nodePort }}
      {{- end }}
    {{- end }}
  selector:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.apiServer.name) | indent 4 }}
   {{- if and (eq $serviceType "LoadBalancer") (.Values.api.frontendService.loadBalancerIP) }}
  loadBalancerIP: {{ .Values.api.frontendService.loadBalancerIP }}  
   {{ end }}
{{ end }}