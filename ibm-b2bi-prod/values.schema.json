{
	"$schema": "http://json-schema.org/draft-07/schema",
	"$id": "http://example.com/example.json",
	"type": "object",
	"default": {},
	"required": ["global", "arch", "serviceAccount", "persistence", "appResourcesPVC", "appLogsPVC", "ingress", "dataSetup", "env","setupCfg", "asi", "ac", "api", "test"],
	"properties": {
		"global": {
			"$id": "#/properties/global",
			"type": "object",
			"description": "Global properties accessed in main and dependent pods",
			"default": {

			},
			"required": [
				"license",
                                "licenseType",
				"image",
				"networkPolicies"
			],
			"properties": {
				"license": {
					"$id": "#/properties/global/properties/license",
					"type": "boolean",
					"title": "B2BI/SFG license agreement",
					"description": "Accept B2BI/SFG license after reading it. B2BI: https://ibm.biz/BdPzHS SFG: https://ibm.biz/BdPzHv",
					"default": false
				},
                                "licenseType": {
                                        "$id": "#/properties/global/properties/licenseType",
                                        "type": "string",
                                        "title": "B2BI/SFG license Type",
                                        "description": "Specify the license edition as per license agreement. values can be prod or non-prod",
                                        "default": "prod",
                                        "enum": ["prod", "non-prod"]
                                },
				"image": {
					"$id": "#/properties/global/properties/image",
					"type": "object",
					"title": "B2BI/SFG Image",
					"default": {

					},
					"required": [
						"repository",
						"tag",
						"pullPolicy"
					],
					"properties": {
						"repository": {
							"$id": "#/properties/global/properties/image/properties/repository",
							"type": "string",
							"title": "B2BI/SFG image repository",
							"description": "Docker registry to pull B2BI/SFG image from.",
							"default": "cp.icr.io/cp/ibm-b2bi/b2bi"
						},
						"tag": {
							"$id": "#/properties/global/properties/image/properties/tag",
							"type": "string",
							"title": "Image tag",
							"description": "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other.",
							"default": "6.1.1"
						},
						"digest": {
							"$id": "#/properties/global/properties/image/properties/digest",
							"type": [
								"string",
								"null"
							],
							"title": "Image digest",
							"description": "A digest is a hash of a Docker image supported by the Docker v2 registry format.",
							"default": null
						},
						"pullPolicy": {
							"$id": "#/properties/global/properties/image/properties/pullPolicy",
							"type": "string",
							"title": "Image pull policy",
							"description": "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists.",
							"default": "IfNotPresent"
						},
						"pullSecret": {
							"$id": "#/properties/global/properties/image/properties/pullSecret",
							"type": ["string","null"],
							"title": "B2BI Image pull Secret",
							"description": "Secret used for pulling from private repositories.",
							"default": ""
						}
					}
				},
				"networkPolicies": {
					"$id": "#/properties/global/properties/networkPolicies",
					"type": "object",
					"title": "Network Policies",
					"default": {

					},
					"required": [
					],
					"properties": {
						"ingress": {
							"$id": "#/properties/global/properties/networkPolicies/properties/ingress",
							"type": "object",
							"title": "Ingress",
							"description": "Specify configurations for ingress resource.",
							"default": {

							},
							"required": [
								"enabled"
							],
							"properties": {
								"enabled": {
									"$id": "#/properties/global/properties/networkPolicies/properties/ingress/properties/enabled",
									"type": "boolean",
									"title": "Enable out of the box ingress network policies",
									"description": "Enable out of the box network policies for deny all ingress and allow ingress only within same namespace and ingress controller.",
									"default": true
								},
								"customPolicies": {
									"$id": "#/properties/global/properties/networkPolicies/properties/ingress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom ingress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific ingress endpoints.",
									"default": [

									],
									"additionalProperties": true,
									"items": {
										"$id": "#/properties/global/properties/networkPolicies/properties/ingress/properties/customPolicies/items",
										"type": "object"
									}
								}
							}
						},
						"egress": {
							"$id": "#/properties/global/properties/networkPolicies/properties/egress",
							"type": "object",
							"title": "Egress",
							"default": {

							},
							"required": [
								"enabled"
							],
							"properties": {
								"enabled": {
									"$id": "#/properties/global/properties/networkPolicies/properties/egress/properties/enabled",
									"type": "boolean",
									"title": "Enable out of the box egress network policies",
									"description": "Enable out of the box network policies for deny all egress and allow egress only within same namespace.",
									"default": true
								},
								"customPolicies": {
									"$id": "#/properties/global/properties/networkPolicies/properties/egress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom egress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific egress endpoints.",
									"default": [

									],
									"additionalItems": true,
									"items": {
										"$id": "#/properties/global/properties/networkPolicies/properties/egress/properties/customPolicies/items",
										"type": "object"
									}
								}
							}
						}
					}
				}
			},
			"additionalProperties": true
		},
		"arch": {
			"$id": "#/properties/arch",
			"type": "object",
			"title": "Architecture scheduling preferences",
			"default": {

			},
			"required": [
				"amd64",
				"ppc64le",
				"s390x"
			],
			"properties": {
				"amd64": {
					"$id": "#/properties/arch/properties/amd64",
					"type": "string",
					"title": "amd64",
					"default": "2 - No Preference"
				},
				"ppc64le": {
					"$id": "#/properties/arch/properties/ppc64le",
					"type": "string",
					"title": "ppc64le",
					"default": "2 - No Preference"
				},
				"s390x": {
					"$id": "#/properties/arch/properties/s390x",
					"type": "string",
					"title": "s390x",
					"default": "2 - No Preference"
				}
			},
			"additionalProperties": true
		},
		"serviceAccount": {
			"$id": "#/properties/serviceAccount",
			"type": "object",
			"title": "Service Account",
			"description": "User Specifed Service Account details.",
			"default": {

			},
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"$id": "#/properties/serviceAccount/properties/name",
					"type": "string",
					"title": "Existing Service Account Name",
					"description": "If the user wishes to use own/already created service account, can specify the name here, default value is default.",
					"default": "default"
				}
			}
		},
		"resourcesInit": {
			"$id": "#/properties/resourcesInit",
			"type": "object",
			"title": "Resources Init Containers",
			"description": "Resources init containers, e. g. for providing DB Drivers etc.",
			"default": {

			},
			"required": [
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/resourcesInit/properties/enabled",
					"type": "boolean",
					"title": "Enable Resources Init Containers",
					"description": "Select this checkbox to enable Resources Init Containers",
					"default": false
				},
				"image": {
					"$id": "#/properties/resourcesInit/properties/image",
					"type": "object",
					"title": "Resources Init Containers Image",
					"default": {

					},
					"required": [],
					"properties": {
						"repository": {
							"$id": "#/properties/resourcesInit/properties/image/properties/repository",
							"type": [
								"string",
								"null"
							],
							"title": "Image repository",
							"description": "Docker registry to pull resource init containers image from.",
							"default": ""
						},
						"name": {
							"$id": "#/properties/resourcesInit/properties/image/properties/name",
							"type": [
								"string",
								"null"
							],
							"title": "Resource init container image name",
							"description": "Docker image name for resource init container",
							"default": null
						},
						"tag": {
							"$id": "#/properties/resourcesInit/properties/image/properties/tag",
							"type": [
								"string",
								"null"
							],
							"title": "Resource init container image tag",
							"description": "Docker image tag for resource init container",
							"default": null
						},
						"digest": {
							"$id": "#/properties/resourcesInit/properties/image/properties/digest",
							"type": [
								"string",
								"null"
							],
							"title": "Image digest",
							"description": "A digest is a hash of a Docker image supported by the Docker v2 registry format.",
							"default": null
						},
						"pullPolicy": {
							"$id": "#/properties/resourcesInit/properties/image/properties/pullPolicy",
							"type": "string",
							"title": "Image pull policy",
							"description": "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists.",
							"default": "IfNotPresent"
						}
					}
				},
				"command": {
					"$id": "#/properties/resourcesInit/properties/command",
					"type": [
						"array",
						"null"
					],
					"title": "Command to be executed in resource init container",
					"default": null
				}
			}
		},
		"persistence": {
			"$id": "#/properties/persistence",
			"type": "object",
			"title": "Persistence configuration",
			"description": "Data persistence configuration.",
			"default": {

			},
			"required": [
				"enabled",
				"useDynamicProvisioning"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/persistence/properties/enabled",
					"type": "boolean",
					"title": "Enable persistence storage for B2BI/SFG",
					"description": "Select this checkbox to store B2BI/SFG data on a persistent volume so that the data is preserved if the pod is stopped.",
					"default": true
				},
				"useDynamicProvisioning": {
					"$id": "#/properties/persistence/properties/useDynamicProvisioning",
					"type": "boolean",
					"title": "Use dynamic provisioning",
					"description": "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects.",
					"default": false
				}
			}
		},
		"appResourcesPVC": {
			"$id": "#/properties/appResourcesPVC",
			"type": "object",
			"title": "App Resources",
			"description": "App Resource volume configuration.",
			"default": {

			},
			"required": [
				"enabled",				
				"accessMode",
				"size"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/appResourcesPVC/properties/enabled",
					"type": "boolean",
					"title": "Enable persistent volume claim for resources",
					"description": "Select to enable persistent volume claim for resources.",
					"default": true
				},
				"preDefinedResourcePVCName": {
					"$id": "#/properties/appResourcesPVC/properties/preDefinedResourcePVCName",
					"type": ["string","null"],
					"title": "Name of the pre define persistent volume claim for app resources PVC",
					"description": "By default a persistent volume claim will be created for resources with this name.",
					"default": null
				},
				"storageClassName": {
					"$id": "#/properties/appResourcesPVC/properties/storageClassName",
					"type": "string",
					"title": "StorageClass Name",
					"description": "Choose a specific storage class name. Defaults to the default storage class in the cluster.",
					"default": ""
				},
				"selector": {
					"$id": "#/properties/appResourcesPVC/properties/selector",
					"type": "object",
					"title": "Selector",
					"default": {

					},
					"required": [
					],
					"properties": {
						"label": {
							"$id": "#/properties/appResourcesPVC/properties/selector/properties/label",
							"type": "string",
							"title": "Label",
							"description": "Key label matching to specify app Resource PVC .",
							"default": "intent"
						},
						"value": {
							"$id": "#/properties/appResourcesPVC/properties/selector/properties/value",
							"type": "string",
							"title": "Value",
							"description": "Key value matching to specify app Resource PVC .",
							"default": "resources"
						}
					}
				},
				"accessMode": {
					"$id": "#/properties/appResourcesPVC/properties/accessMode",
					"type": "string",
					"title": "Access Mode",
					"description": "By default Access Mode is ReadOnlyMany .",
					"default": "ReadOnlyMany"
				},
				"size": {
					"$id": "#/properties/appResourcesPVC/properties/size",
					"type": "string",
					"title": "Size of the volume claim",
					"description": "Defaults to 100Mi of storage request. Choose a different size of disk if needed.",
					"default": "100Mi"
				}
			}
		},
		"appLogsPVC": {
			"$id": "#/properties/appLogsPVC",
			"type": "object",
			"title": "App Logs",
			"description": "App logs volume configuration.",
			"default": {

			},
			"required": [
				"accessMode",
				"size"
			],
			"properties": {
				"preDefinedLogsPVCName": {
					"$id": "#/properties/appLogsPVC/properties/preDefinedLogsPVCName",
					"type": ["string","null"],
					"title": "Name of the pre define persistent volume claim for logs",
					"description": "By default a persistent volume claim for logs will be created with this name.",
					"default": null
				},
				"storageClassName": {
					"$id": "#/properties/appLogsPVC/properties/storageClassName",
					"type": "string",
					"title": "StorageClass Name",
					"description": "Choose a specific storage class name. Defaults to the default storage class in the cluster.",
					"default": ""
				},
				"selector": {
					"$id": "#/properties/appLogsPVC/properties/selector",
					"type": "object",
					"title": "Selector",
					"default": {

					},
					"required": [
					],
					"properties": {
						"label": {
							"$id": "#/properties/appLogsPVC/properties/selector/properties/label",
							"type": "string",
							"title": "Label",
							"description": "Key label matching to specify app logs PVC .",
							"default": "intent"
						},
						"value": {
							"$id": "#/properties/appLogsPVC/properties/selector/properties/value",
							"type": "string",
							"title": "Value",
							"description": "Key value matching to specify app logs PVC .",
							"default": "logs"
						}
					}
				},
				"accessMode": {
					"$id": "#/properties/appLogsPVC/properties/accessMode",
					"type": "string",
					"title": "Access Mode",
					"description": "By default Access Mode is ReadWriteMany.",
					"default": "ReadWriteMany"
				},
				"size": {
					"$id": "#/properties/appLogsPVC/properties/size",
					"type": "string",
					"title": "Size of the volume claim",
					"description": "Defaults to 500Mi of storage request. Choose a different size of disk if needed.",
					"default": "500Mi"
				}
			}
		},
		"appDocumentsPVC": {
			"$id": "#/properties/appDocumentsPVC",
			"type": "object",
			"title": "App Documents",
			"description": "App documents volume configuration.",
			"default": {

			},
			"required": [
				"enabled",				
				"accessMode",
                                "enableVolumeClaimPerPod",
				"size"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/appDocumentsPVC/properties/enabled",
					"type": "boolean",
					"title": "Enable persistent volume claim for documents",
					"description": "Select to enable persistent volume claim for storing application documents, if document storage is set to file system.",
					"default": false
				},
				"preDefinedDocumentPVCName": {
					"$id": "#/properties/appDocumentsPVC/properties/preDefinedDocumentPVCName",
					"type": ["string","null"],
					"title": "Name of the pre define persistent volume claim for document",
					"description": "By default a persistent volume claim for logs will be created with this name.",
					"default": null
				},
				"storageClassName": {
					"$id": "#/properties/appDocumentsPVC/properties/storageClassName",
					"type": "string",
					"title": "StorageClass Name",
					"description": "Choose a specific storage class name. Defaults to the default storage class in the cluster.",
					"default": ""
				},
				"selector": {
					"$id": "#/properties/appDocumentsPVC/properties/selector",
					"type": "object",
					"title": "Selector",
					"default": {

					},
					"required": [
					],
					"properties": {
						"label": {
							"$id": "#/properties/appDocumentsPVC/properties/selector/properties/label",
							"type": "string",
							"title": "Label",
							"description": "Key label matching to specify app documents PVC.",
							"default": "intent"
						},
						"value": {
							"$id": "#/properties/appDocumentsPVC/properties/selector/properties/value",
							"type": "string",
							"title": "Value",
							"description": "Key value matching to specify app documents PVC.",
							"default": "documents"
						}
					}
				},
				"accessMode": {
					"$id": "#/properties/appDocumentsPVC/properties/accessMode",
					"type": "string",
					"title": "Access Mode",
					"description": "By default Access Mode is ReadWriteMany.",
					"default": "ReadWriteMany"
				},
				"size": {
					"$id": "#/properties/appDocumentsPVC/properties/size",
					"type": "string",
					"title": "Size of the volume claim",
					"description": "Defaults to 500Mi of storage request. Choose a different size of disk if needed.",
					"default": "500Mi"
				},
                                "enableVolumeClaimPerPod": {
                                        "$id": "#/properties/appDocumentsPVC/properties/enableVolumeClaimPerPod",
                                        "type": "boolean",
                                        "title": "Enable persistent volume claim per pod for documents",
                                        "description": "Select to enable persistent volume claim for storing application documents at pod level, if document storage is set to file system.",
                                        "default": false
                                }
			}
		},
		"extraPVCs": {
			"$id": "#/properties/extraPVCs",
			"type": ["object", "array"],
			"title": "Extra Volume",
			"description": "User can use this property for extra persistent volume claim shared across all deployments.",
			"default": [

			],
			"additionalItems": true,
			"items": {
				"$id": "#/properties/extraPVCs/items",
				"type": "object"
			}
		},
		"security": {
			"$id": "#/properties/security",
			"type": "object",
			"title": "Security",
			"description": "Specify the security",
			"default": {

			},
			"required": [
				"supplementalGroups"
			],
			"properties": {
				"supplementalGroups": {
					"$id": "#/properties/security/properties/supplementalGroups",
					"type": "array",
					"title": "Supplemental GID",
					"description": "Supplemental group id for persistent volume.",
					"default": [
						65534
					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/security/properties/supplementalGroups/items",
						"type": "integer",
						"default": 65534
					}
				},
				"fsGroup": {
					"$id": "#/properties/security/properties/fsGroup",
					"type": [
						"integer",
						"null"
					],
					"title": "File System GID",
					"description": "File system group id for persistent volume.",
					"default": null
				},
                                "fsGroupChangePolicy": {
                                        "$id": "#/properties/security/properties/fsGroupChangePolicy",
                                        "type": "string",
                                        "title": "File System Group Change Policy",
                                        "description": "File system Group change policy.",
                                        "default": "OnRootMismatch",
                                        "enum": ["OnRootMismatch", "Always"]
                                },
				"runAsUser": {
					"$id": "#/properties/security/properties/runAsUser",
					"type": [
						"integer",
						"null"
					],
					"title": "Run as User",
					"description": "User id to use when running the deployment/containers.",
					"default": {

					}
				},
				"runAsGroup": {
					"$id": "#/properties/security/properties/runAsGroup",
					"type": [
						"integer",
						"null"
					],
					"title": "Run as Group",
					"description": "Group id to use when running the deployment/containers.",
					"default": {

					}
				}
			}
		},
		"ingress": {
			"$id": "#/properties/ingress",
			"type": "object",
			"title": "Ingress",
			"description": "Specify configurations for ingress resource.",
			"default": {

			},
			"required": [
				"enabled",
				"controller"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/ingress/properties/enabled",
					"type": "boolean",
					"title": "Enable Ingress",
					"description": "Specify whether to enable ingress.",
					"default": true
				},
				"controller": {
					"$id": "#/properties/ingress/properties/controller",
					"type": "string",
					"title": "Ingress Controller",
					"description": "Controller for ingress.",
					"default": "nginx"
				},
				"annotations": {
					"$id": "#/properties/ingress/properties/annotations",
					"type": "object",
					"title": "Annotations for this Ingress Resource",
					"description": "Specify annotations for this ingress resource with name and value for each annotation",
					"default": {

					},
					"required": [

					],
					"additionalProperties": true
				},
				"port": {
					"$id": "#/properties/ingress/properties/port",
					"type": [
						"integer",
						"null"
					],
					"title": "Ingress port",
					"description": "Specify ingress controller/router port if its not configured on the standard http/https ports 80/443",
					"default": {

					}
				}
			}
		},
		"dataSetup": {
			"$id": "#/properties/dataSetup",
			"type": "object",
			"title": "Data Setup",
			"description": "User Specifed configurations for database setup.",
			"default": {

			},
			"required": [
				"enabled",
				"upgrade",
				"image"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/dataSetup/properties/enabled",
					"type": "boolean",
					"title": "Enable Data Setup",
					"description": "User specify whether data setup is enabled or not.By default it is enabled.",
					"default": true
				},
				"upgrade": {
					"$id": "#/properties/dataSetup/properties/upgrade",
					"type": "boolean",
					"title": "Upgrade",
					"description": "User specify whether to upgrade database or not by default it is false. Set to false if you are doing a fresh installation.",
					"default": false
				},
				"image": {
					"$id": "#/properties/dataSetup/properties/image",
					"type": "object",
					"title": "Image",
					"default": {

					},
					"required": [
						"repository",
						"tag",
						"pullPolicy"
					],
					"properties": {
						"repository": {
							"$id": "#/properties/dataSetup/properties/image/properties/repository",
							"type": "string",
							"title": "B2BI/SFG container image repository",
							"description": "Container registry to pull B2BI/SFG images from.",
							"default": "cp.icr.io/cp/ibm-b2bi/b2bi-dbsetup"
						},
						"tag": {
							"$id": "#/properties/dataSetup/properties/image/properties/tag",
							"type": "string",
							"title": "DB setup container image tag",
							"description": "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other.",
							"default": "6.1.1"
						},
						"pullPolicy": {
							"$id": "#/properties/dataSetup/properties/image/properties/pullPolicy",
							"type": "string",
							"title": "DB setup container image pull policy",
							"description": "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists.",
							"default": "IfNotPresent"
						},
						"pullSecret": {
							"$id": "#/properties/dataSetup/properties/image/properties/pullSecret",
							"type": ["string","null"],
							"title": "DB setup container image pull Secret",
							"description": "Secret used for pulling from private repositories.",
							"default": ""
						},
						"digest": {
							"$id": "#/properties/dataSetup/properties/image/properties/digest",
							"type": [
								"string",
								"null"
							],
							"title": "Image digest for DB setup ",
							"description": "A digest is a hash of a Docker image supported by the Docker v2 registry format.",
							"default": null
						}
					}
				}
			}
		},
		"env": {
			"$id": "#/properties/env",
			"type": "object",
			"title": "Environment Variables",
			"description": "Configure environment variables",
			"default": {

			},
			"required": [
				"tz",
				"upgradeCompatibilityVerified",
				"debugMode"
			],
			"properties": {
				"tz": {
					"$id": "#/properties/env/properties/tz",
					"type": "string",
					"title": "System timezone",
					"description": "Specify the time zone for application runtime.",
					"default": "UTC"
				},
				"upgradeCompatibilityVerified": {
					"$id": "#/properties/env/properties/upgradeCompatibilityVerified",
					"type": "boolean",
					"title": "Release upgrade compatibility",
					"description": "For an upgrade, you must check for the release compatibility matrix before you upgrade.",
					"default": false
				},
				"debugMode": {
					"$id": "#/properties/env/properties/debugMode",
					"type": "boolean",
					"title": "Debug Mode",
					"description": "To view debug logs during pod startup.",
					"default": false
				},
				"extraEnvs": {
					"$id": "#/properties/env/properties/extraEnvs",
					"type": ["object", "array"],
					"title": "Extra global environment variables",
					"description": "Provide extra global environment variables.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/env/properties/extraEnvs/items",
						"type": "object"
					}
				}
			}
		},
		"logs": {
			"$id": "#/properties/logs",
			"type": "object",
			"title": "B2BI Logging",
			"description": "Used to control the B2BI application and console logs.",
			"default": {

			},
			"required": [
				"enableAppLogOnConsole"
			],
			"properties": {
				"enableAppLogOnConsole": {
					"$id": "#/properties/logs/properties/enableAppLogOnConsole",
					"type": "boolean",
					"title": "App log on console",
					"description": "If true, redirects the application logs to the respective pod's console.",
					"default": true
				}
			}
		},
		"applyPolicyToKubeSystem": {
			"$id": "#/properties/applyPolicyToKubeSystem",
			"type": "boolean",
			"title": "KubeSystem Policy",
			"description": "Apply KubeSystem namespace policy. Defaults to false.",
			"default": false
		},
		"integrations": {
			"$id": "#/properties/integrations",
			"type": "object",
			"title": "B2BI Integrations point",
			"description": "Used when integrating B2BI application with other components.",
			"default": {

			},
			"required": [
				
			],
			"properties": {
				"seasIntegration": {
					"$id": "#/properties/integrations/properties/seasIntegration",
					"type": "object",
					"title": "SEAS Integration",
					"description": "Integration with IBM Sterling SEAS",
					"default": {

					},
					"required": [
					],
					"properties": {
						"isEnabled": {
							"$id": "#/properties/integrations/properties/seasIntegration/properties/isEnabled",
							"type": "boolean",
							"title": "Is Enabled",
							"description": "To enable SEAS integration. This flag must be true",
							"default": false
						},
						"seasVersion": {
							"$id": "#/properties/integrations/properties/seasIntegration/properties/seasVersion",
							"type": "string",
							"title": "SEAS version",
							"description": "Version of the IBM Sterling SEAS.",
							"default": "1.0"
						}
					}
				}
			},
			"additionalProperties": true
		},
		"setupCfg": {
			"$id": "#/properties/setupCfg",
			"type": "object",
			"title": "Application configuration",
			"description": "Parameters for configuring the application",
			"default": {

			},
			"required": [
				"basePort",
				"licenseAcceptEnableSfg",
				"licenseAcceptEnableEbics",
				"licenseAcceptEnableFinancialServices",
				"licenseAcceptEnableFileOperation",
				"systemPassphraseSecret",
				"enableFipsMode",
				"nistComplianceMode",
				"dbVendor",
				"dbHost",
				"dbPort",
				"dbData",
				"dbCreateSchema",
				"oracleUseServiceName",
				"dbSecret"
			],
			"properties": {
				"basePort": {
					"$id": "#/properties/setupCfg/properties/basePort",
					"type": "integer",
					"title": "Application internal base port",
					"description": "Specifies the application port to used internally.",
					"default": 50000
				},
				"licenseAcceptEnableSfg": {
					"$id": "#/properties/setupCfg/properties/licenseAcceptEnableSfg",
					"type": "boolean",
					"title": "Consent for accepting license for Sterling File Gateway module",
					"description": "Set to true to install Sterling File Gateway. Otherwise, set to false.",
					"default": false
				},
				"licenseAcceptEnableEbics": {
					"$id": "#/properties/setupCfg/properties/licenseAcceptEnableEbics",
					"type": "boolean",
					"title": "Consent for accepting license for EBICs module",
					"description": "Set to true to install EBICS. Otherwise, set to false.",
					"default": false
				},
				"licenseAcceptEnableFinancialServices": {
					"$id": "#/properties/setupCfg/properties/licenseAcceptEnableFinancialServices",
					"type": "boolean",
					"title": "Consent for accepting license for EBICs client module",
					"description": "Set to true to install Financial Services Module. Otherwise, set to false.",
					"default": false
				},
				"licenseAcceptEnableFileOperation": {
					"$id": "#/properties/setupCfg/properties/licenseAcceptEnableFileOperation",
					"type": "boolean",
					"title": "Consent for accepting license for Enabling File Operations",
					"description": "Set to true to enable File Operations. Otherwise, set to false.",
					"default": false
				},
				"systemPassphraseSecret": {
					"$id": "#/properties/setupCfg/properties/systemPassphraseSecret",
					"type": "string",
					"title": "System Passphrase",
					"description": "The system passphrase secret name.",
					"default": {

					}
				},
				"enableFipsMode": {
					"$id": "#/properties/setupCfg/properties/enableFipsMode",
					"type": "boolean",
					"title": "FIPS mode",
					"description": "Set to true to enable FIPS compliance mode. Otherwise, set to false.",
					"default": false
				},
				"nistComplianceMode": {
					"$id": "#/properties/setupCfg/properties/nistComplianceMode",
					"type": "string",
					"title": "NIST compliance mode",
					"description": "NIST 800-131a compliance mode. Set to strict, transition or off.",
					"default": "off"
				},
				"dbVendor": {
					"$id": "#/properties/setupCfg/properties/dbVendor",
					"type": "string",
					"title": "Database Server Vendor",
					"description": "The database vendor name. It can be one of the following: DB2, Oracle, or MSSQL.",
					"default": null
				},
				"dbHost": {
					"$id": "#/properties/setupCfg/properties/dbHost",
					"type": "string",
					"title": "Database Host",
					"description": "The database host IP address.",
					"default": null
				},
				"dbPort": {
					"$id": "#/properties/setupCfg/properties/dbPort",
					"type": "integer",
					"title": "Database Port",
					"description": "The connection port for the database.",
					"default": null
				},
				"dbData": {
					"$id": "#/properties/setupCfg/properties/dbData",
					"type": "string",
					"title": "Database Name",
					"description": "he database name.",
					"default": null
				},
				"dbDrivers": {
					"$id": "#/properties/setupCfg/properties/dbDrivers",
					"type": "string",
					"title": "Database Driver",
					"description": "The name of database driver file.",
					"default": null
				},
				"dbCreateSchema": {
					"$id": "#/properties/setupCfg/properties/dbCreateSchema",
					"type": "boolean",
					"title": "Create a Database Schema",
					"description": "Set to true, if the database schema table needs to be created by the application. Otherwise, set to false.",
					"default": true
				},
				"oracleUseServiceName": {
					"$id": "#/properties/setupCfg/properties/oracleUseServiceName",
					"type": "boolean",
					"title": "Database Service User Name",
					"description": "Use service name only applicable if db vendor is Oracle.",
					"default": false
				},
				"usessl": {
					"$id": "#/properties/setupCfg/properties/usessl",
					"type": "boolean",
					"title": "Enable SSL for DB connection",
					"description": "Provide value as true if DB connection is over ssl.",
					"default": false
				},
				"dbSecret": {
					"$id": "#/properties/setupCfg/properties/dbSecret",
					"type": [
						"string",
						"null"
					],
					"title": "Database Secret",
					"description": "Database secret to provide database user name, password, key store password and trust store password.",
					"default": null
				},
				"dbTruststore": {
					"$id": "#/properties/setupCfg/properties/dbTruststore",
					"type": [
						"string",
						"null"
					],
					"title": "DB connection trust Store",
					"description": "Specify DB truststore file name including it's path relative to the mounted resources volume location, if applicable. If dbTruststoreSecret is mentioned, provide the name of the key holding the certificate data.",
					"default": null
				},
				"dbTruststoreSecret": {
					"$id": "#/properties/setupCfg/properties/dbTruststoreSecret",
					"type": [
						"string",
						"null"
					],
					"title": "DB connection trust Store Secret",
					"description": "Specify name of secret containing truststore certificates, if applicable.",
					"default": null
				},
				"dbKeystore": {
					"$id": "#/properties/setupCfg/properties/dbKeystore",
					"type": [
						"string",
						"null"
					],
					"title": "DB connection keystore",
					"description": "Specify DB keystore file name including it's path relative to the mounted resources volume location, if applicable. If dbKeystoreSecret is mentioned, provide the name of the key holding the certificate data.",
					"default": null
				},
				"dbKeystoreSecret": {
					"$id": "#/properties/setupCfg/properties/dbKeystoreSecret",
					"type": [
						"string",
						"null"
					],
					"title": "DB connection keystore Secret",
					"description": "Specify name of secret containing keystore certificates, if applicable.",
					"default": null
				},
				"adminEmailAddress": {
					"$id": "#/properties/setupCfg/properties/adminEmailAddress",
					"type": "string",
					"title": "Email address for the SMTP administrator",
					"description": "Specify the email address for the SMTP administrator.",
					"default": ""
				},
				"smtpHost": {
					"$id": "#/properties/setupCfg/properties/smtpHost",
					"type": "string",
					"title": "SMTP host details",
					"description": "Specify the SMTP host details.",
					"default": ""
				},
				"terminationGracePeriod": {
					"$id": "#/properties/setupCfg/properties/terminationGracePeriod",
					"type": [
						"number",
						"null"
					],
					"title": "Termination Grace Period",
					"description": "The time in seconds that Docker waits before shutting down the container after user runs the Docker stop command.",
					"default": 30
				},
				"jmsVendor": {
					"$id": "#/properties/setupCfg/properties/jmsVendor",
					"type": [
						"string",
						"null"
					],
					"title": "Name of the JMS Vendor",
					"description": "The MQ vendor name.To use IBMMQ as the messaging queue set the value to IBMMQ. All other connection details parameters are mandatory.",
					"default": null
				},
				"jmsConnectionFactory": {
					"$id": "#/properties/setupCfg/properties/jmsConnectionFactory",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the JMS Connection Factory Name",
					"description": "For IBM MQ, specify the class that is used as the JMS connection factory.",
					"default": null
				},
				"jmsConnectionFactoryInstantiator": {
					"$id": "#/properties/setupCfg/properties/jmsConnectionFactoryInstantiator",
					"type": [
						"string",
						"null"
					],
					"title": "JMS Connection",
					"description": "Specify the JMS Connection Factory Instantiator Name.",
					"default": null
				},
				"jmsQueueName": {
					"$id": "#/properties/setupCfg/properties/jmsQueueName",
					"type": [
						"string",
						"null"
					],
					"title": "JMS Queue",
					"description": "The name of the queue for the MQ vendor.",
					"default": null
				},
				"jmsHost": {
					"$id": "#/properties/setupCfg/properties/jmsHost",
					"type": [
						"string",
						"null"
					],
					"title": "JMS Host",
					"description": "The MQ Vendor Host.",
					"default": null
				},
				"jmsPort": {
					"$id": "#/properties/setupCfg/properties/jmsPort",
					"type": [
						"integer",
						"null"
					],
					"title": "JMS Port",
					"description": "The MQ vendor Port.",
					"default": null
				},
				"jmsConnectionNameList": {
					"$id": "#/properties/setupCfg/properties/jmsConnectionNameList",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the JMS Connection Name List",
					"description": "The host and port information of Active and Standby queue manager in the following format (comma separated).",
					"default": null
				},
				"jmsChannel": {
					"$id": "#/properties/setupCfg/properties/jmsChannel",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the JMS Channel Name",
					"description": "The MQ vendor channel. This is only applicable for IBMMQ.",
					"default": null
				},
				"jmsEnableSsl": {
					"$id": "#/properties/setupCfg/properties/jmsEnableSsl",
					"type": [
						"boolean",
						"null"
					],
					"title": "Enable SSL for JMS",
					"description": "Set to true to enable the secure communication with the MQ using SSL.",
					"default": false
				},
				"jmsSecret": {
					"$id": "#/properties/setupCfg/properties/jmsSecret",
					"type": [
						"string",
						"null"
					],
					"title": "JMS secret",
					"description": "Specify the JMS secret name.",
					"default": null
				},
				"jmsKeystorePath": {
					"$id": "#/properties/setupCfg/properties/jmsKeystorePath",
					"type": [
						"string",
						"null"
					],
					"title": "Mention Path of JMS key Store",
					"description": "Specify JMS keystore file name including it's path relative to the mounted resources volume location, if applicable. If jmsKeystoreSecret is mentioned, provide the name of the key holding the certificate data.",
					"default": null
				},
				"jmsKeystoreSecret": {
					"$id": "#/properties/setupCfg/properties/jmsKeystoreSecret",
					"type": [
						"string",
						"null"
					],
					"title": "Mention name of JMS key Store secret",
					"description": "Specify name of secret containing keystore certificates, if applicable.",
					"default": null
				},
				"jmsTruststorePath": {
					"$id": "#/properties/setupCfg/properties/jmsTruststorePath",
					"type": [
						"string",
						"null"
					],
					"title": "Mention Path of JMS Trust Store",
					"description": "Specify JMS truststore file name including it's path relative to the mounted resources volume location, if applicable. If jmsTruststoreSecret is mentioned, provide the name of the key holding the certificate data.",
					"default": null
				},
				"jmsTruststoreSecret": {
					"$id": "#/properties/setupCfg/properties/jmsTruststoreSecret",
					"type": [
						"string",
						"null"
					],
					"title": "Mention name of JMS trust Store secret",
					"description": "Specify name of secret containing truststore certificates, if applicable.",
					"default": null
				},
				"jmsCiphersuite": {
					"$id": "#/properties/setupCfg/properties/jmsCiphersuite",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the Cipher Suit to be Used for JMS",
					"description": "MQ specific ciphersuite required to open the secure SSL channel.",
					"default": null
				},
				"jmsProtocol": {
					"$id": "#/properties/setupCfg/properties/jmsProtocol",
					"type": "string",
					"title": "Specify the Protocol for JMS",
					"description": "Default value is TLS1.2. Use TLS1.2 protocol for SSL communication.",
					"default": "TLSv1.2"
				},
				"libertyKeystoreLocation": {
					"$id": "#/properties/setupCfg/properties/libertyKeystoreLocation",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the Location of Liberty key Store",
					"description": "Specify Liberty keystore file name including it's path relative to the mounted resources volume location, if applicable. If libertyKeystoreSecret is mentioned, provide the name of the key holding the certificate data.",
					"default": null
				},
				"libertyKeystoreSecret": {
					"$id": "#/properties/setupCfg/properties/libertyKeystoreSecret",
					"type": [
						"string",
						"null"
					],
					"title": "Mention name of Liberty key Store secret",
					"description": "Specify name of secret containing keystore certificates, if applicable.",
					"default": null
				},
				"libertyProtocol": {
					"$id": "#/properties/setupCfg/properties/libertyProtocol",
					"type": "string",
					"title": "Liberty SSL protocol",
					"description": "Default value is TLS1.2. Use TLS1.2 protocol for SSL communication.",
					"default": "TLSv1.2"
				},
				"libertySecret": {
					"$id": "#/properties/setupCfg/properties/libertySecret",
					"type": [
						"string",
						"null"
					],
					"title": "Liberty Secret",
					"description": "liberty SSL connection secret name.",
					"default": null
				},
				"libertyJvmOptions": {
					"$id": "#/properties/setupCfg/properties/libertyJvmOptions",
					"type": [
						"string",
						"null"
					],
					"title": "Specify the JVM options for Liberty",
					"description": "Updates JVM option parameters in jvm.options. If you do not pass this parameter, the values in jvm.options persist.",
					"default": null
				},
				"defaultDocumentStorageType": {
					"$id": "#/properties/setupCfg/properties/defaultDocumentStorageType",
					"type": "string",
					"title": "Default document storage type",
					"description": "This is the storage type for Document objects constructed without a storageType property.",
					"default": "DB"
				},
				"restartCluster": {
					"$id": "#/properties/setupCfg/properties/restartCluster",
					"type": "boolean",
					"title": "Restart Cluster",
					"description": "restartCluster can be set to true to restart the application cluster by cleaning up all previous node entries, locks and set the schedules to node1.",
					"default": false
				},
				"useSslForRmi": {
					"$id": "#/properties/setupCfg/properties/useSslForRmi",
					"type": "boolean",
					"title": "Enable SSL over RMI calls",
					"description": "useSslForRmi can be set to true to enable ssl over RMI calls.",
					"default": true
				},
                "rmiTlsSecretName": {
                    "$id": "#/properties/setupCfg/properties/rmiTlsSecretName",
                    "type": [
                                "string",
                                "null"
                            ],
                    "title": "RMI Secret Name",
                    "description": "Specify the RMI secret name.",
                    "default": null
                },
				"sapSncSecretName": {
                    "$id": "#/properties/setupCfg/properties/sapSncSecretName",
                    "type": [
                                "string",
                                "null"
                            ],
                    "title": "SAP SNC secret name",
                    "description": "Name of the secret holding SAP SNC PSE file and password.",
                    "default": null
                },
				"sapSncLibVendorName": {
                    "$id": "#/properties/setupCfg/properties/sapSncLibVendorName",
                    "type": [
                                "string",
                                "null"
                            ],
                    "title": "SAP SNC library vendor name",
                    "description": "SAP SNC library vendor name.",
                    "default": null
                },
				"sapSncLibVersion": {
                    "$id": "#/properties/setupCfg/properties/sapSncLibVersion",
                    "type": [
                                "string",
                                "null"
                            ],
                    "title": "SAP SNC library version",
                    "description": "SAP SNC library version.",
                    "default": null
                },
				"sapSncLibName": {
                    "$id": "#/properties/setupCfg/properties/sapSncLibName",
                    "type": [
                                "string",
                                "null"
                            ],
                    "title": "SAP SNC library name",
                    "description": "SAP SNC library name.",
                    "default": null
                }
			},
			"additionalProperties": true
		},
		"asi": {
			"$id": "#/properties/asi",
			"type": "object",
			"title": "Configurations for ASI server",
			"description": "Configurations for ASI Server pod.",
			"default": {

			},
			"required": [
				"replicaCount",
				"frontendService",
				"backendService",
				"livenessProbe",
				"readinessProbe",
                "startupProbe",
				"internalAccess",
				"ingress"
			],
			"properties": {
				"replicaCount": {
					"$id": "#/properties/asi/properties/replicaCount",
					"type": "integer",
					"title": "Replica Count",
					"description": "Number of replicas.",
					"default": 1
				},
				"env": {
					"$id": "#/properties/asi/properties/env",
					"type": "object",
					"title": "Environment Variables",
					"description": "Configure environment variables.",
					"default": {

					},
					"required": [

					],
					"properties": {
						"jvmOptions": {
							"$id": "#/properties/asi/properties/env/properties/jvmOptions",
							"type": [
								"string",
								"null"
							],
							"title": "JVM Options",
							"description": "JVM options for the asi runtime.",
							"default": null
						},
						"extraEnvs": {
							"$id": "#/properties/asi/properties/env/properties/extraEnvs",
							"type": ["array","object"],
							"title": "Extra environment variables",
							"description": "Provide extra environment variables for asi runtime.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/env/properties/extraEnvs/items",
								"type": "object"
							}
						}
					}
				},
				"frontendService": {
					"$id": "#/properties/asi/properties/frontendService",
					"type": "object",
					"title": "Frontend Service",
					"default": {

					},
					"required": [
						"type",
						"ports"
					],
					"properties": {
						"type": {
							"$id": "#/properties/asi/properties/frontendService/properties/type",
							"type": "string",
							"title": "Service type",
							"description": "Specify kubernetes service type.",
							"default": "ClusterIP"
						},
						"sessionAffinityConfig": {
							"$id": "#/properties/asi/properties/frontendService/properties/sessionAffinityConfig",
							"type": "object",
							"title": "Session Affinity Configuration",
							"default": {

							},
							"required": [
							],
							"properties": {
								"timeoutSeconds": {
									"$id": "#/properties/asi/properties/frontendService/properties/sessionAffinityConfig/properties/timeoutSeconds",
									"type": "integer",
									"title": "Timeout Seconds",
									"description": "Session affinity timeout seconds.",
									"default": 10800
								}
							}
						},
						"externalTrafficPolicy": {
							"$id": "#/properties/asi/properties/frontendService/properties/externalTrafficPolicy",
							"type": "string",
							"title": "External Traffic Policy",
							"description": "Route external traffic to node-local or cluster-wide endpoints.",
							"default": "Cluster",
							"enum": ["Cluster", "Local"]
						},
						"ports": {
							"$id": "#/properties/asi/properties/frontendService/properties/ports",
							"type": "object",
							"title": "Ports",
							"default": {

							},
							"required": [
								"http",
								"https",
								"soa",
								"soassl",
								"restHttpAdapter"
							],
							"properties": {
								"http": {
									"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http",
									"type": "object",
									"title": "HTTP",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http/properties/name",
											"type": "string",
											"title": "Port configurations",
											"description": "By default here port is http.",
											"default": "http"
										},
										"port": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35000
										},
										"targetPort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "http"
										},
										"nodePort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30000
										},
										"protocol": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/http/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								},
								"https": {
									"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https",
									"type": "object",
									"title": "HTTPS",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https/properties/name",
											"type": "string",
											"title": "port name",
											"description": "By default here port is https.",
											"default": "https"
										},
										"port": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35001
										},
										"targetPort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "https"
										},
										"nodePort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30001
										},
										"protocol": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/https/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								},
								"soa": {
									"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa",
									"type": "object",
									"title": "SOA",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa/properties/name",
											"type": "string",
											"title": "port name",
											"description": "By default here port is soa.",
											"default": "soa"
										},
										"port": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35002
										},
										"targetPort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "soa"
										},
										"nodePort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30002
										},
										"protocol": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soa/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								},
								"soassl": {
									"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl",
									"type": "object",
									"title": "SOASSL",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl/properties/name",
											"type": "string",
											"title": "port name",
											"description": "By default here port is soassl.",
											"default": "soassl"
										},
										"port": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35003
										},
										"targetPort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "soassl"
										},
										"nodePort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30003
										},
										"protocol": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/soassl/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								},
								"restHttpAdapter": {
									"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter",
									"type": "object",
									"title": "Rest Http Adapter",
									"description": "An explanation about the purpose of this instance.",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter/properties/name",
											"type": "string",
											"title": "port name",
											"description": "By default here port is rest-adapter.",
											"default": "rest-adapter"
										},
										"port": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35007
										},
										"targetPort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "rest-adapter"
										},
										"nodePort": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30007
										},
										"protocol": {
											"$id": "#/properties/asi/properties/frontendService/properties/ports/properties/restHttpAdapter/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								}
							},
							"additionalProperties": true
						},
						"extraPorts": {
							"$id": "#/properties/asi/properties/frontendService/properties/extraPorts",
							"type": ["object", "array"],
							"title": "Service extra Ports",
							"description": "User can Specify extra ports for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/frontendService/properties/extraPorts/items",
								"type": "object"
							}
						},
						"loadBalancerIP": {
							"$id": "#/properties/asi/properties/frontendService/properties/loadBalancerIP",
							"type": [
								"string",
								"null"
							],
							"title": "LoadBalancer IP",
							"description": "User can Specify LoadBalancer IP if service type as LoadBalancer.",
							"default": null
						},
						"annotations": {
							"$id": "#/properties/asi/properties/frontendService/properties/annotations",
							"type": "object",
							"title": "Annotations for asi frontend service",
							"description": "Specify annotations for this asi frontend service with name and value for each annotation.",
							"default": {

							},
							"required": [

							],
							"additionalProperties": true
						}
					}
				},
				"backendService": {
					"$id": "#/properties/asi/properties/backendService",
					"type": "object",
					"title": "Backend Service",
					"default": {

					},
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"$id": "#/properties/asi/properties/backendService/properties/type",
							"type": "string",
							"title": "Service type",
							"description": "Specify kubernetes service type.",
							"default": "LoadBalancer"
						},
						"sessionAffinity": {
							"$id": "#/properties/asi/properties/backendService/properties/sessionAffinity",
							"type": "string",
							"title": "Session Affinity",
							"description": "Used to maintain session affinity.",
							"default": "None",
							"enum": ["None", "ClientIP"]
						},
						"sessionAffinityConfig": {
							"$id": "#/properties/asi/properties/backendService/properties/sessionAffinityConfig",
							"type": "object",
							"title": "Session Affinity Configuration",
							"default": {

							},
							"required": [
							],
							"properties": {
								"timeoutSeconds": {
									"$id": "#/properties/asi/properties/backendService/properties/sessionAffinityConfig/properties/timeoutSeconds",
									"type": "integer",
									"title": "Timeout Seconds",
									"description": "Session affinity timeout seconds.",
									"default": 10800
								}
							}
						},						
						"externalTrafficPolicy": {
							"$id": "#/properties/asi/properties/backendService/properties/externalTrafficPolicy",
							"type": "string",
							"title": "External Traffic Policy",
							"description": "Route external traffic to node-local or cluster-wide endpoints.",
							"default": "Cluster",
							"enum": ["Cluster", "Local"]
						},
						"ports": {
							"$id": "#/properties/asi/properties/backendService/properties/ports",
							"type": ["object", "array"],
							"title": "Service Ports",
							"description": "User can specify ports for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/backendService/properties/ports/items",
								"type": "object"
							}
						},
						"portRanges": {
							"$id": "#/properties/asi/properties/backendService/properties/portRanges",
							"type": ["object", "array"],
							"title": "Service Port Ranges",
							"description": "User can specify port ranges for service.",
							"default": {},
							"required": [

							],
							"additionalProperties": true,
							"items": {
								"$id": "#/properties/asi/properties/backendService/properties/portRanges/items",
								"type": "object"
							}
						},
						"loadBalancerIP": {
							"$id": "#/properties/asi/properties/backendService/properties/loadBalancerIP",
							"type": [
								"string",
								"null"
							],
							"title": "LoadBalancer IP",
							"description": "User can Specify LoadBalancer IP if service type as LoadBalancer.",
							"default": null
						},
						"annotations": {
							"$id": "#/properties/asi/properties/backendService/properties/annotations",
							"type": "object",
							"title": "Annotations for asi backend service.",
							"description": "Specify annotations for this asi backend service with name and value for each annotation",
							"default": {

							},
							"required": [

							],
							"additionalProperties": true
						}
					}
				},
				"livenessProbe": {
					"$id": "#/properties/asi/properties/livenessProbe",
					"type": "object",
					"title": "Liveness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/asi/properties/livenessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for liveness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/asi/properties/livenessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for liveness probe.",
							"default": 30
						},
						"periodSeconds": {
							"$id": "#/properties/asi/properties/livenessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for liveness probe.",
							"default": 60
						}
					}
				},
				"readinessProbe": {
					"$id": "#/properties/asi/properties/readinessProbe",
					"type": "object",
					"title": "Readiness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/asi/properties/readinessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for readiness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/asi/properties/readinessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for readiness probe.",
							"default": 5
						},
						"periodSeconds": {
							"$id": "#/properties/asi/properties/readinessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for readiness probe.",
							"default": 60
						},
						"command": {
							"$id": "#/properties/asi/properties/readinessProbe/properties/command",
							"type": ["string",
								"null"],
							
							"title": "Command to be executed",
							"description": "Command to be executed for readiness probe.",
							"default": null
						},
						"arg": {
							"$id": "#/properties/asi/properties/readinessProbe/properties/arg",
							"type": "array",
							"title": "Command arguments",
							"description": "Command arguments for readiness probe.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/readinessProbe/properties/arg/items",
								"type": "string"
							}
						}
					}
				},
                                "startupProbe": {
                                        "$id": "#/properties/asi/properties/startupProbe",
                                        "type": "object",
                                        "title": "Startup Probe",
                                        "default": {

                                        },
                                        "required": [
                                                "initialDelaySeconds",
                                                "timeoutSeconds",
                                                "periodSeconds",
                                                "failureThreshold"
                                        ],
                                        "properties": {
                                                "initialDelaySeconds": {
                                                        "$id": "#/properties/asi/properties/startupProbe/properties/initialDelaySeconds",
                                                        "type": "integer",
                                                        "title": "Initial delay in seconds",
                                                        "description": "Initial delay in seconds for startup probe.",
                                                        "default": 60
                                                },
                                                "timeoutSeconds": {
                                                        "$id": "#/properties/asi/properties/startupProbe/properties/timeoutSeconds",
                                                        "type": "integer",
                                                        "title": "Timeout in seconds",
                                                        "description": "Timeout in seconds for startup probe.",
                                                        "default": 5
                                                },
                                                "periodSeconds": {
                                                        "$id": "#/properties/asi/properties/startupProbe/properties/periodSeconds",
                                                        "type": "integer",
                                                        "title": "Interval period in seconds",
                                                        "description": "Interval period in seconds for startup probe.",
                                                        "default": 60
                                                },
                                                "failureThreshold": {
                                                        "$id": "#/properties/asi/properties/startupProbe/properties/failureThreshold",
                                                        "type": "integer",
                                                        "title": "Failure threshold",
                                                        "description": "failure threshold for startup probe.",
                                                        "default": 3
                                                }
                                        }
                                },
				"internalAccess": {
					"$id": "#/properties/asi/properties/internalAccess",
					"type": "object",
					"title": "Internal Access",
					"default": {

					},
					"required": [
						"enableHttps"
					],
					"properties": {
						"enableHttps": {
							"$id": "#/properties/asi/properties/internalAccess/properties/enableHttps",
							"type": "boolean",
							"title": "Enable https for asi server",
							"description": "Set to enable https for asi server.",
							"default": true
						},
						"httpsPort": {
							"$id": "#/properties/asi/properties/internalAccess/properties/httpsPort",
							"type": [
								"integer",
								"null"
							],
							"title": "Https port for asi server",
							"description": "Set it to the https port configured.",
							"default": null
						},
						"tlsSecretName": {
							"$id": "#/properties/asi/properties/internalAccess/properties/tlsSecretName",
							"type": [
								"string",
								"null"
							],
							"title": "TLS Secret name for asi server",
							"description": "Set it to the TLS Secret name.",
							"default": null
						}
					}
				},
				"externalAccess": {
					"$id": "#/properties/asi/properties/externalAccess",
					"type": "object",
					"title": "External Access",
					"default": {

					},
					"required": [
						"protocol"
					],
					"properties": {
						"protocol": {
							"$id": "#/properties/asi/properties/externalAccess/properties/protocol",
							"type": "string",
							"title": "External protocol for asi server",
							"description": "Set it to a protocol via which asi services are accessible, if ingress is disabled. By default is it set to http.",
							"default": "http"
						},
						"address": {
							"$id": "#/properties/asi/properties/externalAccess/properties/address",
							"type": [
								"string",
								"null"
							],
							"title": "External address (host/IP) for asi server",
							"description": "Set it to an address via which asi services are accessible, if ingress is disabled.",
							"default": null
						},
						"port": {
							"$id": "#/properties/asi/properties/externalAccess/properties/port",
							"type": [
								"integer",
								"null"
							],
							"title": "External port asi service",
							"description": "Set it to a port via which asi services are accessible, if ingress is disabled.",
							"default": null
						}
					}
				},
				"ingress": {
					"$id": "#/properties/asi/properties/ingress",
					"type": "object",
					"title": "Ingress",
					"default": {

					},
					"required": [
						"internal",
						"external"
					],
					"properties": {
						"internal": {
							"$id": "#/properties/asi/properties/ingress/properties/internal",
							"type": "object",
							"title": "Internal",
							"default": {

							},
							"required": [],
							"properties": {
								"host": {
									"$id": "#/properties/asi/properties/ingress/properties/internal/properties/host",
									"type": [
										"string",
										"null"
									],
									"title": "Internal ingress host for asi server",
									"description": "Internally accessible ingress host dns name.",
									"default": null
								},
								"tls": {
									"$id": "#/properties/asi/properties/ingress/properties/internal/properties/tls",
									"type": "object",
									"title": "TLS",
									"default": {

									},
									"required": [
										"enabled"
									],
									"properties": {
										"enabled": {
											"$id": "#/properties/asi/properties/ingress/properties/internal/properties/tls/properties/enabled",
											"type": "boolean",
											"title": "TLS enabled for ingress host for asi server",
											"description": "TLS enabled for ingress host for asi server.",
											"default": true
										},
										"secretName": {
											"$id": "#/properties/asi/properties/ingress/properties/internal/properties/tls/properties/secretName",
											"type": "string",
											"title": "Secret name",
											"description": "Secret name for tls.",
											"default": ""
										}
									},
									"additionalProperties": true
								},
								"extraPaths": {
									"$id": "#/properties/asi/properties/ingress/properties/internal/properties/extraPaths",
									"type": ["object", "array"],
									"title": "Additional paths for ingress",
									"description": "Additional paths for web applications hosted on asi server.",
									"default": [

									],
									"additionalItems": true,
									"items": {
										"$id": "#/properties/asi/properties/ingress/properties/internal/properties/extraPaths/items",
										"type": "object"
									}
								}
							}
						},
						"external": {
							"$id": "#/properties/asi/properties/ingress/properties/external",
							"type": "object",
							"title": "External",
							"default": {

							},
							"required": [],
							"properties": {
								"host": {
									"$id": "#/properties/asi/properties/ingress/properties/external/properties/host",
									"type": [
										"string",
										"null"
									],
									"title": "External ingress host for asi server",
									"description": "Publicly accessible ingress host dns name.",
									"default": null
								},
								"tls": {
									"$id": "#/properties/asi/properties/ingress/properties/external/properties/tls",
									"type": "object",
									"title": "TLS",
									"default": {

									},
									"required": [
										"enabled"
									],
									"properties": {
										"enabled": {
											"$id": "#/properties/asi/properties/ingress/properties/external/properties/tls/properties/enabled",
											"type": "boolean",
											"title": "TLS enabled for ingress host for asi server",
											"description": "TLS enabled for ingress host for asi server.",
											"default": true
										},
										"secretName": {
											"$id": "#/properties/asi/properties/ingress/properties/external/properties/tls/properties/secretName",
											"type": "string",
											"title": "Secret name",
											"description": "Secret name for tls.",
											"default": ""
										}
									}
								},
								"extraPaths": {
									"$id": "#/properties/asi/properties/ingress/properties/external/properties/extraPaths",
									"type": ["object", "array"],
									"title": "Additional paths for ingress",
									"description": "Additional paths for web applications hosted on asi server.",
									"default": [

									],
									"additionalItems": true,
									"items": {
										"$id": "#/properties/asi/properties/ingress/properties/external/properties/extraPaths/items",
										"type": "object"
									}
								}
							}
						}
					}
				},
				"extraPVCs": {
					"$id": "#/properties/asi/properties/extraPVCs",
					"type": ["object", "array"],
					"title": "Extra Volume",
					"description": "User can use this property for extra persistent volume claim",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/extraPVCs/items",
						"type": "object"
					}
				},
				"extraInitContainers": {
					"$id": "#/properties/asi/properties/extraInitContainers",
					"type": ["object", "array"],
					"title": "Extra Init Containers",
					"description": "Additional init containers, e. g. for providing custom themes.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/extraInitContainers/items",
						"type": "object"
					}
				},
				"resources": {
					"$id": "#/properties/asi/properties/resources",
					"type": ["object","null"],
					"title": "Resources",
					"default": {

					},
					"required": [
						
					],
					"properties": {
						"limits": {
							"$id": "#/properties/asi/properties/resources/properties/limits",
							"type": "object",
							"title": "Limits",
							"default": {

							},
							"required": [
								
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/asi/properties/resources/properties/limits/properties/cpu",
									"type": "string",
									"title": "CPU limit",
									"description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "4000m"
								},
								"memory": {
									"$id": "#/properties/asi/properties/resources/properties/limits/properties/memory",
									"type": "string",
									"title": "Memory limit",
									"description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "8Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/asi/properties/resources/properties/limits/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The ephemeral storage upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								}
							}
						},
						"requests": {
							"$id": "#/properties/asi/properties/resources/properties/requests",
							"type": "object",
							"title": "Requests",
							"default": {

							},
							"required": [
								
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/asi/properties/resources/properties/requests/properties/cpu",
									"type": "string",
									"title": "CPU request",
									"description": "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "2000m"
								},
								"memory": {
									"$id": "#/properties/asi/properties/resources/properties/requests/properties/memory",
									"type": "string",
									"title": "Memory request",
									"description": "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/asi/properties/resources/properties/requests/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The minimum ephemeral storage in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "2Gi"
								}
							}
						}
					}
				},
				"autoscaling": {
					"$id": "#/properties/asi/properties/autoscaling",
					"type": "object",
					"title": "Autoscaling",
					"default": {

					},
					"required": [
						"enabled",
						"minReplicas",
						"maxReplicas",
						"targetCPUUtilizationPercentage"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/asi/properties/autoscaling/properties/enabled",
							"type": "boolean",
							"title": "Enable Automatic Scaling",
							"description": "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field.",
							"default": false
						},
						"minReplicas": {
							"$id": "#/properties/asi/properties/autoscaling/properties/minReplicas",
							"type": "integer",
							"title": "Minimum Number of Replicas",
							"description": "Lower limit for the number of pods that can be set by the autoscaler.",
							"default": 1
						},
						"maxReplicas": {
							"$id": "#/properties/asi/properties/autoscaling/properties/maxReplicas",
							"type": "integer",
							"title": "Maximum Number of Replicas",
							"description": "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas.",
							"default": 2
						},
						"targetCPUUtilizationPercentage": {
							"$id": "#/properties/asi/properties/autoscaling/properties/targetCPUUtilizationPercentage",
							"type": "integer",
							"title": "Target CPU Utilization Percentage",
							"description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods.",
							"default": 60
						}
					}
				},
				"defaultPodDisruptionBudget": {
					"$id": "#/properties/asi/properties/defaultPodDisruptionBudget",
					"type": "object",
					"title": "Default Pod Disruption Budget",
					"default": {

					},
					"required": [
						"enabled",
						"minAvailable"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/asi/properties/defaultPodDisruptionBudget/properties/enabled",
							"type": "boolean",
							"title": "Enable Pod Disruption pods",
							"description": "Enable pod disruption budget for deployment.",
							"default": false
						},
						"minAvailable": {
							"$id": "#/properties/asi/properties/defaultPodDisruptionBudget/properties/minAvailable",
							"type": "integer",
							"title": "min Available pod",
							"description": "Specify minimum number of pods for PodDisruptionBudget.",
							"default": 1
						}
					}
				},
				"extraLabels": {
					"$id": "#/properties/asi/properties/extraLabels",
					"type": "object",
					"title": "Extra Labels",
					"description": "Extra Labels.",
					"default": {

					},
					"required": [

					],
					"additionalProperties": true
				},
				"nodeAffinity": {
					"$id": "#/properties/asi/properties/nodeAffinity",
					"type": "object",
					"title": "Node Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAffinity": {
					"$id": "#/properties/asi/properties/podAffinity",
					"type": "object",
					"title": "Pod Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAntiAffinity": {
					"$id": "#/properties/asi/properties/podAntiAffinity",
					"type": "object",
					"title": "Pod Anti Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Anti Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/asi/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Anti Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"topologySpreadConstraints": {
					"$id": "#/properties/asi/properties/topologySpreadConstraints",
					"type": ["object", "array"],
					"title": "Topology spread constraints for pods",
					"description": "Topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/topologySpreadConstraints/items",
						"type": "object"
					}
				},
				"tolerations": {
					"$id": "#/properties/asi/properties/tolerations",
					"type": ["object", "array"],
					"title": "Tolerations for pods",
					"description": "Tolerations are applied to pods, and allow the pods to schedule onto nodes with matching taints.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/tolerations/items",
						"type": "object"
					}
				},
				"extraSecrets": {
					"$id": "#/properties/asi/properties/extraSecrets",
					"type": ["object", "array"],
					"title": "Extra secrets",
					"description": "If mountAsVolume set to true, the secrets will be mounted as a volume on /ibm/resources/<secret-name> directory else they will be exposed as environment variables.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/extraSecrets/items",
						"type": "object"
					}
				},
				"extraConfigMaps": {
					"$id": "#/properties/asi/properties/extraConfigMaps",
					"type": ["object", "array"],
					"title": "Extra configmaps",
					"description": "If mountAsVolume set to true, the configmap will be mounted as a volume on /ibm/resources/<configmap-name> directory else they will be exposed as environment variables.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/extraConfigMaps/items",
						"type": "object"
					}
				},
				"myFgAccess": {
					"$id": "#/properties/asi/properties/myFgAccess",
					"type": "object",
					"title": "myFG access",
					"description": "Access to myFG hosted on HTTP Server adapter on ASI server.",
					"default": {

					},
					"required": [

					],
					"properties": {
						"myFgPort": {
							"$id": "#/properties/asi/properties/myFgAccess/properties/myFgPort",
							"type": [
								"integer",
								"null"
							],
							"title": "myFG port",
							"description": "Internal HTTP Server Adapter port where myFG is deployed.",
							"default": null
						},
						"myFgProtocol": {
							"$id": "#/properties/asi/properties/myFgAccess/properties/myFgProtocol",
							"type": [
								"string",
								"null"
							],
							"title": "myFG protocol",
							"description": "Internal HTTP Server Adapter protocol where myFG is deployed.",
							"default": null
						}
					}
				},
				"hostAliases": {
					"$id": "#/properties/asi/properties/hostAliases",
					"type": ["object", "array"],
					"title": "Host aliases for pods",
					"description": "Host aliases to be added to pod /etc/hosts.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/asi/properties/hostAliases/items",
						"type": "object"
					}
				},
				"performanceTuning": {
					"$id": "#/properties/asi/properties/performanceTuning",
					"type": "object",
					"title": "Performance tuning",
					"description": "Configure the performance tuning for recommended values.",
					"default": {

					},
					"required": [
						"allocateMemToSAP"
					],
					"properties": {
						"allocateMemToSAP": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/allocateMemToSAP",
							"type": "boolean",
							"title": "Allocate Memory to SAP",
							"description": "Provide true to allocate Memory to SAP.",
							"default": false
						},
						"allocateMemToBI": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/allocateMemToBI",
							"type": "boolean",
							"title": "Allocate Memory to BI",
							"description": "Provide true to allocate Memory to BI.",
							"default": false
						},
						"allocateMemToCLA": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/allocateMemToCLA",
							"type": "boolean",
							"title": "Allocate Memory to CLA",
							"description": "Provide true to allocate Memory to CLA.",
							"default": false
						},
						"threadsPerCore": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/threadsPerCore",
							"type": "integer",
							"title": "threads per core",
							"description": "Number of threads per core which usually helps in calculating Desired Global Threads and Distribution Cache Minimum.",
							"default": 1
						},
						"override": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/override",
							"type": ["object", "array"],
							"description": "To override the suggested value by the system.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/asi/properties/env/properties/extraEnvs/items",
								"type": "string"
							}
						}
					}
				},
				"networkPolicies": {
					"$id": "#/properties/asi/properties/networkPolicies",
					"type": "object",
					"title": "Network Policies",
					"default": {

					},
					"required": [
						
					],
					"properties": {
						"ingress": {
							"$id": "#/properties/asi/properties/networkPolicies/properties/ingress",
							"type": "object",
							"title": "Ingress",
							"description": "Specify configurations for ingress resource for asi pods.",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/asi/properties/networkPolicies/properties/ingress/properties/customPolicies",
									"type": ["object","array", "null"],
									"title": "Custom ingress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific ingress endpoints.",
									"default": [],
									"additionalProperties": true,
									"items": {
										"$id": "#/properties/asi/properties/networkPolicies/properties/ingress/properties/customPolicies/items",
										"type": "object",
										"default": {}
									}
								}
							}
						},
						"egress": {
							"$id": "#/properties/asi/properties/networkPolicies/properties/egress",
							"type": "object",
							"title": "Egress",
							"description": "Specify configurations for egress resource for asi pods.",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/asi/properties/networkPolicies/properties/egress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom egress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific egress endpoints.",
									"additionalProperties": true,
									"items": {
										"$id": "#/properties/asi/properties/networkPolicies/properties/egress/properties/customPolicies/items",
										"type": "object",
										"default": {}
									}

								}
							}
						}
					}
				}
			}
		},
		"ac": {
			"$id": "#/properties/ac",
			"type": "object",
			"title": "Configurations for AC server",
			"description": "Configurations for AC Server pod.",
			"default": {

			},
			"required": [
				"replicaCount",
				"frontendService",
				"backendService",
				"livenessProbe",
				"readinessProbe",
				"internalAccess",
				"ingress"
			],
			"properties": {
				"replicaCount": {
					"$id": "#/properties/ac/properties/replicaCount",
					"type": "integer",
					"title": "Replica Count",
					"description": "Number of replicas.",
					"default": 1
				},
				"env": {
					"$id": "#/properties/ac/properties/env",
					"type": "object",
					"title": "Environment Variables",
					"description": "Configure environment variables.",
					"default": {

					},
					"required": [],
					"properties": {
						"jvmOptions": {
							"$id": "#/properties/ac/properties/env/properties/jvmOptions",
							"type": [
								"string",
								"null"
							],
							"title": "JVM Options",
							"description": "JVM options for the ac runtime.",
							"default": null
						},
						"extraEnvs": {
							"$id": "#/properties/ac/properties/env/properties/extraEnvs",
							"type": ["object", "array"],
							"title": "Extra environment variables",
							"description": "Provide extra environment variables for asi runtime.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/env/properties/extraEnvs/items",
								"type": "object"
							}
						}
					}
				},
				"frontendService": {
					"$id": "#/properties/ac/properties/frontendService",
					"type": "object",
					"title": "Frontend Service",
					"default": {

					},
					"required": [
						"type",
						"ports"
					],
					"properties": {
						"type": {
							"$id": "#/properties/ac/properties/frontendService/properties/type",
							"type": "string",
							"title": "Service type",
							"description": "Specify kubernetes service type.",
							"default": "ClusterIP"
						},
						"sessionAffinityConfig": {
							"$id": "#/properties/ac/properties/frontendService/properties/sessionAffinityConfig",
							"type": "object",
							"title": "Session Affinity Configuration",
							"default": {

							},
							"required": [
							],
							"properties": {
								"timeoutSeconds": {
									"$id": "#/properties/ac/properties/frontendService/properties/sessionAffinityConfig/properties/timeoutSeconds",
									"type": "integer",
									"title": "Timeout Seconds",
									"description": "Session affinity timeout seconds.",
									"default": 10800
								}
							}
						},
						"externalTrafficPolicy": {
							"$id": "#/properties/ac/properties/frontendService/properties/externalTrafficPolicy",
							"type": "string",
							"title": "External Traffic Policy",
							"description": "Route external traffic to node-local or cluster-wide endpoints.",
							"default": "Cluster",
							"enum": ["Cluster", "Local"]
						},
						"ports": {
							"$id": "#/properties/ac/properties/frontendService/properties/ports",
							"type": "object",
							"title": "Ports",
							"default": {

							},
							"required": [
								"http"
							],
							"properties": {
								"http": {
									"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http",
									"type": "object",
									"title": "HTTP",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http/properties/name",
											"type": "string",
											"title": "port configurations",
											"description": "By default here port is http.",
											"default": "http"
										},
										"port": {
											"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35004
										},
										"targetPort": {
											"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "http"
										},
										"nodePort": {
											"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30004
										},
										"protocol": {
											"$id": "#/properties/ac/properties/frontendService/properties/ports/properties/http/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								}
							},
							"additionalProperties": true
						},
						"extraPorts": {
							"$id": "#/properties/ac/properties/frontendService/properties/extraPorts",
							"type": ["object", "array"],
							"title": "Service extra Ports",
							"description": "User can Specify extra ports for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/frontendService/properties/extraPorts/items",
								"type": "object"
							}
						},
						"loadBalancerIP": {
							"$id": "#/properties/ac/properties/frontendService/properties/loadBalancerIP",
							"type": [
								"string",
								"null"
							],
							"title": "LoadBalancer IP",
							"description": "User can Specify LoadBalancer IP if service type as LoadBalancer.",
							"default": null
						},
						"annotations": {
							"$id": "#/properties/ac/properties/frontendService/properties/annotations",
							"type": "object",
							"title": "Annotations for ac frontend service",
							"description": "Specify annotations for this ac frontend service with name and value for each annotation.",
							"default": {

							},
							"required": [

							],
							"additionalProperties": true
						}
					}
				},
				"backendService": {
					"$id": "#/properties/ac/properties/backendService",
					"type": "object",
					"title": "Backend Service",
					"default": {

					},
					"required": [
						"type"
					],
					"properties": {
						"type": {
							"$id": "#/properties/ac/properties/backendService/properties/type",
							"type": "string",
							"title": "Service type",
							"description": "Specify kubernetes service type.",
							"default": "LoadBalancer"
						},
						"sessionAffinity": {
							"$id": "#/properties/ac/properties/backendService/properties/sessionAffinity",
							"type": "string",
							"title": "Session Affinity",
							"description": "Used to maintain session affinity.",
							"default": "None",
							"enum": ["None", "ClientIP"]
						},
						"sessionAffinityConfig": {
							"$id": "#/properties/ac/properties/backendService/properties/sessionAffinityConfig",
							"type": "object",
							"title": "Session Affinity Configuration",
							"default": {

							},
							"required": [
							],
							"properties": {
								"timeoutSeconds": {
									"$id": "#/properties/ac/properties/backendService/properties/sessionAffinityConfig/properties/timeoutSeconds",
									"type": "integer",
									"title": "Timeout Seconds",
									"description": "Session affinity timeout seconds.",
									"default": 10800
								}
							}
						},
						"externalTrafficPolicy": {
							"$id": "#/properties/ac/properties/backendService/properties/externalTrafficPolicy",
							"type": "string",
							"title": "External Traffic Policy",
							"description": "Route external traffic to node-local or cluster-wide endpoints.",
							"default": "Cluster",
							"enum": ["Cluster", "Local"]
						},
						"ports": {
							"$id": "#/properties/ac/properties/backendService/properties/ports",
							"type": ["object", "array"],
							"title": "Service Ports",
							"description": "User can specify ports for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/backendService/properties/ports/items",
								"type": "object"
							}
						},
						"portRanges": {
							"$id": "#/properties/ac/properties/backendService/properties/portRanges",
							"type": ["object", "array"],
							"title": "Service Port Ranges",
							"description": "User can specify port ranges for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/backendService/properties/portRanges/items",
								"type": "object"
							}
						},
						"loadBalancerIP": {
							"$id": "#/properties/ac/properties/backendService/properties/loadBalancerIP",
							"type": [
								"string",
								"null"
							],
							"title": "LoadBalancer IP",
							"description": "User can Specify LoadBalancer IP if service type as LoadBalancer.",
							"default": null
						},
						"annotations": {
							"$id": "#/properties/ac/properties/backendService/properties/annotations",
							"type": "object",
							"title": "Annotations for ac backend service.",
							"description": "Specify annotations for this ac backend service with name and value for each annotation",
							"default": {

							},
							"required": [

							],
							"additionalProperties": true
						}
					}
				},
				"livenessProbe": {
					"$id": "#/properties/ac/properties/livenessProbe",
					"type": "object",
					"title": "Liveness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/ac/properties/livenessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for liveness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/ac/properties/livenessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for liveness probe.",
							"default": 5
						},
						"periodSeconds": {
							"$id": "#/properties/ac/properties/livenessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for liveness probe.",
							"default": 60
						}
					}
				},
				"readinessProbe": {
					"$id": "#/properties/ac/properties/readinessProbe",
					"type": "object",
					"title": "Readiness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/ac/properties/readinessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for readiness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/ac/properties/readinessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for readiness probe.",
							"default": 5
						},
						"periodSeconds": {
							"$id": "#/properties/ac/properties/readinessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for readiness probe.",
							"default": 60
						},
						"command": {
							"$id": "#/properties/ac/properties/readinessProbe/properties/command",
							"type": [
								"string",
								"null"
							],
							"title": "Command to be executed",
							"description": "Command to be executed for readiness probe.",
							"default": null
						},
						"arg": {
							"$id": "#/properties/ac/properties/readinessProbe/properties/arg",
							"type": "array",
							"title": "Command arguments",
							"description": "Command arguments for readiness probe.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/readinessProbe/properties/arg/items",
								"type": "string"
							}
						}
					}
				},
				"internalAccess": {
					"$id": "#/properties/ac/properties/internalAccess",
					"type": "object",
					"title": "Internal Access",
					"default": {

					},
					"required": [
						"enableHttps"
					],
					"properties": {
						"enableHttps": {
							"$id": "#/properties/ac/properties/internalAccess/properties/enableHttps",
							"type": "boolean",
							"title": "Enable https for ac server",
							"description": "Set to enable https for ac server.",
							"default": true
						},
						"tlsSecretName": {
							"$id": "#/properties/ac/properties/internalAccess/properties/tlsSecretName",
							"type": [
								"string",
								"null"
							],
							"title": "TLS Secret name for ac server",
							"description": "Set it to the TLS Secret name.",
							"default": null
						}
					}
				},
				"ingress": {
					"$id": "#/properties/ac/properties/ingress",
					"type": "object",
					"title": "Ingress",
					"default": {

					},
					"required": [
						"internal",
						"external"
					],
					"properties": {
						"internal": {
							"$id": "#/properties/ac/properties/ingress/properties/internal",
							"type": "object",
							"title": "Internal",
							"default": {

							},
							"required": [],
							"properties": {
								"host": {
									"$id": "#/properties/ac/properties/ingress/properties/internal/properties/host",
									"type": ["string","null"],
									"title": "Internal ingress host for ac server",
									"description": "Internally accessible ingress host dns name.",
									"default": null
								},
								"tls": {
									"$id": "#/properties/ac/properties/ingress/properties/internal/properties/tls",
									"type": "object",
									"title": "TLS",
									"default": {

									},
									"required": [
										"enabled"
									],
									"properties": {
										"enabled": {
											"$id": "#/properties/ac/properties/ingress/properties/internal/properties/tls/properties/enabled",
											"type": "boolean",
											"title": "TLS enabled for ingress host for ac server",
											"description": "TLS enabled for ingress host for ac server.",
											"default": true
										},
										"secretName": {
											"$id": "#/properties/ac/properties/ingress/properties/internal/properties/tls/properties/secretName",
											"type": "string",
											"title": "Secret name",
											"description": "Secret name for tls.",
											"default": ""
										}
									}
								},
								"extraPaths": {
									"$id": "#/properties/ac/properties/ingress/properties/internal/properties/extraPaths",
									"type": ["object", "array"],
									"title": "Additional paths for ingress",
									"description": "Additional paths for web applications hosted on ac server.",
									"default": [

									],
									"additionalItems": true,
									"items": {
										"$id": "#/properties/ac/properties/ingress/properties/internal/properties/extraPaths/items",
										"type": "object"
									}
								}
							}
						},
						"external": {
							"$id": "#/properties/ac/properties/ingress/properties/external",
							"type": "object",
							"title": "External",
							"default": {

							},
							"required": [],
							"properties": {
								"host": {
									"$id": "#/properties/ac/properties/ingress/properties/external/properties/host",
									"type": [
										"string",
										"null"
									],
									"title": "External ingress host for ac server",
									"description": "Publicly accessible ingress host dns name.",
									"default": null
								},
								"tls": {
									"$id": "#/properties/ac/properties/ingress/properties/external/properties/tls",
									"type": "object",
									"title": "TLS",
									"default": {

									},
									"required": [
										"enabled"
									],
									"properties": {
										"enabled": {
											"$id": "#/properties/ac/properties/ingress/properties/external/properties/tls/properties/enabled",
											"type": "boolean",
											"title": "TLS enabled for ingress host for ac server",
											"description": "TLS enabled for ingress host for ac server.",
											"default": true
										},
										"secretName": {
											"$id": "#/properties/ac/properties/ingress/properties/external/properties/tls/properties/secretName",
											"type": [
												"string",
												"null"
											],
											"title": "Secret name",
											"description": "Secret name for tls.",
											"default": null
										}
									}
								},
								"extraPaths": {
									"$id": "#/properties/ac/properties/ingress/properties/external/properties/extraPaths",
									"type": ["object", "array"],
									"title": "Additional paths for ingress",
									"description": "Additional paths for web applications hosted on ac server.",
									"default": [

									],
									"additionalItems": true,
									"items": {
										"$id": "#/properties/ac/properties/ingress/properties/external/properties/extraPaths/items",
										"type": "object"
									}
								}
							}
						}
					}
				},
				"extraPVCs": {
					"$id": "#/properties/ac/properties/extraPVCs",
					"type": ["object", "array"],
					"title": "Extra Volume",
					"description": "User can use this property for extra persistent volume claim",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/extraPVCs/items",
						"type": "object"
					}
				},
				"extraInitContainers": {
					"$id": "#/properties/ac/properties/extraInitContainers",
					"type": ["object", "array"],
					"title": "Extra Init Containers",
					"description": "Additional init containers, e. g. for providing custom themes.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/extraInitContainers/items",
						"type": "object"
					}
				},
				"resources": {
					"$id": "#/properties/ac/properties/resources",
					"type": ["object","null"],
					"title": "Resources",
					"default": {

					},
					"required": [
						
					],
					"properties": {
						"limits": {
							"$id": "#/properties/ac/properties/resources/properties/limits",
							"type": "object",
							"title": "Limits",
							"default": {

							},
							"required": [
								
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/ac/properties/resources/properties/limits/properties/cpu",
									"type": "string",
									"title": "CPU limit",
									"description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "4000m"
								},
								"memory": {
									"$id": "#/properties/ac/properties/resources/properties/limits/properties/memory",
									"type": "string",
									"title": "Memory limit",
									"description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "8Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/ac/properties/resources/properties/limits/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The ephemeral storage upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								}
							}
						},
						"requests": {
							"$id": "#/properties/ac/properties/resources/properties/requests",
							"type": "object",
							"title": "Requests",
							"default": {

							},
							"required": [
			
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/ac/properties/resources/properties/requests/properties/cpu",
									"type": "string",
									"title": "CPU request",
									"description": "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "2000m"
								},
								"memory": {
									"$id": "#/properties/ac/properties/resources/properties/requests/properties/memory",
									"type": "string",
									"title": "Memory request",
									"description": "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/ac/properties/resources/properties/requests/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The minimum ephemeral storage in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "2Gi"
								}
							}
						}
					}
				},
				"autoscaling": {
					"$id": "#/properties/ac/properties/autoscaling",
					"type": "object",
					"title": "Autoscaling",
					"default": {

					},
					"required": [
						"enabled",
						"minReplicas",
						"maxReplicas",
						"targetCPUUtilizationPercentage"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/ac/properties/autoscaling/properties/enabled",
							"type": "boolean",
							"title": "Enable Automatic Scaling",
							"description": "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field.",
							"default": false
						},
						"minReplicas": {
							"$id": "#/properties/ac/properties/autoscaling/properties/minReplicas",
							"type": "integer",
							"title": "Minimum Number of Replicas",
							"description": "Lower limit for the number of pods that can be set by the autoscaler.",
							"default": 1
						},
						"maxReplicas": {
							"$id": "#/properties/ac/properties/autoscaling/properties/maxReplicas",
							"type": "integer",
							"title": "Maximum Number of Replicas",
							"description": "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas.",
							"default": 2
						},
						"targetCPUUtilizationPercentage": {
							"$id": "#/properties/ac/properties/autoscaling/properties/targetCPUUtilizationPercentage",
							"type": "integer",
							"title": "Target CPU Utilization Percentage",
							"description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods.",
							"default": 60
						}
					}
				},
				"defaultPodDisruptionBudget": {
					"$id": "#/properties/ac/properties/defaultPodDisruptionBudget",
					"type": "object",
					"title": "Default Pod Disruption Budget",
					"default": {

					},
					"required": [
						"enabled",
						"minAvailable"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/ac/properties/defaultPodDisruptionBudget/properties/enabled",
							"type": "boolean",
							"title": "Enable Pod Disruption pods",
							"description": "Enable pod disruption budget for deployment.",
							"default": false
						},
						"minAvailable": {
							"$id": "#/properties/ac/properties/defaultPodDisruptionBudget/properties/minAvailable",
							"type": "integer",
							"title": "min Available pod",
							"description": "Specify minimum number of pods for PodDisruptionBudget.",
							"default": 1
						}
					}
				},
				"extraLabels": {
					"$id": "#/properties/ac/properties/extraLabels",
					"type": "object",
					"title": "Extra Labels",
					"description": "Extra Labels.",
					"default": {

					},
					"required": [

					],
					"additionalProperties": true
				},
				"nodeAffinity": {
					"$id": "#/properties/ac/properties/nodeAffinity",
					"type": "object",
					"title": "Node Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAffinity": {
					"$id": "#/properties/ac/properties/podAffinity",
					"type": "object",
					"title": "Pod Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Pod Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Pod Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAntiAffinity": {
					"$id": "#/properties/ac/properties/podAntiAffinity",
					"type": "object",
					"title": "Pod Anti Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Pod Anti Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/ac/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["object", "array"],
							"title": "Pod Anti Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/ac/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"topologySpreadConstraints": {
					"$id": "#/properties/ac/properties/topologySpreadConstraints",
					"type": ["object", "array"],
					"title": "Topology spread constraints for pods",
					"description": "Topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/topologySpreadConstraints/items",
						"type": "object"
					}
				},
				"tolerations": {
					"$id": "#/properties/ac/properties/tolerations",
					"type": ["object", "array"],
					"title": "Tolerations for pods",
					"description": "Tolerations are applied to pods, and allow the pods to schedule onto nodes with matching taints.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/tolerations/items",
						"type": "object"
					}
				},
				"extraSecrets": {
					"$id": "#/properties/ac/properties/extraSecrets",
					"type": ["object", "array"],
					"title": "The extraSecrets schema",
					"description": "An explanation about the purpose of this instance.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/extraSecrets/items",
						"type": "object"
					}
				},
				"extraConfigMaps": {
					"$id": "#/properties/ac/properties/extraConfigMaps",
					"type": ["object", "array"],
					"title": "Extra secrets",
					"description": "If mountAsVolume set to true, the secrets will be mounted as a volume on /ibm/resources/<secret-name> directory else they will be exposed as environment variables.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/extraSecrets/items",
						"type": "object"
					}
				},
				"myFgAccess": {
					"$id": "#/properties/ac/properties/myFgAccess",
					"type": "object",
					"title": "myFG access",
					"description": "Access to myFG hosted on HTTP Server adapter on AC server.",
					"default": {

					},
					"required": [

					],
					"properties": {
						"myFgPort": {
							"$id": "#/properties/ac/properties/myFgAccess/properties/myFgPort",
							"type": [
								"integer",
								"null"
							],
							"title": "myFG port",
							"description": "Internal HTTP Server Adapter port where myFG is deployed.",
							"default": null
						},
						"myFgProtocol": {
							"$id": "#/properties/ac/properties/myFgAccess/properties/myFgProtocol",
							"type": [
								"string",
								"null"
							],
							"title": "myFG protocol",
							"description": "Internal HTTP Server Adapter protocol where myFG is deployed.",
							"default": null
						}
					}
				},
				"hostAliases": {
					"$id": "#/properties/ac/properties/hostAliases",
					"type": ["object", "array"],
					"title": "Host aliases for pods",
					"description": "Host aliases to be added to pod /etc/hosts.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/ac/properties/hostAliases/items",
						"type": "object"
					}
				},
				"performanceTuning": {
					"$id": "#/properties/ac/properties/performanceTuning",
					"type": "object",
					"title": "Performance tuning",
					"description": "Configure the performance tuning for recommended values.",
					"default": {

					},
					"required": [
						"allocateMemToSAP"
					],
					"properties": {
						"allocateMemToSAP": {
							"$id": "#/properties/asi/properties/performanceTuning/properties/allocateMemToSAP",
							"type": "boolean",
							"title": "Allocate Memory to SAP",
							"description": "Provide true to allocate Memory to SAP.",
							"default": false
						}
					}
				},
				"networkPolicies": {
					"$id": "#/properties/ac/properties/networkPolicies",
					"type": "object",
					"title": "Network Policies",
					"default": {

					},
					"required": [],
					"properties": {
						"ingress": {
							"$id": "#/properties/ac/properties/networkPolicies/properties/ingress",
							"type": "object",
							"title": "Ingress",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/ac/properties/networkPolicies/properties/ingress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom ingress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific ingress endpoints.",
									"default": null,
									"additionalProperties": true,
									"items": {
										"$id": "#/properties/ac/properties/networkPolicies/properties/ingress/properties/customPolicies/items",
										"type": "object"
									}
								}
							}
						},
						"egress": {
							"$id": "#/properties/ac/properties/networkPolicies/properties/egress",
							"type": "object",
							"title": "Egress",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/ac/properties/networkPolicies/properties/egress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom egress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific egress endpoints.",
									"default": null,
									"additionalProperties": true,
									"items": {
										"$id": "#/properties/ac/properties/networkPolicies/properties/egress/properties/customPolicies/items",
										"type": "object"
									}
								}
							}
						}
					}
				}
			}
		},
		"api": {
			"$id": "#/properties/api",
			"type": "object",
			"title": "Configurations for API server",
			"description": "Configurations for API server pod.",
			"default": {

			},
			"required": [
				"replicaCount",
				"frontendService",
				"livenessProbe",
				"readinessProbe",
				"internalAccess",
				"externalAccess",
				"ingress"
			],
			"properties": {
				"replicaCount": {
					"$id": "#/properties/api/properties/replicaCount",
					"type": "integer",
					"title": "Replica Count",
					"description": "Number of replicas.",
					"default": 1
				},
				"env": {
					"$id": "#/properties/api/properties/env",
					"type": "object",
					"title": "Environment Variables",
					"description": "Configure environment variables.",
					"default": {

					},
					"required": [],
					"properties": {
						"jvmOptions": {
							"$id": "#/properties/api/properties/env/properties/jvmOptions",
							"type": [
								"string",
								"null"
							],
							"title": "JVM Options",
							"description": "JVM options for the api runtime.",
							"default": null
						},
						"extraEnvs": {
							"$id": "#/properties/api/properties/env/properties/extraEnvs",
							"type": ["array","object"],
							"title": "Extra environment variables",
							"description": "Provide extra environment variables for api runtime.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/env/properties/extraEnvs/items",
								"type": "object"
							}
						}
					}
				},
				"frontendService": {
					"$id": "#/properties/api/properties/frontendService",
					"type": "object",
					"title": "Frontend Service",
					"default": {

					},
					"required": [
						"type",
						"ports"
					],
					"properties": {
						"type": {
							"$id": "#/properties/api/properties/frontendService/properties/type",
							"type": "string",
							"title": "Service type",
							"description": "Specify kubernetes service type.",
							"default": "ClusterIP"
						},
						"sessionAffinityConfig": {
							"$id": "#/properties/api/properties/frontendService/properties/sessionAffinityConfig",
							"type": "object",
							"title": "Session Affinity Configuration",
							"default": {

							},
							"required": [
							],
							"properties": {
								"timeoutSeconds": {
									"$id": "#/properties/api/properties/frontendService/properties/sessionAffinityConfig/properties/timeoutSeconds",
									"type": "integer",
									"title": "Timeout Seconds",
									"description": "Session affinity timeout seconds.",
									"default": 10800
								}
							}
						},
						"externalTrafficPolicy": {
							"$id": "#/properties/api/properties/frontendService/properties/externalTrafficPolicy",
							"type": "string",
							"title": "External Traffic Policy",
							"description": "Route external traffic to node-local or cluster-wide endpoints.",
							"default": "Cluster",
							"enum": ["Cluster", "Local"]
						},
						"ports": {
							"$id": "#/properties/api/properties/frontendService/properties/ports",
							"type": "object",
							"title": "Ports",
							"default": {

							},
							"required": [
								"http",
								"https"
							],
							"properties": {
								"http": {
									"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http",
									"type": "object",
									"title": "HTTP",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http/properties/name",
											"type": "string",
											"title": "port configurations",
											"description": "By default here port is http.",
											"default": "http"
										},
										"port": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http/properties/port",
											"type": "integer",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35005
										},
										"targetPort": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "http"
										},
										"nodePort": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30005
										},
										"protocol": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/http/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								},
								"https": {
									"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https",
									"type": "object",
									"title": "HTTPS",
									"default": {

									},
									"required": [
										"name",
										"port",
										"targetPort",
										"nodePort",
										"protocol"
									],
									"properties": {
										"name": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https/properties/name",
											"type": "string",
											"title": "Service external port",
											"description": "Specifies the service port.",
											"default": 35006
										},
										"port": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https/properties/port",
											"type": "integer",
											"title": "The port schema",
											"description": "An explanation about the purpose of this instance.",
											"default": 0
										},
										"targetPort": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https/properties/targetPort",
											"type": "string",
											"title": "Service Target Port",
											"description": "Specifies the target internal port on the application.",
											"default": "https"
										},
										"nodePort": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https/properties/nodePort",
											"type": "integer",
											"title": "Service node port",
											"description": "Specifies the node port exposed for the application.",
											"default": 30006
										},
										"protocol": {
											"$id": "#/properties/api/properties/frontendService/properties/ports/properties/https/properties/protocol",
											"type": "string",
											"title": "Service protocol",
											"description": "Service protocol defaults to TCP.",
											"default": "TCP"
										}
									}
								}
							}
						},
						"extraPorts": {
							"$id": "#/properties/api/properties/frontendService/properties/extraPorts",
							"type": ["array","object"],
							"title": "Service extra Ports",
							"description": "User can Specify extra ports for service.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/frontendService/properties/extraPorts/items",
								"type": "object"
							}
						},
						"loadBalancerIP": {
							"$id": "#/properties/api/properties/frontendService/properties/loadBalancerIP",
							"type": [
								"string",
								"null"
							],
							"title": "LoadBalancer IP",
							"description": "User can Specify LoadBalancer IP if service type as LoadBalancer.",
							"default": null
						},
						"annotations": {
							"$id": "#/properties/api/properties/frontendService/properties/annotations",
							"type": "object",
							"title": "Annotations for api frontend service",
							"description": "Specify annotations for this api frontend service with name and value for each annotation.",
							"default": {

							},
							"required": [

							],
							"additionalProperties": true
						}
					}
				},
				"livenessProbe": {
					"$id": "#/properties/api/properties/livenessProbe",
					"type": "object",
					"title": "Liveness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/api/properties/livenessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for liveness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/api/properties/livenessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for liveness probe.",
							"default": 5
						},
						"periodSeconds": {
							"$id": "#/properties/api/properties/livenessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for liveness probe.",
							"default": 60
						}
					}
				},
				"readinessProbe": {
					"$id": "#/properties/api/properties/readinessProbe",
					"type": "object",
					"title": "Readiness Probe",
					"default": {

					},
					"required": [
						"initialDelaySeconds",
						"timeoutSeconds",
						"periodSeconds"
					],
					"properties": {
						"initialDelaySeconds": {
							"$id": "#/properties/api/properties/readinessProbe/properties/initialDelaySeconds",
							"type": "integer",
							"title": "Initial delay in seconds",
							"description": "Initial delay in seconds for readiness probe.",
							"default": 60
						},
						"timeoutSeconds": {
							"$id": "#/properties/api/properties/readinessProbe/properties/timeoutSeconds",
							"type": "integer",
							"title": "Timeout in seconds",
							"description": "Timeout in seconds for readiness probe.",
							"default": 5
						},
						"periodSeconds": {
							"$id": "#/properties/api/properties/readinessProbe/properties/periodSeconds",
							"type": "integer",
							"title": "Interval period in seconds",
							"description": "Interval period in seconds for readiness probe.",
							"default": 60
						},
						"command": {
							"$id": "#/properties/api/properties/readinessProbe/properties/command",
							"type": [
								"string",
								"null"
							],
							"title": "Command to be executed",
							"description": "Command to be executed for readiness probe.",
							"default": null
						},
						"arg": {
							"$id": "#/properties/api/properties/readinessProbe/properties/arg",
							"type": "array",
							"title": "Command arguments",
							"description": "Command arguments for readiness probe.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/readinessProbe/properties/arg/items",
								"type": "string"
							}
						}
					}
				},
				"internalAccess": {
					"$id": "#/properties/api/properties/internalAccess",
					"type": "object",
					"title": "Internal Access",
					"default": {

					},
					"required": [
						"enableHttps"
					],
					"properties": {
						"enableHttps": {
							"$id": "#/properties/api/properties/internalAccess/properties/enableHttps",
							"type": "boolean",
							"title": "Enable https for api server",
							"description": "Set to enable https for api server.",
							"default": true
						},
						"tlsSecretName": {
							"$id": "#/properties/api/properties/internalAccess/properties/tlsSecretName",
							"type": [
								"string",
								"null"
							],
							"title": "TLS Secret name for api server",
							"description": "Set it to the TLS Secret name.",
							"default": null
						}
					}
				},
				"externalAccess": {
					"$id": "#/properties/api/properties/externalAccess",
					"type": "object",
					"title": "External Access",
					"default": {

					},
					"required": [
						"protocol"
					],
					"properties": {
						"protocol": {
							"$id": "#/properties/api/properties/externalAccess/properties/protocol",
							"type": "string",
							"title": "External protocol for api server",
							"description": "Set it to a protocol via which api services are accessible, if ingress is disabled. By default is it set to http.",
							"default": "http"
						},
						"address": {
							"$id": "#/properties/api/properties/externalAccess/properties/address",
							"type": [
								"string",
								"null"
							],
							"title": "External address (host/IP) for api server",
							"description": "Set it to an address via which api services are accessible, if ingress is disabled.",
							"default": null
						},
						"port": {
							"$id": "#/properties/api/properties/externalAccess/properties/port",
							"type": [
								"integer",
								"null"
							],
							"title": "External port api service",
							"description": "Set it to a port via which api services are accessible, if ingress is disabled.",
							"default": null
						}
					}
				},
				"ingress": {
					"$id": "#/properties/api/properties/ingress",
					"type": "object",
					"title": "Ingress",
					"default": {

					},
					"required": [
						"internal"
					],
					"properties": {
						"internal": {
							"$id": "#/properties/api/properties/ingress/properties/internal",
							"type": "object",
							"title": "Internal",
							"default": {

							},
							"required": [],
							"properties": {
								"host": {
									"$id": "#/properties/api/properties/ingress/properties/internal/properties/host",
									"type": [
										"string",
										"null"
									],
									"title": "Internal ingress host for api server",
									"description": "Internally accessible ingress host dns name.",
									"default": null
								},
								"tls": {
									"$id": "#/properties/api/properties/ingress/properties/internal/properties/tls",
									"type": "object",
									"title": "TLS",
									"default": {

									},
									"required": [
										"enabled"
									],
									"properties": {
										"enabled": {
											"$id": "#/properties/api/properties/ingress/properties/internal/properties/tls/properties/enabled",
											"type": "boolean",
											"title": "TLS enabled for ingress host for api server",
											"description": "TLS enabled for ingress host for api server.",
											"default": true
										},
										"secretName": {
											"$id": "#/properties/api/properties/ingress/properties/internal/properties/tls/properties/secretName",
											"type": [
												"string",
												"null"
											],
											"title": "Secret name",
											"description": "Secret name for tls.",
											"default": null
										}
									}
								}
							}
						}
					}
				},
				"extraPVCs": {
					"$id": "#/properties/api/properties/extraPVCs",
					"type": ["array","object"],
					"title": "Extra Volume",
					"description": "User can use this property for extra persistent volume claim",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/extraPVCs/items",
						"type": "object"
					}
				},
				"extraInitContainers": {
					"$id": "#/properties/api/properties/extraInitContainers",
					"type": ["array","object"],
					"title": "Extra Init Containers",
					"description": "Additional init containers, e. g. for providing custom themes.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/extraInitContainers/items",
						"type": "object"
					}
				},
				"resources": {
					"$id": "#/properties/api/properties/resources",
					"type": ["object","null"],
					"title": "Resources",
					"default": {

					},
					"required": [
					],
					"properties": {
						"limits": {
							"$id": "#/properties/api/properties/resources/properties/limits",
							"type": "object",
							"title": "Limits",
							"default": {

							},
							"required": [
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/api/properties/resources/properties/limits/properties/cpu",
									"type": "string",
									"title": "CPU limit",
									"description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "4000m"
								},
								"memory": {
									"$id": "#/properties/api/properties/resources/properties/limits/properties/memory",
									"type": "string",
									"title": "Memory limit",
									"description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/api/properties/resources/properties/limits/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The ephemeral storage upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "4Gi"
								}
							}
						},
						"requests": {
							"$id": "#/properties/api/properties/resources/properties/requests",
							"type": "object",
							"title": "Requests",
							"default": {

							},
							"required": [
								
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/api/properties/resources/properties/requests/properties/cpu",
									"type": "string",
									"title": "CPU request",
									"description": "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "2000m"
								},
								"memory": {
									"$id": "#/properties/api/properties/resources/properties/requests/properties/memory",
									"type": "string",
									"title": "Memory request",
									"description": "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "2Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/api/properties/resources/properties/requests/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The minimum ephemeral storage in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "2Gi"
								}
							}
						}
					}
				},
				"autoscaling": {
					"$id": "#/properties/api/properties/autoscaling",
					"type": "object",
					"title": "Autoscaling",
					"default": {

					},
					"required": [
						"enabled",
						"minReplicas",
						"maxReplicas",
						"targetCPUUtilizationPercentage"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/api/properties/autoscaling/properties/enabled",
							"type": "boolean",
							"title": "Enable Automatic Scaling",
							"description": "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field.",
							"default": false
						},
						"minReplicas": {
							"$id": "#/properties/api/properties/autoscaling/properties/minReplicas",
							"type": "integer",
							"title": "Minimum Number of Replicas",
							"description": "Lower limit for the number of pods that can be set by the autoscaler.",
							"default": 1
						},
						"maxReplicas": {
							"$id": "#/properties/api/properties/autoscaling/properties/maxReplicas",
							"type": "integer",
							"title": "Maximum Number of Replicas",
							"description": "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas.",
							"default": 2
						},
						"targetCPUUtilizationPercentage": {
							"$id": "#/properties/api/properties/autoscaling/properties/targetCPUUtilizationPercentage",
							"type": "integer",
							"title": "Target CPU Utilization Percentage",
							"description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods.",
							"default": 60
						}
					}
				},
				"defaultPodDisruptionBudget": {
					"$id": "#/properties/api/properties/defaultPodDisruptionBudget",
					"type": "object",
					"title": "Default Pod Disruption Budget",
					"default": {

					},
					"required": [
						"enabled",
						"minAvailable"
					],
					"properties": {
						"enabled": {
							"$id": "#/properties/api/properties/defaultPodDisruptionBudget/properties/enabled",
							"type": "boolean",
							"title": "Enable Pod Disruption pods",
							"description": "Enable pod disruption budget for deployment.",
							"default": false
						},
						"minAvailable": {
							"$id": "#/properties/api/properties/defaultPodDisruptionBudget/properties/minAvailable",
							"type": "integer",
							"title": "min Available pod",
							"description": "Specify minimum number of pods for PodDisruptionBudget.",
							"default": 1
						}
					}
				},
				"extraLabels": {
					"$id": "#/properties/api/properties/extraLabels",
					"type": "object",
					"title": "Extra Labels",
					"description": "Extra Labels.",
					"default": {

					},
					"required": [

					],
					"additionalProperties": true
				},
				"nodeAffinity": {
					"$id": "#/properties/api/properties/nodeAffinity",
					"type": "object",
					"title": "Node Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAffinity": {
					"$id": "#/properties/api/properties/podAffinity",
					"type": "object",
					"title": "Pod Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"podAntiAffinity": {
					"$id": "#/properties/api/properties/podAntiAffinity",
					"type": "object",
					"title": "Pod Anti Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Anti Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/api/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Pod Anti Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/api/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				},
				"topologySpreadConstraints": {
					"$id": "#/properties/api/properties/topologySpreadConstraints",
					"type": ["array","object"],
					"title": "Topology spread constraints for pods",
					"description": "Topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/topologySpreadConstraints/items",
						"type": "object"
					}
				},
				"tolerations": {
					"$id": "#/properties/api/properties/tolerations",
					"type": ["array","object"],
					"title": "Tolerations for pods",
					"description": "Tolerations are applied to pods, and allow the pods to schedule onto nodes with matching taints.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/tolerations/items",
						"type": "object"
					}
				},
				"extraSecrets": {
					"$id": "#/properties/api/properties/extraSecrets",
					"type": ["array","object"],
					"title": "The extraSecrets schema",
					"description": "An explanation about the purpose of this instance.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/extraSecrets/items",
						"type": "object"
					}
				},
				"extraConfigMaps": {
					"$id": "#/properties/api/properties/extraConfigMaps",
					"type": ["array","object"],
					"title": "Extra secrets",
					"description": "If mountAsVolume set to true, the secrets will be mounted as a volume on /ibm/resources/<secret-name> directory else they will be exposed as environment variables.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/extraSecrets/items",
						"type": "object"
					}
				},
				"hostAliases": {
					"$id": "#/properties/api/properties/hostAliases",
					"type": ["array","object"],
					"title": "Host aliases for pods",
					"description": "Host aliases to be added to pod /etc/hosts.",
					"default": [

					],
					"additionalItems": true,
					"items": {
						"$id": "#/properties/api/properties/hostAliases/items",
						"type": "object"
					}
				},
				"networkPolicies": {
					"$id": "#/properties/api/properties/networkPolicies",
					"type": "object",
					"title": "Network Policies",
					"default": {

					},
					"required": [
					],
					"properties": {
						"ingress": {
							"$id": "#/properties/api/properties/networkPolicies/properties/ingress",
							"type": "object",
							"title": "Ingress",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/api/properties/networkPolicies/properties/ingress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom ingress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific ingress endpoints.",
									"default": null,
									"additionalProperties":true,
								"items":{
									"$id":"#/properties/api/properties/networkPolicies/properties/ingress/properties/customPolicies/items",
									"type":"object"
									}
								}
							}
						},
						"egress": {
							"$id": "#/properties/api/properties/networkPolicies/properties/egress",
							"type": "object",
							"title": "Egress",
							"default": {

							},
							"required": [

							],
							"properties": {
								"customPolicies": {
									"$id": "#/properties/api/properties/networkPolicies/properties/egress/properties/customPolicies",
									"type": ["object","array","null"],
									"title": "Custom egress network policies",
									"description": "Configuration to define additional custom network policies for allowing specific egress endpoints.",
									"default": null,
									"additionalProperties":true,
								"items":{
									"$id":"#/properties/api/properties/networkPolicies/properties/egress/properties/customPolicies/items",
									"type":"object"
									}
								}
							}
						}
					}
				}
			}
		},
		"nameOverride": {
			"$id": "#/properties/nameOverride",
			"type": "string",
			"title": "Name Override",
			"description": "This name will be appended to the release name to form the name of resources created by the chart.",
			"default": ""
		},
		"fullnameOverride": {
			"$id": "#/properties/fullnameOverride",
			"type": "string",
			"title": "Full Name Override",
			"description": "This name will be appended to the release name to form the name of resources created by the chart.",
			"default": ""
		},
		"test": {
			"$id": "#/properties/test",
			"type": "object",
			"title": "Test configuration",
			"description": "Parameters to configure the tests.",
			"default": {

			},
			"required": [],
			"properties": {
				"image": {
					"$id": "#/properties/test/properties/image",
					"type": "object",
					"title": "Image",
					"default": {

					},
					"required": [
						"repository",
						"name",
						"tag",
						"pullPolicy"
					],
					"properties": {
						"repository": {
							"$id": "#/properties/test/properties/image/properties/repository",
							"type": "string",
							"title": "Test docker image repository",
							"description": "Docker image repository for test image",
							"default": "cp.icr.io/cp"
						},
						"name": {
							"$id": "#/properties/test/properties/image/properties/name",
							"type": "string",
							"title": "Test docker image name",
							"description": "Docker image name for test image.",
							"default": "opencontent-common-utils"
						},
						"tag": {
							"$id": "#/properties/test/properties/image/properties/tag",
							"type": "string",
							"title": "test image tag",
							"description": "Test docker image tag.",
							"default": "1.1.60"
						},
						"digest": {
							"$id": "#/properties/test/properties/image/properties/digest",
							"type": [
								"string",
								"null"
							],
							"title": "Image digest for test image",
							"description": "A digest is a hash of a Docker image supported by the Docker v2 registry format.",
							"default": null
						},
						"pullPolicy": {
							"$id": "#/properties/test/properties/image/properties/pullPolicy",
							"type": "string",
							"title": "Image pull policy",
							"description": "Image pull policy for the docker images.",
							"default": "IfNotPresent"
						}
					}
				}
			}
		},
		"purge": {
			"$id": "#/properties/purge",
			"type": "object",
			"title": "External purge job configuration",
			"description": "Parameters to configure the external purge job.",
			"default": {

			},
			"required": [
				"enabled",
				"image",
				"startingDeadlineSeconds",
				"activeDeadlineSeconds",
				"concurrencyPolicy",
				"suspend",
				"successfulJobsHistoryLimit",
				"failedJobsHistoryLimit"
			],
			"properties": {
				"enabled": {
					"$id": "#/properties/purge/properties/enabled",
					"type": "boolean",
					"title": "Enable external purge job",
					"description": "Select to enable external purge job.By default it is set to false.",
					"default": true
				},
				"image": {
					"$id": "#/properties/purge/properties/image",
					"type": "object",
					"title": "Image",
					"default": {

					},
					"required": [
						"repository",
						"tag",
						"pullPolicy"
					],
					"properties": {
						"repository": {
							"$id": "#/properties/purge/properties/image/properties/repository",
							"type": "string",
							"title": "Purge docker image repository",
							"description": "Docker image repository for purge image.",
							"default": "cp.icr.io/cp/ibm-b2bi/b2bi-purge"
						},
						"tag": {
							"$id": "#/properties/purge/properties/image/properties/tag",
							"type": "string",
							"title": "purge image tag",
							"description": "purge docker image tag.",
							"default": "6.1.1"
						},
						"digest": {
							"$id": "#/properties/purge/properties/image/properties/digest",
							"type": ["string","null"],
							"title": "Image digest",
							"description": "A digest is a hash of a Docker image supported by the Docker v2 registry format.",
							"default": null
						},
						"pullPolicy": {
							"$id": "#/properties/purge/properties/image/properties/pullPolicy",
							"type": "string",
							"title": "Image pull policy",
							"description": "Image pull policy for the docker images.",
							"default": "IfNotPresent"
						},
						"pullSecret": {
							"$id": "#/properties/purge/properties/image/properties/pullSecret",
							"type": ["string","null"],
							"title": "Purge image pull Secret",
							"description": "Secret used for pulling from private repositories.",
							"default": ""
						}
					}
				},
				"schedule": {
					"$id": "#/properties/purge/properties/schedule",
					"type": [
						"string",
						"null"
					],
					"title": "Purge schedule",
					"description": "Specify external purge job creation and execution schedule in cron format.",
					"default": null
				},
				"startingDeadlineSeconds": {
					"$id": "#/properties/purge/properties/startingDeadlineSeconds",
					"type": "integer",
					"title": "Start deadline in seconds",
					"description": "Specify deadline in seconds for starting the job if it misses its scheduled time for any reason.",
					"default": 60
				},
				"activeDeadlineSeconds": {
					"$id": "#/properties/purge/properties/activeDeadlineSeconds",
					"type": "integer",
					"title": "Active deadline in seconds",
					"description": "Specify duration in seconds that the external purge job will be running.",
					"default": 3600
				},
				"concurrencyPolicy": {
					"$id": "#/properties/purge/properties/concurrencyPolicy",
					"type": "string",
					"title": "Concurrency policy",
					"description": "Specify behavior for concurrent execution of external purge job.",
					"default": "Forbid"
				},
				"suspend": {
					"$id": "#/properties/purge/properties/suspend",
					"type": "boolean",
					"title": "Suspend purge job",
					"description": "If it is set to true, all subsequent executions are suspended.",
					"default": false
				},
				"successfulJobsHistoryLimit": {
					"$id": "#/properties/purge/properties/successfulJobsHistoryLimit",
					"type": "integer",
					"title": "Successful jobs history limit",
					"description": "Specify how many completed external purge jobs should be kept in history.",
					"default": 3
				},
				"failedJobsHistoryLimit": {
					"$id": "#/properties/purge/properties/failedJobsHistoryLimit",
					"type": "integer",
					"title": "Failed jobs history limit",
					"description": "Specify how many failed external purge jobs should be kept in history.",
					"default": 1
				},
				"env": {
					"$id": "#/properties/purge/properties/env",
					"type": "object",
					"title": "Environment Variables",
					"description": "Configure environment variables.",
					"default": {

					},
					"required": [],
					"properties": {
						"jvmOptions": {
							"$id": "#/properties/purge/properties/env/properties/jvmOptions",
							"type": [
								"string",
								"null"
							],
							"title": "JVM Options",
							"description": "JVM options for the purge runtime.",
							"default": null
						},
						"extraEnvs": {
							"$id": "#/properties/purge/properties/env/properties/extraEnvs",
							"type": ["array","object"],
							"title": "Extra environment variables",
							"description": "Provide extra environment variables for purge runtime.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/purge/properties/env/properties/extraEnvs/items",
								"type": "object"
							}
						}
					}
				},
				"resources": {
					"$id": "#/properties/purge/properties/resources",
					"type": "object",
					"title": "Resources",
					"default": {

					},
					"required": [
	
					],
					"properties": {
						"limits": {
							"$id": "#/properties/purge/properties/resources/properties/limits",
							"type": "object",
							"title": "Limits",
							"default": {

							},
							"required": [
								
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/purge/properties/resources/properties/limits/properties/cpu",
									"type": "string",
									"title": "CPU limit",
									"description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "500m"
								},
								"memory": {
									"$id": "#/properties/purge/properties/resources/properties/limits/properties/memory",
									"type": "string",
									"title": "Memory limit",
									"description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "1Gi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/purge/properties/resources/properties/limits/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The ephemeral storage upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "1Gi"
								}
							}
						},
						"requests": {
							"$id": "#/properties/purge/properties/resources/properties/requests",
							"type": "object",
							"title": "Requests",
							"default": {

							},
							"required": [
				
							],
							"properties": {
								"cpu": {
									"$id": "#/properties/purge/properties/resources/properties/requests/properties/cpu",
									"type": "string",
									"title": "CPU request",
									"description": "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core).",
									"default": "100m"
								},
								"memory": {
									"$id": "#/properties/purge/properties/resources/properties/requests/properties/memory",
									"type": "string",
									"title": "Memory request",
									"description": "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "500Mi"
								},
								"ephemeral-storage": {
									"$id": "#/properties/purge/properties/resources/properties/requests/properties/ephemeral-storage",
									"type": "string",
									"title": "Ephemeral Storage",
									"description": "The minimum ephemeral storage in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
									"default": "500Mi"
								}
							}
						}
					}
				},
				"nodeAffinity": {
					"$id": "#/properties/purge/properties/nodeAffinity",
					"type": "object",
					"title": "Node Affinity",
					"default": {

					},
					"required": [
						],
					"properties": {
						"requiredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/purge/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/purge/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						},
						"preferredDuringSchedulingIgnoredDuringExecution": {
							"$id": "#/properties/purge/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
							"type": ["array","object"],
							"title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
							"description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
							"default": [

							],
							"additionalItems": true,
							"items": {
								"$id": "#/properties/purge/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object"
							}
						}
					}
				}
			}
		}
	}
}
