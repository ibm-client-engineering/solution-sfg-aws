{{- include "sch.config.init" (list . "ibm-connect-direct.sch.chart.config.values") }}
{{ $appName := include "sch.names.appName" (list .) }}
{{ $fullName := include "sch.names.fullName" (list .) }}
{{ $saName := include "sch.names.fullCompName" (list . "serviceaccount") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{  $fullName  }}-postrollback
  labels:
    app.kubernetes.io/name: {{  $appName  }}
    app.kubernetes.io/instance: {{  .Release.Name  }}
    app.kubernetes.io/managed-by: {{  .Release.Service  }}
    helm.sh/chart: {{  include "ibm-connect-direct.chart" .  }}
    release: {{  .Release.Name  }}
{{- if .Values.extraLabels }}
{{ toYaml .Values.extraLabels | indent 4 }}
{{- end }}
  annotations:
    "helm.sh/hook": post-rollback
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        app.kubernetes.io/name: {{  $appName  }}-postrollback
        app.kubernetes.io/instance: {{  .Release.Name  }}-postrollback
        app.kubernetes.io/managed-by: {{  .Release.Service  }}-postrollback
        helm.sh/chart: {{  include "ibm-connect-direct.chart" .  }}-postrollback
        release: {{  .Release.Name  }}-postrollback
{{- if .Values.extraLabels }}
{{ toYaml .Values.extraLabels | indent 8 }}
{{- end }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ $saName }}
      {{- else }}
      serviceAccountName: {{ .Values.serviceAccount.name | default "default" }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.podSecurityContext) | indent 8 }}
      affinity:
{{- include "ibm-connect-direct.nodeAffinity" (list . .Values.affinity.nodeAffinity) | indent 8 }}
{{- include "ibm-connect-direct.podAffinity" (list . .Values.affinity.podAffinity) | indent 8 }}
{{- include "ibm-connect-direct.podAntiAffinity" (list . .Values.affinity.podAntiAffinity) | indent 8 }}
      restartPolicy: Never
      containers:
        - name: post-rollback-job
          {{- if .Values.image.digest.enabled }}
          image: "{{  .Values.image.repository  }}@{{ .Values.image.digest.value }}"
          {{- else }}
          image: "{{  .Values.image.repository  }}:{{ .Values.image.tag  }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{  .Values.env.timezone  }}
          command: ["/cdinstall/maintenance.sh", "rollback"]
          volumeMounts:
            - mountPath: /opt/cdunix/ndm/cfg
              name: cd-vol
              subPath: CFG
            - mountPath: /opt/cdunix/work
              name: cd-vol
              subPath: WORK
            - mountPath: /opt/cdunix/ndm/secure+
              name: cd-vol
              subPath: SECPLUS
            - mountPath: /opt/cdunix/ndm/security
              name: cd-vol
              subPath: SECURITY
            - mountPath: /opt/cdunix/process
              name: cd-vol
              subPath: PROCESS
          # File agent support on container
            - mountPath: /opt/cdunix/file_agent/config
              name: cd-vol
              subPath: FACONFIG
            - mountPath: /opt/cdunix/file_agent/log
              name: cd-vol
              subPath: FALOG
            - mountPath: /opt/cdfiles/cd_param_file
              name: cd-param
              subPath: cd_param_file
            - mountPath: /opt/cdfiles/secret_files
              name: cd-secret
              readOnly: true
            - mountPath: /opt/backup
              name: cd-vol
              subPath: BACKUP
          securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.containerSecurityContext) | indent 12 }}
          resources:
            limits:
{{ toYaml .Values.resources.limits | indent 14 }}
            requests:
{{ toYaml .Values.resources.requests | indent 14 }}
      volumes:
      - name: cd-vol
        persistentVolumeClaim:
        {{- if .Values.pvClaim.existingClaimName }}
          claimName: {{ .Values.pvClaim.existingClaimName }}
        {{- else }}
          claimName: {{  $fullName  }}-pvc
        {{- end }}
      - name: cd-param
        configMap:
          name: {{ $fullName }}
      - name: cd-secret
        secret:
          secretName: {{  .Values.secret.secretName  }}

