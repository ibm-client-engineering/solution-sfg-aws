global:
  license: true
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi"
    tag: "6.1.2.2"
    digest: sha256:4199ccb92349366fa5debbc7d4bccff9e56edaf0b22fa473e2040baedaa0acc8
    pullPolicy: IfNotPresent
    pullSecret: "ibm-pull-secret"
  networkPolicies:
    ingress:
      enabled: true
      customPolicies:
    egress:
      enabled: true
      customPolicies:
      - name: allow-egress-to-rds
        toSelectors:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: b2bi
              release: sterling-b2bi
        - ipBlock:
            cidr: 192.168.99.219/32
        ports:
          - protocol: TCP
            port: 1521
      - name: allow-egress-to-cd
        toSelectors:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: b2bi
              release: sterling-b2bi
        - ipBlock:
            cidr: 192.168.99.219/32
        ports:
          - protocol: TCP
            port: 1366

# metadata:
#  labels: 
#    applicationid: testid
#  annotations: {}

# Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows : 
# #   0 - Do not use
# #   1 - Least preferred
# #   2 - No Preference
# #   3 - Most preferred
arch:
  amd64: "2 - No Preference"
  ppc64le: "2 - No Preference"
  s390x: "2 - No Preference"

serviceAccount:
  name: default

resourcesInit:
  enabled: false
  image:
    repository: "cp.icr.io/cp/ibm-b2bi"
    name: "b2bi-resources"
    tag: "6.1.2.2"
    digest: sha256:1d9045511c1203e6d6d25ed32c700dfca230076412915857c2c40b1409151b7c
    pullPolicy: "IfNotPresent"
  command:

persistence:
  enabled: true
  useDynamicProvisioning: true

appResourcesPVC:
  enabled: true
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "resources"
  accessMode: ReadOnlyMany
  size: 100Mi
  preDefinedResourcePVCName: sterlingtoolkit-pvc

appLogsPVC:
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "logs"
  accessMode: ReadWriteMany
  size: 500Mi
  preDefinedLogsPVCName: 
  
appDocumentsPVC:
  enabled: true
  storageClassName: "efs-sfg-sc"
  selector:
    label: "intent"
    value: "documents"
  accessMode: ReadWriteMany
  size: 500Mi
  preDefinedDocumentPVCName: 

extraPVCs: []

security:
  supplementalGroups: [65534]
  fsGroup:
  runAsUser:
  runAsGroup: 

ingress:
  enabled: true
  controller: "alb"
  annotations:
    alb.ingress.kubernetes.io/target-type: ip 
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:us-east-1:748107796891:certificate/ccc1b02c-8bad-4559-ac61-5efd4087432b'
#  controller: "nginx"
#  annotations:
#    nginx.ingress.kubernetes.io/proxy-body-size: 2000m
  port:

dataSetup:
# Enabled must be set to true on a first install, but subsequent helm upgrades it needs to be set to false
  enabled: false
  upgrade: false
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi-dbsetup"
    tag: "6.1.2.2"
    digest: sha256:ff279b7df12a22a1773753c8d03a1e32fb5ab8395b94c203dc3fa599e4184551
    pullPolicy: IfNotPresent
    pullSecret: "ibm-pull-secret"
    extraLabels:
      applicationid: testlabel

env:
  tz: "UTC"
  upgradeCompatibilityVerified: false
  debugMode: false
  extraEnvs: []
  
logs:
  enableAppLogOnConsole: true
applyPolicyToKubeSystem: false

integrations:
  seasIntegration:
    isEnabled: false
    seasVersion: "1.0"
#setup.cfg configuration starts here. Property names must follow camelCase format.
setupCfg:
  #upgrade: false
  basePort: 50000
  #License - specify values as true/false
  licenseAcceptEnableSfg: true
  licenseAcceptEnableEbics: true
  licenseAcceptEnableFinancialServices: true
  licenseAcceptEnableFileOperation: true

  # Name of system passphrase secret if available
  systemPassphraseSecret: b2b-system-passphrase-secret
  enableFipsMode: false
  nistComplianceMode: "off"

  # Provide the DB attributes
  dbVendor: Oracle
  dbHost: sterling-mft-db.cehubq1eqcri.us-east-1.rds.amazonaws.com
  dbPort: 1521
  dbData: ORCL
  dbDrivers: ojdbc8.jar
  dbCreateSchema: true
  oracleUseServiceName: false
  # Values can be either true or false 
  usessl: false
  dbSecret: b2b-db-secret
  # When usessl is set to true
  dbTruststore:
  dbTruststoreSecret:
  dbKeystore:
  dbKeystoreSecret:
  adminEmailAddress: kramerro@us.ibm.com
  # Provide the SMTP host details  
  smtpHost: 127.0.0.1
  softStopTimeout:

  #Provide the termination grace period in seconds for containers. Only numeric value is accepted.
  terminationGracePeriod: 30

  #WMQ
  # This is where we stick our MQ values
  #JMS properties are optional if jmsVendor is empty
  #To use IBMMQ for communication between ASI & AC, change property to jmsVendor: IBMMQ
  # and provide other connection details
  jmsVendor: IBMMQ
  # Provide the name of connection factory class. 
  jmsConnectionFactory: com.ibm.mq.jms.MQQueueConnectionFactory
  jmsConnectionFactoryInstantiator:
  jmsQueueName: DEV.QUEUE.1
  jmsHost: 10.100.98.89
  jmsPort: 1414
  jmsConnectionNameList:
  # Applicable for IBMMQ
  jmsChannel: DEV.APP.SVRCONN
  jmsEnableSsl: false
  # Name of JMS secret if available
  jmsSecret: mq-secret
  # When jmsEnableSsl is true
  jmsKeystorePath:
  jmsKeystoreSecret:
  jmsTruststorePath:
  jmsTruststoreSecret:
  jmsCiphersuite:
  jmsProtocol: TLSv1.2
  # Liberty Profile SSL Config. Specify Liberty keystore file name including it's path relative to the mounted resources volume location, if applicable.
  # If libertyKeystoreSecret is mentioned, provide the name of the key holding the certificate data. 
  libertyKeystoreLocation:
  # Name of Liberty keystore secret containing the certificate, if applicable
  libertyKeystoreSecret:
  libertyProtocol: TLSv1.2
  # Name of Liberty secret if available
  libertySecret:
  libertyJvmOptions:
  # Default document storage option. Can be set to one of the below values
  # DB - Database (default)
  # FS - File System  
  defaultDocumentStorageType: DB 
  # restartCluster can be set to true to restart the application cluster by cleaning up all previous node entries, locks and set the schedules to node1.
  restartCluster: false
  #Enable SSL over RMI calls
  useSslForRmi: true
  # Name of the RMI Secret if available.
  rmiTlsSecretName:
  # SAP SNC configurations
  # Name of the secret holding SAP SNC PSE file and password along with the sapgenpse utility
  sapSncSecretName:
  # SAP SNC library vendor name. This is same as the vendor name configured on customization UI for the SAP SNC library.
  sapSncLibVendorName:
  # SAP SNC library version. Specify the value in quotes. This is same as the vendor version configured on customization UI for the SAP SNC library.
  sapSncLibVersion:
  # SAP SNC library name. This is same as the native library file name uploaded on customization UI for the SAP SNC library.
  sapSncLibName:  

asi:
  replicaCount: 1
  
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35000
        targetPort: http
        nodePort: 30000
        protocol: TCP
      https: 
        name: https
        port: 35001
        targetPort: https
        nodePort: 30001
        protocol: TCP
      soa: 
        name: soa
        port: 35002
        targetPort: soa
        nodePort: 30002
        protocol: TCP
      soassl: 
        name: soassl
        port: 35003
        targetPort: soassl
        nodePort: 30003
        protocol: TCP
#      restHttpAdapter: 
#        name: rest-adapter
#        port: 35007
#        targetPort: rest-adapter
#        nodePort: 30007
#        protocol: TCP            
    extraPorts: []
    loadBalancerIP:  
    annotations: {}  
  
  backendService:
    type: LoadBalancer
    ports: 
      - name: adapter-1
        port: 30201
        targetPort: 30201
        nodePort: 30201
        protocol: TCP
    portRanges:
      - name: adapters
#        portRange: 30301-30400
#        targetPortRange: 30301-30400
#        nodePortRange: 30301-30400
        portRange: 30301-30305
        targetPortRange: 30301-30305
        nodePortRange: 30301-30305
        protocol: TCP
    loadBalancerIP:  
    loadBalancerSourceRanges: []
    annotations: {}
      
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 30
    periodSeconds: 60

  # command - command to be executed 
  # arg1, arg2.. - command arguments
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []
      #- arg1
      #- arg2

  startupProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 30
    periodSeconds: 60
    failureThreshold: 12
      
  internalAccess:
    enableHttps: true
    httpsPort:   
    tlsSecretName:  
      
  externalAccess:
    protocol: http
    address: 
    port:
    
  ingress:
    internal:
# When ingress class is NGINX
#      host: "*.elb.us-east-1.amazonaws.com"
# When ingress class is alb
      host: "*.us-east-1.elb.amazonaws.com"
      tls:
        enabled: true
        secretName: sterling-b2bi-b2bi-asi-frontend-svc
      extraPaths: []
    external:
# When ingress class is NGINX
#      host: "*.elb.us-east-1.amazonaws.com"
# When ingress class is alb
      host: "*.us-east-1.elb.amazonaws.com"
      tls:
        enabled: true
        secretName: sterling-b2bi-b2bi-asi-frontend-svc
      extraPaths: []

  extraPVCs: []
  extraInitContainers: []
  resources: 
    limits:
      cpu: 4000m
      memory: 8Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 4Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels:
    applicationid: testlabel
    #asiLabel: asiValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 
  extraSecrets: []
  extraConfigMaps: []
  myFgAccess:
    myFgPort:
    myFgProtocol:

  hostAliases: []
  performanceTuning:
    allocateMemToBI: false
    allocateMemToSAP: false
    allocateMemToCLA: false
    threadsPerCore: 4
    override: []
  
  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:
      
ac:
  replicaCount: 1
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35004
        targetPort: http
        nodePort: 30004
        protocol: TCP
    extraPorts:
      - name: sftp-frontend
        port: 50039
        targetPort: 50039
#        nodePort: 30510
        nodePort: 50039
        protocol: TCP
      - name: cd-frontend
        port: 51364
        targetPort: 51364
        nodePort: 51364
        protocol: TCP
    loadBalancerIP:  
    annotations: {}  
      
  backendService:
    type: LoadBalancer
    ports:
      - name: adapter-1
        port: 30401
        targetPort: 30401
        nodePort: 30401
        protocol: TCP
      - name: sftp-backend
        port: 50039
        targetPort: 50039
        nodePort: 50039
        protocol: TCP
      - name: cd-backend
        port: 51364
        targetPort: 51364
        nodePort: 51364
        protocol: TCP
    portRanges:
      - name: adapters
        portRange: 30501-30510
        targetPortRange: 30501-30510
        nodePortRange: 30501-30510
        protocol: TCP
    loadBalancerIP:  
#    loadBalancerSourceRanges:
#      - 10.10.10.0/24
#      - 10.10.20.0/24
    annotations: {} 

  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []

  internalAccess:
    enableHttps: true
    tlsSecretName:
      
  ingress:
    internal:
# When ingress class is NGINX
#      host: "*.elb.us-east-1.amazonaws.com"
# When ingress class is alb
      host: "*.us-east-1.elb.amazonaws.com"
      tls:
        enabled: true
        secretName: sterling-b2bi-b2bi-ac-frontend-svc
      extraPaths: []
    external:
# When ingress class is NGINX
#      host: "*.elb.us-east-1.amazonaws.com"
# When ingress class is alb
      host: "*.us-east-1.elb.amazonaws.com"
      tls:
        enabled: true
        secretName: sterling-b2bi-b2bi-ac-frontend-svc
      extraPaths: []
  
  extraPVCs: []
  extraInitContainers: []
  resources: 
    limits:
      cpu: 4000m
      memory: 8Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 4Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #acLabel: acValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 
  extraSecrets: []
  extraConfigMaps: []
  myFgAccess:
    myFgPort:
    myFgProtocol:
  
  hostAliases: []
  performanceTuning:
    allocateMemToSAP: false
    
  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:
    
api:
  replicaCount: 1
  env:
    jvmOptions:
    extraEnvs: []

  frontendService:
    type: ClusterIP
    sessionAffinityConfig:
      timeoutSeconds: 10800
    externalTrafficPolicy: Cluster
    ports:
      http:
        name: http
        port: 35005
        targetPort: http
        nodePort: 30005
        protocol: TCP
      https:
        name: https
        port: 35006
        targetPort: https
        nodePort: 30006
        protocol: TCP
    extraPorts: []
    loadBalancerIP:  
    annotations: {}  
  
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    command:
    arg: []
      
  internalAccess:
    enableHttps: true
    tlsSecretName:

  externalAccess:
    protocol: http
    address: 
    port: 

  ingress:
    internal:
# When ingress class is NGINX
#      host: "*.elb.us-east-1.amazonaws.com"
# When ingress class is alb
      host: "*.us-east-1.elb.amazonaws.com"
      tls:
        enabled: true
        secretName: sterling-b2bi-b2bi-api-frontend-svc

  extraPVCs: []
  extraInitContainers: []

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 4Gi
      ephemeral-storage: "4Gi"
    requests:
      cpu: 2000m
      memory: 2Gi
      ephemeral-storage: "2Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60
    
  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #apiLabel: apiValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
  tolerations: [] 
  extraSecrets: []
  extraConfigMaps: []
  
  hostAliases: []
  
  networkPolicies:
    ingress:
      customPolicies:
    egress:
      customPolicies:
nameOverride: ""

fullnameOverride: ""

# Test container
test:
  image:
    repository: 'cp.icr.io/cp'
    name: 'opencontent-common-utils'
    tag: '1.1.60'
    digest: sha256:6a514b98fe8f006d00a4bbbcc87241d900ac6a6f28f035d89a61a47aa7af25c7
    pullPolicy: 'IfNotPresent'
    pullSecret: ibm-pull-secret
    extraLabels:
      applicationid: testlabel

purge:
  enabled: true
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi-purge"
  # Provide the tag value in double quotes
    tag: "6.1.2.2"
    digest: sha256:82af150873315122c804ec06ea356f7db186732f73ec00338076746202d84d25
    pullPolicy: IfNotPresent
    pullSecret: ibm-pull-secret
    extraLabels:
      applicationid: testlabel
  # Provide a schedule for the purge job as a cron expression. For example "0 0 * * *" will run the purge job at 00:00 every day
  schedule: "0 0 * * *"
  startingDeadlineSeconds: 60
  activeDeadlineSeconds: 3600
  concurrencyPolicy: Forbid
  suspend: false
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  env:
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs: []

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1Gi
      ephemeral-storage: "1Gi"
    requests:
      cpu: 100m
      memory: 500Mi 
      ephemeral-storage: "500Mi"
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
