"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5209],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<l;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(4137));const l={id:"stage",sidebar_position:3,title:"Stage"},s="Stage",i={unversionedId:"Prepare/stage",id:"Prepare/stage",title:"Stage",description:"Software",source:"@site/docs/2-Prepare/Stage.md",sourceDirName:"2-Prepare",slug:"/Prepare/stage",permalink:"/solution-sfg-aws/Prepare/stage",draft:!1,editUrl:"https://github.com/ibm-client-engineering/solution-sfg-aws/tree/main/packages/create-docusaurus/templates/shared/docs/2-Prepare/Stage.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"stage",sidebar_position:3,title:"Stage"},sidebar:"tutorialSidebar",previous:{title:"Organize",permalink:"/solution-sfg-aws/Prepare/organize"},next:{title:"Manage",permalink:"/solution-sfg-aws/category/manage"}},o={},c=[{value:"Software",id:"software",level:2},{value:"Helm Chart installations",id:"helm-chart-installations",level:2},{value:"AWS Account",id:"aws-account",level:2},{value:"AWS VPC and EKS Cluster",id:"aws-vpc-and-eks-cluster",level:2},{value:"Installing or updating <code>eksctl</code>",id:"installing-or-updating-eksctl",level:3},{value:"Deploying a cluster with <code>eksctl</code>",id:"deploying-a-cluster-with-eksctl",level:3},{value:"Prepare the cluster",id:"prepare-the-cluster",level:2},{value:"Install the EKS helm repo",id:"install-the-eks-helm-repo",level:3},{value:"Install the EBS driver to the cluster",id:"install-the-ebs-driver-to-the-cluster",level:2},{value:"Download the example ebs iam policy",id:"download-the-example-ebs-iam-policy",level:3},{value:"Create the service account",id:"create-the-service-account",level:3},{value:"Create the StorageClass",id:"create-the-storageclass",level:3},{value:"Prepare EFS storage for the cluster",id:"prepare-efs-storage-for-the-cluster",level:2},{value:"Create an IAM policy and role",id:"create-an-iam-policy-and-role",level:3},{value:"Install the driver add-on",id:"install-the-driver-add-on",level:3},{value:"Create the filesystem",id:"create-the-filesystem",level:3},{value:"Create the mount targets",id:"create-the-mount-targets",level:3},{value:"Create the storage classes",id:"create-the-storage-classes",level:3},{value:"Install the Loadbalancer controller",id:"install-the-loadbalancer-controller",level:2},{value:"Create the IAM Policy",id:"create-the-iam-policy",level:3},{value:"Install the AWS Load Balancer Controller.",id:"install-the-aws-load-balancer-controller",level:3},{value:"Install the NGINX Controller",id:"install-the-nginx-controller",level:2},{value:"Get the NGINX controller deployment",id:"get-the-nginx-controller-deployment",level:3},{value:"Apply the deployment",id:"apply-the-deployment",level:3},{value:"Verify the deployment",id:"verify-the-deployment",level:3},{value:"Security RBACS",id:"security-rbacs",level:2},{value:"Security Policies",id:"security-policies",level:2},{value:"AWS RDS/DB",id:"aws-rdsdb",level:2},{value:"Create the security group",id:"create-the-security-group",level:3},{value:"Retrieve the CIDR range for the cluster VPC",id:"retrieve-the-cidr-range-for-the-cluster-vpc",level:3},{value:"Authorized access to that group",id:"authorized-access-to-that-group",level:3},{value:"Create the DB Subnet Group",id:"create-the-db-subnet-group",level:3},{value:"Create the RDS DB instance",id:"create-the-rds-db-instance",level:3},{value:"Configure the Oracle Instance",id:"configure-the-oracle-instance",level:2},{value:"Create a client pod",id:"create-a-client-pod",level:3},{value:"Connect to the client pod",id:"connect-to-the-client-pod",level:3},{value:"Configure database",id:"configure-database",level:3},{value:"Deploy IBM MQ to the cluster",id:"deploy-ibm-mq-to-the-cluster",level:2},{value:"Create MQ Namespace (optional)",id:"create-mq-namespace-optional",level:3},{value:"Create an MQ overrides file",id:"create-an-mq-overrides-file",level:3},{value:"Install IBM MQ",id:"install-ibm-mq",level:3},{value:"Create the MQ Secret.",id:"create-the-mq-secret",level:3},{value:"Retrieve MQ&#39;s cluster-ip",id:"retrieve-mqs-cluster-ip",level:3},{value:"Wrap Up",id:"wrap-up",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stage"},"Stage"),(0,r.kt)("h2",{id:"software"},"Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Generic Requirements:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Amazon Web Services (AWS) account with necessary permissions"),(0,r.kt)("li",{parentName:"ul"},"Access to IBM B2Bi and Sterling File Gateway Enterprise Edition installation packages"),(0,r.kt)("li",{parentName:"ul"},"Basic knowledge of Helm, Kubernetes, and Amazon EKS"),(0,r.kt)("li",{parentName:"ul"},"Amazon EKS cluster up and running"),(0,r.kt)("li",{parentName:"ul"},"Helm CLI installed on the local machine")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hardware",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"EKS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"m5.xlarge")," and region as ",(0,r.kt)("inlineCode",{parentName:"li"},"us-east-1"),". (this has 4 vcpu and 16 gigs ram)"),(0,r.kt)("li",{parentName:"ul"},"Default storage class defined"))),(0,r.kt)("li",{parentName:"ul"},"Jump Server/Bastion Host for staging requirements")))),(0,r.kt)("h2",{id:"helm-chart-installations"},"Helm Chart installations"),(0,r.kt)("p",null,"Install the following two helm repos as they will be required:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"helm repo add ibm-helm https://raw.githubusercontent.com/IBM/charts/master/repo/ibm-helm\n\nhelm repo add ibm-messaging-mq https://ibm-messaging.github.io/mq-helm\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Download the latest Sterling helm charts for B2Bi from this link. (Currently 2.1.3 as of this writing)"),(0,r.kt)("p",{parentName:"admonition"},"Charts: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/charts/blob/master/repo/ibm-helm/ibm-sfg-prod.md"},"https://github.com/IBM/charts/blob/master/repo/ibm-helm/ibm-sfg-prod.md")),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/charts/blob/master/repo/ibm-helm/ibm-b2bi-prod-2.1.3.tgz"},"ibm-b2bi-prod-2.1.3"))),(0,r.kt)("h2",{id:"aws-account"},"AWS Account"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CMDLINE Client install (MacOS)")),(0,r.kt)("p",null,"Download the client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"\n')),(0,r.kt)("p",null,"Install it with sudo (to use for all users)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo installer -pkg ./AWSCLIV2.pkg -target /\n")),(0,r.kt)("p",null,"Now let's configure our client env"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"aws configure\n")),(0,r.kt)("p",null,"Answer all the questions with the info you got. If you already have a profile configured, you can add a named profile to your credentials"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"vi ~/.aws/credentials\n\n[default]\naws_access_key_id =\naws_secret_access_key =\n\n[748107796891_AWSAdmin]\naws_access_key_id=\naws_secret_access_key=\n")),(0,r.kt)("p",null,"Also add location info to the config file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"vi ~/.aws/config\n\n[default]\nregion = us-east-1\noutput = json\n\n[profile techzone_user]\nregion=us-east-1\noutput=json\n")),(0,r.kt)("p",null,"We are also going to use some env magic to make sure we stick with the second profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export AWS_PROFILE=748107796891_AWSAdmin\n")),(0,r.kt)("p",null,"You may also copy the following out of the aws portal and paste it into your shell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'export AWS_ACCESS_KEY_ID=""\nexport AWS_SECRET_ACCESS_KEY=""\n')),(0,r.kt)("h2",{id:"aws-vpc-and-eks-cluster"},"AWS VPC and EKS Cluster"),(0,r.kt)("h3",{id:"installing-or-updating-eksctl"},"Installing or updating ",(0,r.kt)("inlineCode",{parentName:"h3"},"eksctl")),(0,r.kt)("p",null,"For this we are going to use homebrew on MacOS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew tap weaveworks/tap\n\nbrew install weaveworks/tap/eksctl\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"We are going to create an IAM user with admin privs to create and own this whole cluster.")),(0,r.kt)("p",null,'In the web management UI for AWS, go to IAM settings and create a user with admin privileges but no management console access. We created a user called "K8-Admin"'),(0,r.kt)("p",null,"Delete or rename your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.aws/credentials")," file and re-run ",(0,r.kt)("inlineCode",{parentName:"p"},"aws configure")," with the new user's Access and secret access keys."),(0,r.kt)("h3",{id:"deploying-a-cluster-with-eksctl"},"Deploying a cluster with ",(0,r.kt)("inlineCode",{parentName:"h3"},"eksctl")),(0,r.kt)("p",null,"Run the ",(0,r.kt)("inlineCode",{parentName:"p"},"eksctl")," command below to create your first cluster and perform the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a 3-node Kubernetes cluster named ",(0,r.kt)("inlineCode",{parentName:"li"},"sterling-east")," with one node type as ",(0,r.kt)("inlineCode",{parentName:"li"},"m5.xlarge")," and region as ",(0,r.kt)("inlineCode",{parentName:"li"},"us-east-1"),"."),(0,r.kt)("li",{parentName:"ul"},"Define a minimum of one node (",(0,r.kt)("inlineCode",{parentName:"li"},"--nodes-min 1"),") and a maximum of three-node (",(0,r.kt)("inlineCode",{parentName:"li"},"--nodes-max 3"),") for this node group managed by EKS. The node group is named ",(0,r.kt)("inlineCode",{parentName:"li"},"sterling-workers"),"."),(0,r.kt)("li",{parentName:"ul"},"Create a node group with the name ",(0,r.kt)("inlineCode",{parentName:"li"},"sterling-workers")," and select a machine type for the ",(0,r.kt)("inlineCode",{parentName:"li"},"sterling-workers")," node group.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'eksctl create cluster \\\n--name sterling-east \\\n--version 1.24 \\\n--region us-east-1 \\\n--with-oidc \\\n--zones us-east-1a,us-east-1b,us-east-1c \\\n--nodegroup-name sterling-workers \\\n--node-type m5.xlarge \\\n--nodes 3 \\\n--nodes-min 1 \\\n--nodes-max 3 \\\n--tags "Product=Sterling" \\\n--managed\n')),(0,r.kt)("p",null,"Associate an IAM oidc provider with the cluster if you didn't include ",(0,r.kt)("inlineCode",{parentName:"p"},"--with-oidc")," above. Make sure to use the region you created the cluster in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"eksctl utils associate-iam-oidc-provider --region=us-east-1 --cluster=sterling-east --approve\n")),(0,r.kt)("p",null,"Once the cluster is up, add it to your kube config. ",(0,r.kt)("inlineCode",{parentName:"p"},"eksctl")," will probably do this for you."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aws eks update-kubeconfig --name sterling-east --region us-east-1\n")),(0,r.kt)("h2",{id:"prepare-the-cluster"},"Prepare the cluster"),(0,r.kt)("p",null,"Create a namespace and set the context. This is where we will be living for the duration of the installation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl create namespace sterling\n\nkubectl config set-context --current --namespace=sterling\n")),(0,r.kt)("h3",{id:"install-the-eks-helm-repo"},"Install the EKS helm repo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n")),(0,r.kt)("h2",{id:"install-the-ebs-driver-to-the-cluster"},"Install the EBS driver to the cluster"),(0,r.kt)("h3",{id:"download-the-example-ebs-iam-policy"},"Download the example ebs iam policy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -o iam-policy-example-ebs.json https://raw.githubusercontent.com/kubernetes-sigs/aws-ebs-csi-driver/master/docs/example-iam-policy.json\n")),(0,r.kt)("p",null,"Create the policy. You can change  ",(0,r.kt)("inlineCode",{parentName:"p"},"AmazonEKS_EBS_CSI_Driver_Policy")," to a different name, but if you do, make sure to change it in later steps too."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'aws iam create-policy \\\n--policy-name AmazonEKS_EBS_CSI_Driver_Policy \\\n--policy-document file://iam-policy-example-ebs.json\n\n{\n    "Policy": {\n        "PolicyName": "AmazonEKS_EBS_CSI_Driver_Policy",\n        "PolicyId": "ANPA24LVTCGN5YOUAVX2V",\n        "Arn": "arn:aws:iam::748107796891:policy/AmazonEKS_EBS_CSI_Driver_Policy",\n        "Path": "/",\n        "DefaultVersionId": "v1",\n        "AttachmentCount": 0,\n        "PermissionsBoundaryUsageCount": 0,\n        "IsAttachable": true,\n        "CreateDate": "2023-04-19T14:17:03+00:00",\n        "UpdateDate": "2023-04-19T14:17:03+00:00"\n    }\n}\n\n')),(0,r.kt)("h3",{id:"create-the-service-account"},"Create the service account"),(0,r.kt)("p",null,"Create the service account using the ",(0,r.kt)("inlineCode",{parentName:"p"},"arn")," returned above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"eksctl create iamserviceaccount \\\n  --name ebs-csi-controller-sa \\\n  --namespace kube-system \\\n  --cluster sterling-east \\\n  --attach-policy-arn arn:aws:iam::748107796891:policy/AmazonEKS_EBS_CSI_Driver_Policy \\\n  --approve \\\n  --role-only \\\n  --role-name AmazonEKS_EBS_CSI_DriverRole\n")),(0,r.kt)("p",null,"Create the addon for the cluster using the ",(0,r.kt)("inlineCode",{parentName:"p"},"arn")," returned from the command above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"eksctl create addon \\\n--name aws-ebs-csi-driver \\\n--cluster sterling-east \\\n--service-account-role-arn arn:aws:iam::748107796891:role/AmazonEKS_EBS_CSI_DriverRole \\\n--force\n")),(0,r.kt)("h3",{id:"create-the-storageclass"},"Create the StorageClass"),(0,r.kt)("p",null,"Create the following StorageClass yaml to use gp3"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"gp3-sc.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-gp3-sc\nprovisioner: ebs.csi.aws.com\nparameters:\n  type: gp3\n  fsType: ext4\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer\n")),(0,r.kt)("p",null,"Create the storage class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"kubectl apply -f gp3-sc.yaml\n")),(0,r.kt)("h2",{id:"prepare-efs-storage-for-the-cluster"},"Prepare EFS storage for the cluster"),(0,r.kt)("p",null,"By default when we create a cluster with eksctl it defines and installs ",(0,r.kt)("inlineCode",{parentName:"p"},"gp2")," storage class which is backed by Amazon's EBS (elastic block storage). Being block storage, it's not super happy supporting RWX in our cluster. We need to install an EFS storage class."),(0,r.kt)("h3",{id:"create-an-iam-policy-and-role"},"Create an IAM policy and role"),(0,r.kt)("p",null,"Create an IAM policy and assign it to an IAM role. The policy will allow the Amazon EFS driver to interact with your file system."),(0,r.kt)("p",null,"Download the example policy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"curl -o iam-policy-example-efs.json https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json\n")),(0,r.kt)("p",null,"Create the policy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'aws iam create-policy \\\n--policy-name AmazonEKS_EFS_CSI_Driver_Policy \\\n--policy-document file://iam-policy-example-efs.json\n\n{\n    "Policy": {\n        "PolicyName": "AmazonEKS_EFS_CSI_Driver_Policy",\n        "PolicyId": "ANPA24LVTCGN7YGDYRWJT",\n        "Arn": "arn:aws:iam::748107796891:policy/AmazonEKS_EFS_CSI_Driver_Policy",\n        "Path": "/",\n        "DefaultVersionId": "v1",\n        "AttachmentCount": 0,\n        "PermissionsBoundaryUsageCount": 0,\n        "IsAttachable": true,\n        "CreateDate": "2023-01-24T17:24:00+00:00",\n        "UpdateDate": "2023-01-24T17:24:00+00:00"\n    }\n}\n')),(0,r.kt)("p",null,"Create an IAM role and attach the IAM policy to it. Annotate the Kubernetes service account with the IAM role ARN and the IAM role with the Kubernetes service account name. You can create the role using ",(0,r.kt)("inlineCode",{parentName:"p"},"eksctl")," or the AWS CLI. We're going to use ",(0,r.kt)("inlineCode",{parentName:"p"},"eksctl"),", Also our ",(0,r.kt)("inlineCode",{parentName:"p"},"Arn")," is returned in the output above, so we'll use it here."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"eksctl create iamserviceaccount \\\n    --cluster sterling-east \\\n    --namespace kube-system \\\n    --name efs-csi-controller-sa \\\n    --attach-policy-arn arn:aws:iam::748107796891:policy/AmazonEKS_EFS_CSI_Driver_Policy \\\n    --approve \\\n    --region us-east-1\n")),(0,r.kt)("p",null,"Now we just need our add-on registry address. This can be found here: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html"},"https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html")),(0,r.kt)("h3",{id:"install-the-driver-add-on"},"Install the driver add-on"),(0,r.kt)("p",null,"Let's install the driver add-on to our clusters. We're going to use ",(0,r.kt)("inlineCode",{parentName:"p"},"helm")," for this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/\n\nhelm repo update\n")),(0,r.kt)("p",null,"Install a release of the driver using the Helm chart. Replace the repository address with the cluster's ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html"},"container image address"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"helm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \\\n    --namespace kube-system \\\n    --set image.repository=602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/aws-efs-csi-driver \\\n    --set controller.serviceAccount.create=false \\\n    --set controller.serviceAccount.name=efs-csi-controller-sa\n\n")),(0,r.kt)("h3",{id:"create-the-filesystem"},"Create the filesystem"),(0,r.kt)("p",null,"Now we need to create the filesystem in EFS so we can use it"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export clustername=sterling-east\nexport region=us-east-1\n")),(0,r.kt)("p",null,"Get our VPC ID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'vpc_id=$(aws eks describe-cluster \\\n    --name $clustername \\\n    --query "cluster.resourcesVpcConfig.vpcId" \\\n    --region $region \\\n    --output text)\n')),(0,r.kt)("p",null,"Retrieve the CIDR range for your cluster's VPC and store it in a variable for use in a later step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'cidr_range=$(aws ec2 describe-vpcs \\\n    --vpc-ids $vpc_id \\\n    --query "Vpcs[].CidrBlock" \\\n    --output text \\\n    --region $region)\n')),(0,r.kt)("p",null,"Create a security group with an inbound rule that allows inbound NFS traffic for your Amazon EFS mount points."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'security_group_id=$(aws ec2 create-security-group \\\n    --group-name EFS4SterlingSecurityGroup \\\n    --description "EFS security group for sterling Clusters" \\\n    --vpc-id $vpc_id \\\n    --region $region \\\n    --output text)\n')),(0,r.kt)("p",null,"Create an inbound rule that allows inbound NFS traffic from the CIDR for your cluster's VPC."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"aws ec2 authorize-security-group-ingress \\\n    --group-id $security_group_id \\\n    --protocol tcp \\\n    --port 2049 \\\n    --region $region \\\n    --cidr $cidr_range\n")),(0,r.kt)("p",null,"Create a file system."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"file_system_id=$(aws efs create-file-system \\\n    --region $region \\\n    --encrypted \\\n    --performance-mode generalPurpose \\\n    --query 'FileSystemId' \\\n    --output text)\n")),(0,r.kt)("h3",{id:"create-the-mount-targets"},"Create the mount targets"),(0,r.kt)("p",null,"Create mount targets."),(0,r.kt)("p",null,"Determine the IDs of the subnets in your VPC and which Availability Zone the subnet is in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=$vpc_id\" \\\n    --query 'Subnets[*].{SubnetId: SubnetId,AvailabilityZone: AvailabilityZone,CidrBlock: CidrBlock}' \\\n    --region $region \\\n    --output table\n")),(0,r.kt)("p",null,"Should output the following"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"----------------------------------------------------------------------\n|                           DescribeSubnets                          |\n+------------------+--------------------+----------------------------+\n| AvailabilityZone |     CidrBlock      |         SubnetId           |\n+------------------+--------------------+----------------------------+\n|  us-east-1a      |  192.168.0.0/19    |  subnet-08ddff738c8fac2db  |\n|  us-east-1b      |  192.168.32.0/19   |  subnet-0e11acfc0a427d52d  |\n|  us-east-1b      |  192.168.128.0/19  |  subnet-0dd9067f0f828e49c  |\n|  us-east-1c      |  192.168.160.0/19  |  subnet-0da98130d8b80f210  |\n|  us-east-1a      |  192.168.96.0/19   |  subnet-02b159221adb9b790  |\n|  us-east-1c      |  192.168.64.0/19   |  subnet-01987475cac20b583  |\n+------------------+--------------------+----------------------------+\n")),(0,r.kt)("p",null,"Add mount targets for the subnets that your nodes are in."),(0,r.kt)("p",null,"Run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"for subnet in $(aws ec2 describe-subnets --filters \"Name=vpc-id,Values=$vpc_id\" --query 'Subnets[*].{SubnetId: SubnetId,AvailabilityZone: AvailabilityZone,CidrBlock: CidrBlock}' --region $region --output text | awk '{print $3}') ; do aws efs create-mount-target --file-system-id $file_system_id --region $region --subnet-id $subnet --security-groups $security_group_id ; done\n")),(0,r.kt)("p",null,"This wraps the below command in a for loop that will iterate through your subnet ids."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"aws efs create-mount-target \\\n    --file-system-id $file_system_id \\\n    --region $region \\\n    --subnet-id <SUBNETID> \\\n    --security-groups $security_group_id\n")),(0,r.kt)("h3",{id:"create-the-storage-classes"},"Create the storage classes"),(0,r.kt)("p",null,"Create a storage class for dynamic provisioning"),(0,r.kt)("p",null,"Let's get our filesystem ID if we don't already have it above. However if you ran the above steps, ",(0,r.kt)("inlineCode",{parentName:"p"},"$file_system_id")," should already be defined."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'aws efs describe-file-systems \\\n--query "FileSystems[*].FileSystemId" \\\n--region $region \\\n--output text\n\nfs-071439ffb7e10b67b\n')),(0,r.kt)("p",null,"Download a ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageClass")," manifest for Amazon EFS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"curl -o EFSStorageClass.yaml https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/examples/kubernetes/dynamic_provisioning/specs/storageclass.yaml\n\n")),(0,r.kt)("p",null,"Configure two separate EFS storage classes, one for Sterling and one for MQ. The reason for this is MQ requires specific userids to work happily when using shared storage whereas Sterling requires its own user to own stuff and might cause conflicts. By specifying separate classes we eliminate the problem. Make sure the ",(0,r.kt)("inlineCode",{parentName:"p"},"fileSystemId")," is the same for both."),(0,r.kt)("p",null,"Update it with the storage class id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sed -i 's/fileSystemId:.*/fileSystemId: fs-071439ffb7e10b67b/' EFSStorageClass.yaml\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"EFSStorageClass.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-mq-sc\nprovisioner: efs.csi.aws.com\nmountOptions:\n  - tls\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: fs-071439ffb7e10b67b\n  directoryPerms: "775"\n  gidRangeStart: "1000" # optional\n  gidRangeEnd: "3000" # optional\n  basePath: "/efs/dynamic_provisioning" # optional\n  uid: "2001" # This tells the provisioner to make the owner this uid\n  gid: "65534" # This tells the provisioner to make the group owner this gid\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sfg-sc\nprovisioner: efs.csi.aws.com\nmountOptions:\n  - tls\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: fs-071439ffb7e10b67b\n  directoryPerms: "775"\n  gidRangeStart: "1000" # optional\n  gidRangeEnd: "3000" # optional\n  basePath: "/efs/dynamic_provisioning" # optional\n  uid: "1010" # This tells the provisioner to make the owner this uid\n  gid: "1010" # This tells the provisioner to make the group owner this gid\n')),(0,r.kt)("p",null,"Deploy the storage class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f EFSStorageClass.yaml\n")),(0,r.kt)("p",null,"Finally, verify it's there"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"\n\nkubectl get sc\nNAME            PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nefs-mq-sc          efs.csi.aws.com         Delete          Immediate              false                  7s\nefs-sfg-sc          efs.csi.aws.com         Delete          Immediate              false                  7s\ngp2 (default)   kubernetes.io/aws-ebs   Delete          WaitForFirstConsumer   false                  13d\n")),(0,r.kt)("h2",{id:"install-the-loadbalancer-controller"},"Install the Loadbalancer controller"),(0,r.kt)("p",null,"Let's install the loadbalancer controller to the cluster"),(0,r.kt)("h3",{id:"create-the-iam-policy"},"Create the IAM Policy"),(0,r.kt)("p",null,"Download an IAM policy for the AWS Load Balancer Controller that allows it to make calls to AWS APIs on your behalf."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.4/docs/install/iam_policy.json\n")),(0,r.kt)("p",null,"Create an IAM policy using the policy downloaded in the previous step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'aws iam create-policy \\\n    --policy-name AWSLoadBalancerControllerIAMPolicy \\\n    --policy-document file://iam_policy.json\n\n{\n    "Policy": {\n        "PolicyName": "AWSLoadBalancerControllerIAMPolicy",\n        "PolicyId": "ANPA24LVTCGNV55JFAAP5",\n        "Arn": "arn:aws:iam::748107796891:policy/AWSLoadBalancerControllerIAMPolicy",\n        "Path": "/",\n        "DefaultVersionId": "v1",\n        "AttachmentCount": 0,\n        "PermissionsBoundaryUsageCount": 0,\n        "IsAttachable": true,\n        "CreateDate": "2023-01-17T20:22:23+00:00",\n        "UpdateDate": "2023-01-17T20:22:23+00:00"\n    }\n}\n')),(0,r.kt)("p",null,"Create an IAM role. Create a Kubernetes service account named ",(0,r.kt)("inlineCode",{parentName:"p"},"aws-load-balancer-controller")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"kube-system")," namespace for the AWS Load Balancer Controller and annotate the Kubernetes service account with the name of the IAM role."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"eksctl create iamserviceaccount \\\n  --cluster=sterling-east \\\n  --namespace=kube-system \\\n  --name=aws-load-balancer-controller-sterling \\\n  --role-name AmazonEKSsterlingLoadBalancerControllerRolesterling \\\n  --attach-policy-arn=arn:aws:iam::748107796891:policy/AWSLoadBalancerControllerIAMPolicy \\\n  --approve\n")),(0,r.kt)("h3",{id:"install-the-aws-load-balancer-controller"},"Install the AWS Load Balancer Controller."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\\n  -n kube-system \\\n  --set clusterName=sterling-east \\\n  --set serviceAccount.create=false \\\n  --set serviceAccount.name=aws-load-balancer-controller-sterling\n\nNAME: aws-load-balancer-controller\nLAST DEPLOYED: Tue Jan 17 15:33:50 2023\nNAMESPACE: kube-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nAWS Load Balancer controller installed!\n\n")),(0,r.kt)("h2",{id:"install-the-nginx-controller"},"Install the NGINX Controller"),(0,r.kt)("h3",{id:"get-the-nginx-controller-deployment"},"Get the NGINX controller deployment"),(0,r.kt)("p",null,"Pull down the NGINX controller deployment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -O nginx-deploy.yaml https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml\n")),(0,r.kt)("p",null,"Modify the deployment file and add the following annotations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'service.beta.kubernetes.io/aws-load-balancer-type: "external"\nservice.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"\nservice.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"\n')),(0,r.kt)("h3",{id:"apply-the-deployment"},"Apply the deployment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f nginx-deploy.yaml\n")),(0,r.kt)("h3",{id:"verify-the-deployment"},"Verify the deployment"),(0,r.kt)("p",null,"Command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get ingressclass\nNAME    CONTROLLER             PARAMETERS   AGE\nalb     ingress.k8s.aws/alb    <none>       6d10h\nnginx   k8s.io/ingress-nginx   <none>       7d\n")),(0,r.kt)("h2",{id:"security-rbacs"},"Security RBACS"),(0,r.kt)("p",null,"The following sample file illustrates RBAC for the default service account with the target namespace as ",(0,r.kt)("inlineCode",{parentName:"p"},"sterling")),(0,r.kt)("p",null,"Create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"sterling-rbac.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: ibm-b2bi-role-sterling\n  namespace: sterling\nrules:\n  - apiGroups: ['','batch']\n    resources: ['secrets','configmaps','persistentvolumeclaims','pods','services','cronjobs','jobs']\n    verbs: ['create', 'get', 'list', 'delete', 'patch', 'update']\n\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: ibm-b2bi-rolebinding-sterling\n  namespace: sterling\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: sterling\nroleRef:\n  kind: Role\n  name: ibm-b2bi-role-sterling\n  apiGroup: rbac.authorization.k8s.io\n")),(0,r.kt)("p",null,"Apply it to the cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f sterling-rbac.yaml\n")),(0,r.kt)("h2",{id:"security-policies"},"Security Policies"),(0,r.kt)("p",null,"With Kubernetes v1.25, Pod Security Policy (PSP) API has been removed and replaced with Pod Security Admission (PSA) contoller. Kubernetes PSA conroller enforces predefined Pod Security levels at the namespace level. The Kubernetes Pod Security Standards defines three different levels: privileged, baseline, and restricted. Refer to Kubernetes ","[",(0,r.kt)("inlineCode",{parentName:"p"},"Pod Security Standards"),"]"," (",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/security/pod-security-standards/"},"https://kubernetes.io/docs/concepts/security/pod-security-standards/"),") documentation for more details. This chart is compatible with the restricted security level."),(0,r.kt)("p",null,"The version of kubernetes in EKS in our instance is 1.24. So the following policies would be applied. Below is an optional custom PSP definition based on the IBM restricted PSP."),(0,r.kt)("p",null,"Predefined PodSecurityPolicy name: ",(0,r.kt)("a",{parentName:"p",href:"https://ibm.biz/cpkspec-psp"},(0,r.kt)("inlineCode",{parentName:"a"},"ibm-restricted-psp"))),(0,r.kt)("p",null,"From the user interface or command line, you can copy and paste the following snippets to create and enable the below custom PodSecurityPolicy based on IBM restricted PSP."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"custom-podsecpolicy.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: "ibm-b2bi-psp"\n  labels:\n    app: "ibm-b2bi-psp"\n\nspec:\n  privileged: false\n  allowPrivilegeEscalation: false\n  hostPID: false\n  hostIPC: false\n  hostNetwork: false\n  allowedCapabilities:\n  requiredDropCapabilities:\n  - MKNOD\n  - AUDIT_WRITE\n  - KILL\n  - NET_BIND_SERVICE\n  - NET_RAW\n  - FOWNER\n  - FSETID\n  - SYS_CHROOT\n  - SETFCAP\n  - SETPCAP\n  - CHOWN\n  - SETGID\n  - SETUID\n  - DAC_OVERRIDE\n  allowedHostPaths:\n  runAsUser:\n    rule: MustRunAsNonRoot\n  runAsGroup:\n    rule: MustRunAs\n    ranges:\n    - min: 1\n      max: 4294967294\n  seLinux:\n    rule: RunAsAny\n  supplementalGroups:\n    rule: MustRunAs\n    ranges:\n    - min: 1\n      max: 4294967294\n  fsGroup:\n    rule: MustRunAs\n    ranges:\n    - min: 1\n      max: 4294967294\n  volumes:\n  - configMap\n  - emptyDir\n  - projected\n  - secret\n  - downwardAPI\n  - persistentVolumeClaim\n  - nfs\n  forbiddenSysctls:\n  - \'*\'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: "ibm-b2bi-psp"\n  labels:\n    app: "ibm-b2bi-psp"\nrules:\n- apiGroups:\n  - policy\n  resourceNames:\n  - "ibm-b2bi-psp"\n  resources:\n  - podsecuritypolicies\n  verbs:\n  - use\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: "ibm-b2bi-psp"\n  labels:\n    app: "ibm-b2bi-psp"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: "ibm-b2bi-psp"\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: Group\n  name: system:serviceaccounts\n  namespace: sterling\n')),(0,r.kt)("p",null,"Apply it to the cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f custom-podsecpolicy.yaml\n")),(0,r.kt)("h2",{id:"aws-rdsdb"},"AWS RDS/DB"),(0,r.kt)("p",null,"For this installation we will be using an Oracle Database hosted in AWS RDS."),(0,r.kt)("h3",{id:"create-the-security-group"},"Create the security group"),(0,r.kt)("p",null,"Create a security group. We're going to get our vpc for our sterling cluster first and use that here since we don't have any default vpc."),(0,r.kt)("p",null,"Let's export the following env vars"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export clustername=sterling-east\nexport region=us-east-1\n")),(0,r.kt)("p",null,"Now let's retrieve our vpc id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'vpc_id=$(aws eks describe-cluster \\\n    --name $clustername \\\n    --query "cluster.resourcesVpcConfig.vpcId" \\\n    --region $region \\\n    --output text)\n')),(0,r.kt)("p",null,"And with those vars set, let's now create our security group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'security_group_id=$(aws ec2 create-security-group \\\n    --group-name RDSSterlingSecGroup \\\n    --description "RDS Access to Sterling Cluster" \\\n    --vpc-id $vpc_id \\\n    --region $region \\\n    --output text)\n')),(0,r.kt)("h3",{id:"retrieve-the-cidr-range-for-the-cluster-vpc"},"Retrieve the CIDR range for the cluster VPC"),(0,r.kt)("p",null,"Retrieve the CIDR range for your cluster's VPC and store it in a variable for use in a later step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cidr_range=$(aws ec2 describe-vpcs \\\n    --vpc-ids $vpc_id \\\n    --query "Vpcs[].CidrBlock" \\\n    --output text \\\n    --region $region)\n')),(0,r.kt)("h3",{id:"authorized-access-to-that-group"},"Authorized access to that group"),(0,r.kt)("p",null,"Let's authorize access to that group for Oracle which uses port 1521"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"aws ec2 authorize-security-group-ingress \\\n    --group-id $security_group_id \\\n    --protocol tcp \\\n    --port 1521 \\\n    --region $region \\\n    --cidr $cidr_range\n")),(0,r.kt)("h3",{id:"create-the-db-subnet-group"},"Create the DB Subnet Group"),(0,r.kt)("p",null,"Let's create a db subnet group. First get our existing subnet ids from our vpc"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=$vpc_id\" \\\n    --query 'Subnets[*].{SubnetId: SubnetId,AvailabilityZone: AvailabilityZone,CidrBlock: CidrBlock}' \\\n    --region $region \\\n    --output table\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"----------------------------------------------------------------------\n|                           DescribeSubnets                          |\n+------------------+--------------------+----------------------------+\n| AvailabilityZone |     CidrBlock      |         SubnetId           |\n+------------------+--------------------+----------------------------+\n|  us-east-1a      |  192.168.0.0/19    |  subnet-08ddff738c8fac2db  |\n|  us-east-1b      |  192.168.32.0/19   |  subnet-0e11acfc0a427d52d  |\n|  us-east-1b      |  192.168.128.0/19  |  subnet-0dd9067f0f828e49c  |\n|  us-east-1c      |  192.168.160.0/19  |  subnet-0da98130d8b80f210  |\n|  us-east-1a      |  192.168.96.0/19   |  subnet-02b159221adb9b790  |\n|  us-east-1c      |  192.168.64.0/19   |  subnet-01987475cac20b583  |\n+------------------+--------------------+----------------------------+\n")),(0,r.kt)("p",null,"Now let's create our db subnet group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'aws rds create-db-subnet-group \\\n--db-subnet-group-name "sterling-rds-subnet-group" \\\n--db-subnet-group-description "This is our cluster subnet ids authorized and grouped for RDS" \\\n--subnet-ids "subnet-08ddff738c8fac2db" "subnet-0e11acfc0a427d52d" "subnet-0dd9067f0f828e49c" "subnet-0da98130d8b80f210" "subnet-02b159221adb9b790" "subnet-01987475cac20b583"\n')),(0,r.kt)("h3",{id:"create-the-rds-db-instance"},"Create the RDS DB instance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"aws rds create-db-instance \\\n    --engine oracle-ee \\\n    --db-instance-identifier sterling-mft-db \\\n    --allocated-storage 300 \\\n    --multi-az \\\n    --db-subnet-group-name sterling-rds-subnet-group \\\n    --db-instance-class db.t3.large \\\n    --vpc-security-group-ids $security_group_id \\\n    --master-username oracleuser \\\n    --master-user-password oraclepass \\\n    --backup-retention-period 3\n")),(0,r.kt)("p",null,"A default DB called ",(0,r.kt)("inlineCode",{parentName:"p"},"ORCL")," will be created with a default admin user ",(0,r.kt)("inlineCode",{parentName:"p"},"oracleuser")," with the password ",(0,r.kt)("inlineCode",{parentName:"p"},"oraclepass"),"."),(0,r.kt)("h2",{id:"configure-the-oracle-instance"},"Configure the Oracle Instance"),(0,r.kt)("h3",{id:"create-a-client-pod"},"Create a client pod"),(0,r.kt)("p",null,"Configure a pod in the ",(0,r.kt)("inlineCode",{parentName:"p"},"sterling")," in your namespace using the below yaml:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"oracle_client.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: oracleclient\n  labels:\n    app: oracleclient\nspec:\n  containers:\n    - name: instantclient\n      image: ghcr.io/oracle/oraclelinux8-instantclient:19\n      command: ["sleep"]\n      args: ["infinity"]\n')),(0,r.kt)("p",null,"Create the pod"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f oracle_client.yaml\n")),(0,r.kt)("p",null,"Verify the pod is up and running"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get pods\nNAME           READY   STATUS    RESTARTS   AGE\noracleclient   1/1     Running   0          22m\n")),(0,r.kt)("h3",{id:"connect-to-the-client-pod"},"Connect to the client pod"),(0,r.kt)("p",null,"Connect to your db instance. The user is ",(0,r.kt)("inlineCode",{parentName:"p"},"oracleuser")," and the password is ",(0,r.kt)("inlineCode",{parentName:"p"},"oraclepass")," as we set when we created the RDS instance. The port will be ",(0,r.kt)("inlineCode",{parentName:"p"},"1521"),". We will retrieve the endpoint with the ",(0,r.kt)("inlineCode",{parentName:"p"},"aws")," cli and export it as a var called ",(0,r.kt)("inlineCode",{parentName:"p"},"$endpoint"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'endpoint=$(aws rds describe-db-instances --query "DBInstances[*].Endpoint.Address" --output text)\n\nkubectl exec -it oracleclient -- sqlplus "oracleuser/oraclepass@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=$endpoint)(PORT=1521))(CONNECT_DATA=(SID=ORCL)))"\n\nSQL*Plus: Release 19.0.0.0.0 - Production on Wed Feb 15 17:16:05 2023\nVersion 19.18.0.0.0\n\nCopyright (c) 1982, 2022, Oracle.  All rights reserved.\n\nLast Successful login time: Wed Feb 15 2023 17:07:24 +00:00\n\nConnected to:\nOracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production\nVersion 19.17.0.0.0\n\nSQL>\n\n')),(0,r.kt)("h3",{id:"configure-database"},"Configure database"),(0,r.kt)("p",null,"Now that we have an Oracle RDS instance and we are logged in, we are going to configure the database in preparation for Sterling B2Bi installation."),(0,r.kt)("p",null,"Run the following SQL script that will do the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a tablespace for user tables and indexes"),(0,r.kt)("li",{parentName:"ol"},"Set newly created tablespace as default"),(0,r.kt)("li",{parentName:"ol"},"Create a new user for Sterling. This is the user we will be using for the database."),(0,r.kt)("li",{parentName:"ol"},"Grant permissions to the Sterling user")),(0,r.kt)("p",null,"Copy and paste the following into the SQL cmdline prompt."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'/*\nCreate tablespace\n*/\nCREATE TABLESPACE SI_USERS DATAFILE SIZE 1G AUTOEXTEND ON MAXSIZE 100G;\n\n/*\nSet new tablespace as default\n*/\nEXEC rdsadmin.rdsadmin_util.alter_default_tablespace(tablespace_name => \'SI_USERS\');\n\n/*\nCreate new user for Sterling\n*/\nCREATE USER SI_USER IDENTIFIED BY dbpassword;\n\n/*\nGrant necessary permissions to newly created Sterling user\n*/\nGRANT "CONNECT" TO SI_USER;\nALTER USER SI_USER DEFAULT ROLE "CONNECT";\nALTER USER SI_USER QUOTA 100G ON SI_USERS;\nGRANT CREATE SEQUENCE TO SI_USER;\nGRANT CREATE TABLE TO SI_USER;\nGRANT CREATE TRIGGER TO SI_USER;\nGRANT SELECT ON CTXSYS.CTX_USER_INDEXES TO SI_USER;\nGRANT SELECT ON SYS.DBA_DATA_FILES TO SI_USER;\nGRANT SELECT ON SYS.DBA_FREE_SPACE TO SI_USER;\nGRANT SELECT ON SYS.DBA_USERS TO SI_USER;\nGRANT SELECT ON SYS.V_$PARAMETER TO SI_USER;\nGRANT SELECT ANY DICTIONARY TO SI_USER;\nGRANT ALTER SESSION TO SI_USER;\nGRANT CREATE SESSION TO SI_USER;\nGRANT CREATE VIEW TO SI_USER;\n\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"deploy-ibm-mq-to-the-cluster"},"Deploy IBM MQ to the cluster"),(0,r.kt)("h3",{id:"create-mq-namespace-optional"},"Create MQ Namespace (optional)"),(0,r.kt)("p",null,"Create a new namespace for MQ. This is optional if you'd rather just run MQ in the same namespace as Sterling b2bi then skip this step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl create namespace mqsterling\n")),(0,r.kt)("p",null,"Set our context to it"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl config set-context --current --namespace=mqsterling\n")),(0,r.kt)("h3",{id:"create-an-mq-overrides-file"},"Create an MQ overrides file"),(0,r.kt)("p",null,"Create a values file called ",(0,r.kt)("inlineCode",{parentName:"p"},"sterling_values.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# \xa9 Copyright IBM Corporation 2021, 2022\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nlicense: accept\nlog:\n  debug: false\n\nimage:\n  # repository is the container repository to use\n  # repository: <URL FOR AIRGAPPED REPO>/icr.io/ibm-messaging/mq\n  # This should point to either the IBM repo by default or it can be changed to point elsewhere.\n  repository: icr.io/ibm-messaging/mq\n  # tag is the tag to use for the container repository\n  tag: latest\n  # pullSecret is the secret to use when pulling the image from a private registry\n  # pullSecret: ics-cots-pullsecret\n  pullSecret:\n  # pullPolicy is either IfNotPresent or Always (https://kubernetes.io/docs/concepts/containers/images/)\n  pullPolicy: IfNotPresent\n\nqueueManager:\n  name: b2bi\n  nativeha:\n    enable: true\n  multiinstance:\n    enable: false\n\nmetrics:\n  enabled: true\n\npersistence:\n  dataPVC:\n    enable: true\n    name: "data"\n    size: 2Gi\n    storageClassName: "efs-mq-sc"\n  logPVC:\n    enable: true\n    name: "log"\n    size: 2Gi\n    storageClassName: "efs-mq-sc"\n  qmPVC:\n    enable: true\n    name: "qm"\n    size: 2Gi\n    storageClassName: "efs-mq-sc"\n\nsecurity:\n  context:\n    fsGroup: 65534\n#    fsGroup: 0\n    supplementalGroups: [65534,2001]\n  initVolumeAsRoot: false\n  runAsUser: 2001\n  runAsGroup: 2001\n\nmetadata:\n  annotations:\n    productName: "IBM MQ Advanced for Developers"\n    productID: "2f886a3eefbe4ccb89b2adb97c78b9cb"\n    productChargedContainers: ""\n    productMetric: "FREE"\nroute:\n  nodePort:\n    webconsole: false\n    mqtraffic: true\n  loadBalancer:\n    webconsole: false\n    mqtraffic: true\n  ingress:\n    webconsole:\n      enable: false\n      hostname:\n      path: /ibmmq\n      tls:\n        enable: false\n')),(0,r.kt)("h3",{id:"install-ibm-mq"},"Install IBM MQ"),(0,r.kt)("p",null,"Install IBM MQ with the following command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'helm install sterlingmq ibm-messaging-mq/ibm-mq \\\n-f sterling_values.yaml \\\n--set "queueManager.envVariables[0].name=MQ_ADMIN_PASSWORD" \\\n--set "queueManager.envVariables[0].value=mqpasswd" \\\n--set "queueManager.envVariables[1].name=MQ_APP_PASSWORD" \\\n--set "queueManager.envVariables[1].value=mqpasswd"\n')),(0,r.kt)("p",null,"The command above will create a loadbalancer with port 1414 as the access port for the queue manager."),(0,r.kt)("h3",{id:"create-the-mq-secret"},"Create the MQ Secret."),(0,r.kt)("p",null,"This needs to be created in the sterling namespace where B2Bi will be installed."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mqsecret.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apiVersion: v1\nkind: Secret\nmetadata:\n    name: mq-secret\ntype: Opaque\nstringData:\n    JMS_USERNAME: mqadmin\n    JMS_PASSWORD: mqpasswd\n# Set these values if we have setup our keystores for MQ\n#  JMS_KEYSTORE_PASSWORD: \n#  JMS_TRUSTSTORE_PASSWORD: \n#    \n")),(0,r.kt)("p",null,"apply the secret to the sterling namespace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f mqsecret.yaml -n sterling\n")),(0,r.kt)("h3",{id:"retrieve-mqs-cluster-ip"},"Retrieve MQ's cluster-ip"),(0,r.kt)("p",null,"Retrieve the cluster-ip of MQ's loadbalancer and make a note of it:"),(0,r.kt)("p",null,"If you created a separate namespace for MQ"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get services -n mqsterling\n")),(0,r.kt)("p",null,"If MQ is in the same namespace (sterling)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get services -n sterling\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"NAME                             TYPE           CLUSTER-IP       EXTERNAL-IP                                                                     PORT(S)             AGE\nsterlingmq-ibm-mq                ClusterIP      10.100.251.229   <none>                                                                          9443/TCP,1414/TCP   70d\nsterlingmq-ibm-mq-loadbalancer   LoadBalancer   10.100.98.89     k8s-mqsterli-sterling-6c00100a47-92a6027e40f34c81.elb.us-east-1.amazonaws.com   1414:30516/TCP      70d\nsterlingmq-ibm-mq-metrics        ClusterIP      10.100.21.87     <none>                                                                          9157/TCP            70d\nsterlingmq-ibm-mq-qm             NodePort       10.100.146.149   <none>                                                                          1414:30038/TCP      70d\nsterlingmq-ibm-mq-web            NodePort       10.100.183.242   <none>                                                                          9443:32013/TCP      70d\n")),(0,r.kt)("p",null,"In the above return output, our cluster-ip for the loadbalancer for MQ is ",(0,r.kt)("inlineCode",{parentName:"p"},"10.100.98.89"),"."),(0,r.kt)("h2",{id:"wrap-up"},"Wrap Up"),(0,r.kt)("p",null,"In the steps above, we have performed the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Setup aws client"),(0,r.kt)("li",{parentName:"ol"},"Setup ",(0,r.kt)("inlineCode",{parentName:"li"},"eskctl")),(0,r.kt)("li",{parentName:"ol"},"Created a cluster"),(0,r.kt)("li",{parentName:"ol"},"Installed ",(0,r.kt)("inlineCode",{parentName:"li"},"efs")," storage controller"),(0,r.kt)("li",{parentName:"ol"},"Installed ",(0,r.kt)("inlineCode",{parentName:"li"},"ebs")," storage controller"),(0,r.kt)("li",{parentName:"ol"},"Installed the loadbalancer controller"),(0,r.kt)("li",{parentName:"ol"},"Installed the NGINX ingress controller"),(0,r.kt)("li",{parentName:"ol"},"Set up the required Security policies and RBACs"),(0,r.kt)("li",{parentName:"ol"},"Created an AWS RDS Oracle Instance and configured it")))}d.isMDXComponent=!0}}]);