"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1993],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,b=c["".concat(s,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(b,l(l({ref:t},d),{},{components:n})):a.createElement(b,l({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1628:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(4137));const i={id:"solution-deploy",sidebar_position:1,title:"Deploy"},l="Sterling Installation",o={unversionedId:"Create/solution-deploy",id:"Create/solution-deploy",title:"Deploy",description:"Required secrets",source:"@site/docs/3-Create/Deploy.md",sourceDirName:"3-Create",slug:"/Create/solution-deploy",permalink:"/solution-sfg-aws/Create/solution-deploy",draft:!1,editUrl:"https://github.com/ibm-client-engineering/solution-sfg-aws/tree/main/packages/create-docusaurus/templates/shared/docs/3-Create/Deploy.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"solution-deploy",sidebar_position:1,title:"Deploy"},sidebar:"tutorialSidebar",previous:{title:"Create",permalink:"/solution-sfg-aws/category/create"},next:{title:"Validate",permalink:"/solution-sfg-aws/Create/solution-validate"}},s={},p=[{value:"Required secrets",id:"required-secrets",level:2},{value:"Sidecar Deployment",id:"sidecar-deployment",level:2},{value:"Generate the yaml file",id:"generate-the-yaml-file",level:3},{value:"Create the sidecar pod and volume",id:"create-the-sidecar-pod-and-volume",level:3},{value:"Retrieve the JDBC driver and stage it to the pod",id:"retrieve-the-jdbc-driver-and-stage-it-to-the-pod",level:3},{value:"Download the Sterling helm charts",id:"download-the-sterling-helm-charts",level:2},{value:"Update our chart version",id:"update-our-chart-version",level:3},{value:"Update our chart version",id:"update-our-chart-version-1",level:3},{value:"Sterling Override File",id:"sterling-override-file",level:2},{value:"Update the overrides as required",id:"update-the-overrides-as-required",level:3},{value:"Configuring Ingress in the overrides",id:"configuring-ingress-in-the-overrides",level:3},{value:"ALB Ingress",id:"alb-ingress",level:4},{value:"NGINX Controller Ingress",id:"nginx-controller-ingress",level:4},{value:"Ingress settings for each application",id:"ingress-settings-for-each-application",level:4},{value:"Setting MQ info in the overrides",id:"setting-mq-info-in-the-overrides",level:3},{value:"Setting the Database info in the overrides",id:"setting-the-database-info-in-the-overrides",level:3},{value:"Custom Network Policies",id:"custom-network-policies",level:3},{value:"TLS SecretNames for ingress",id:"tls-secretnames-for-ingress",level:3},{value:"Perform the Helm installation",id:"perform-the-helm-installation",level:2},{value:"Application Validation",id:"application-validation",level:3},{value:"Default Sterling Users:",id:"default-sterling-users",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sterling-installation"},"Sterling Installation"),(0,r.kt)("h2",{id:"required-secrets"},"Required secrets"),(0,r.kt)("p",null,"Create the following secrets in the ",(0,r.kt)("inlineCode",{parentName:"p"},"sterling")," namespace"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sterling-secrets.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: b2b-system-passphrase-secret\ntype: Opaque\nstringData:\n  SYSTEM_PASSPHRASE: password\n---\napiVersion: v1\nkind: Secret\nmetadata:\n    name: mq-secret\ntype: Opaque\nstringData:\n    JMS_USERNAME: app\n    JMS_PASSWORD: mqpasswd\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: b2b-db-secret\ntype: Opaque\nstringData:\n  DB_USER: SI_USER\n  DB_PASSWORD: dbpassword\n")),(0,r.kt)("p",null,"As a note, we are setting the user/pass for the database to ",(0,r.kt)("inlineCode",{parentName:"p"},"SI_USER")," with a password of ",(0,r.kt)("inlineCode",{parentName:"p"},"dbpassword"),"."),(0,r.kt)("p",null,"Apply the secrets."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f sterling-secrets.yaml -n sterling\n")),(0,r.kt)("h2",{id:"sidecar-deployment"},"Sidecar Deployment"),(0,r.kt)("p",null,"In order to upload the required jdbc drivers that b2bi will need to talk to the database, we must create a sidecar pod with a storage volume that will be shared."),(0,r.kt)("h3",{id:"generate-the-yaml-file"},"Generate the yaml file"),(0,r.kt)("p",null,"Create the following file"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sterlingtoolkitdeploy.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: sterlingtoolkit-pvc\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: efs-sfg-sc\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sterlingtoolkit\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: sterlingtoolkit\n  template:\n    metadata:\n      labels:\n        app: sterlingtoolkit\n    spec:\n      containers:\n      - name: sterlingtoolkit\n        image: centos\n        command: ["/bin/sh"]\n        args: ["-c", "useradd -u 1010 b2biuser && sleep infinity"]\n        volumeMounts:\n        - mountPath: /var/nfs-data/resources\n          name: storagevol\n      volumes:\n      - name: storagevol\n        persistentVolumeClaim:\n          claimName: sterlingtoolkit-pvc\n')),(0,r.kt)("h3",{id:"create-the-sidecar-pod-and-volume"},"Create the sidecar pod and volume"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f sterlingtoolkitdeploy.yaml\n")),(0,r.kt)("h3",{id:"retrieve-the-jdbc-driver-and-stage-it-to-the-pod"},"Retrieve the JDBC driver and stage it to the pod"),(0,r.kt)("p",null,"Download the Oracle JDBC driver"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://download.oracle.com/otn-pub/otn_software/jdbc/219/ojdbc8.jar"},"https://download.oracle.com/otn-pub/otn_software/jdbc/219/ojdbc8.jar")),(0,r.kt)("p",null,"Determine our pod name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\noracleclient                       1/1     Running   0          3h55m\nsterlingtoolkit-577b8c56f5-dchdx   1/1     Running   0          4m59s\n")),(0,r.kt)("p",null,"Upload the jar file to the appropriate folder"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl cp ojdbc11.jar sterlingtoolkit-577b8c56f5-dchdx:/var/nfs-data/resources\n")),(0,r.kt)("h2",{id:"download-the-sterling-helm-charts"},"Download the Sterling helm charts"),(0,r.kt)("p",null,"The following link is for the required helm charts for this installation. If you haven't already pulled this down, do it now."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/charts/raw/master/repo/ibm-helm/ibm-b2bi-prod-2.1.3.tgz"},"ibm-b2bi-prod-2.1.3")),(0,r.kt)("p",null,"Download the ",(0,r.kt)("inlineCode",{parentName:"p"},"ibm-b2bi-prod")," helm charts from the above link."),(0,r.kt)("p",null,"Extract the ",(0,r.kt)("inlineCode",{parentName:"p"},"ibm-b2bi-prod-2.1.1.tgz")," file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"tar zxvf ibm-b2bi-prod-2.1.1.tgz\n")),(0,r.kt)("p",null,"Apply the patches included with this repo from the same directory you extracted the helm charts. There are also patches for 2.1.1 in that patch directory, but we are working with 2.1.3 of the helm charts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"patch -p0 < path/to/repo/patches/2.1.3/*.patch -V none\n\npatching file 'ibm-b2bi-prod/templates/db-setup-job.yaml'\npatching file 'ibm-b2bi-prod/templates/ext-purge-job.yaml'\npatching file 'ibm-b2bi-prod/templates/post-delete-cleanup-job.yaml'\npatching file 'ibm-b2bi-prod/templates/postinstall-patch-ingress-job.yaml'\npatching file 'ibm-b2bi-prod/templates/preinstall-tls-setup-job.yaml'\npatching file 'ibm-b2bi-prod/values.yaml'\npatching file 'ibm-b2bi-prod/templates/ingress.yaml'\npatching file 'ibm-b2bi-prod/templates/ac-backend-service.yaml'\npatching file 'ibm-b2bi-prod/templates/asi-backend-service.yaml'\npatching file 'ibm-b2bi-prod/templates/validation.tpl'\npatching file 'ibm-b2bi-prod/values.yaml'\n\n")),(0,r.kt)("h3",{id:"update-our-chart-version"},"Update our chart version"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"As of this writing, you will need to update the version in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Chart.yaml")," in version 2.1.3 and below.")),(0,r.kt)("p",null,"Update the Kubernetes version in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Chart.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"tar zxvf ibm-b2bi-prod-2.1.3.tgz\n")),(0,r.kt)("p",null,"Apply the patches included with this repo from the same directory you extracted the helm charts. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"patch -p0 < path/to/repo/patches/*.patch\n\npatching file 'ibm-b2bi-prod/templates/db-setup-job.yaml'\npatching file 'ibm-b2bi-prod/templates/ext-purge-job.yaml'\npatching file 'ibm-b2bi-prod/templates/post-delete-cleanup-job.yaml'\npatching file 'ibm-b2bi-prod/templates/postinstall-patch-ingress-job.yaml'\npatching file 'ibm-b2bi-prod/templates/preinstall-tls-setup-job.yaml'\npatching file 'ibm-b2bi-prod/values.yaml'\npatching file 'ibm-b2bi-prod/templates/ingress.yaml'\npatching file 'ibm-b2bi-prod/templates/ac-backend-service.yaml'\npatching file 'ibm-b2bi-prod/templates/asi-backend-service.yaml'\npatching file 'ibm-b2bi-prod/templates/validation.tpl'\npatching file 'ibm-b2bi-prod/values.yaml'\n\n")),(0,r.kt)("h3",{id:"update-our-chart-version-1"},"Update our chart version"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"As of this writing, you will need to update the version in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Chart.yaml")," in version 2.1.3 and below.")),(0,r.kt)("p",null,"Update the Kubernetes version in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Chart.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ibm-b2bi-prod\n")),(0,r.kt)("p",null,"Retrieve our EKS kubernetes version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl version --short\n\nClient Version: v1.23.0\nKustomize Version: v4.5.7\nServer Version: v1.23.14-eks-ffeb93d\n")),(0,r.kt)("p",null,"Make a note of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Server Version")," and update the ",(0,r.kt)("inlineCode",{parentName:"p"},"Chart.yaml")," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ibm-b2bi-prod")," directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sed -i \"s/^kubeVersion:.*/kubeVersion: '>=v1.23.14-eks-ffeb93d'/\" Chart.yaml\n")),(0,r.kt)("h2",{id:"sterling-override-file"},"Sterling Override File"),(0,r.kt)("p",null,"This is valid for installing the Sterling B2BI product."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:n(7326).Z},"sterling-overrides-b2bi.yaml")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you need to add custom labeling for the pods, look for this section under each application definition in the overrides file:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"  # for pod Affinity and podAntiAffinity\n  extraLabels: {}\n    #acLabel: acValue\n")),(0,r.kt)("p",{parentName:"admonition"},"Add the labels that would be applied to each pod"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"  # for pod Affinity and podAntiAffinity\n  extraLabels:\n    customlabelname: customlabelvalue\n"))),(0,r.kt)("h3",{id:"update-the-overrides-as-required"},"Update the overrides as required"),(0,r.kt)("p",null,"Host entries for each ingress should match what your existing domain is if you don't have a dedicated FQDN. This means you should set a wildcard."),(0,r.kt)("p",null,"In our example, we are not using a custom domain so our ingress host entries look like the following in the overrides document for each application (ac, asi, api):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  ingress:\n    internal:\n      host: "*.amazonaws.com"\n      tls:\n        enabled: true\n        secretName: sterling-b2bi-b2bi-ac-frontend-svc\n      extraPaths: []\n    external:\n      host: "*.amazonaws.com" \n      tls:\n        enabled: true\n        secretName: sterling-b2bi-b2bi-ac-frontend-svc\n      extraPaths: []\n')),(0,r.kt)("h3",{id:"configuring-ingress-in-the-overrides"},"Configuring Ingress in the overrides"),(0,r.kt)("p",null,"Depending on whether you have installed the NGINX Ingress Controller or are using the native ALB Ingress, you will need to make the following updates to the overrides."),(0,r.kt)("h4",{id:"alb-ingress"},"ALB Ingress"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'ingress:\n  enabled: true\n  controller: "alb"\n  annotations:\n    alb.ingress.kubernetes.io/target-type: ip \n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/backend-protocol: HTTPS\n    alb.ingress.kubernetes.io/listen-ports: \'[{"HTTP": 80}, {"HTTPS": 443}]\'\n    alb.ingress.kubernetes.io/certificate-arn: \'<CERT ARN>\'\n  port:\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"ALB Ingress requires a tls cert stored in AWS ACM. Follow this procedure to generate a cert and key and import it to ACM. If you have a FQDN to use for the host, set it here for the CN or use a wildcard for your domain. Our example uses ",(0,r.kt)("inlineCode",{parentName:"p"},"*.amazonaws.com")," "),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'openssl genrsa 2048 -out alb-key.pem\n\nopenssl req -new -x509 -nodes -sha256 -days 999 -key alb-key.pem -outform PEM -out alb-cert.pem -subj "/C=US/ST=MA/L=Boston/O=IBM/OU=FSM/CN=*.amazonaws.com"\n')),(0,r.kt)("p",{parentName:"admonition"},"Import it into ACM with the following command. Region should be set to your cluster's region."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'aws acm import-certificate \\\n--certificate fileb://alb-cert.pem \\\n--private-key fileb://alb-key.pem \\\n--region us-east-1 \\\n--tags "Key=cluster,Value=sterling-mft-east"\n\n{\n    "CertificateArn": "arn:aws:acm:us-east-1:748107796891:certificate/7aa410d2-7d5d-488d-918d-a9fdfed5d77f"\n}\n\n')),(0,r.kt)("p",{parentName:"admonition"},"Take note of the returned CertificateArn as this is the value you need for ",(0,r.kt)("inlineCode",{parentName:"p"},"alb.ingress.kubernetes.io/certificate-arn:"))),(0,r.kt)("h4",{id:"nginx-controller-ingress"},"NGINX Controller Ingress"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'ingress:\n  enabled: true\n  controller: "nginx"\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: 2000m\n  port:\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For NGINX we need to update ",(0,r.kt)("inlineCode",{parentName:"p"},"nginx.ingress.kubernetes.io/proxy-body-size:")," to a high size in order to be able to upload large jar files to the B2Bi api.")),(0,r.kt)("h4",{id:"ingress-settings-for-each-application"},"Ingress settings for each application"),(0,r.kt)("p",null,"AC and ASI should have their own ",(0,r.kt)("inlineCode",{parentName:"p"},"ingress")," entries that will look similar to this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  ingress:\n    internal:\n      host: "*.amazonaws.com"\n      tls:\n        enabled: true\n        secretName: sterling-b2bi-b2bi-ac-frontend-svc\n      extraPaths: []\n    external:\n      host: "*.amazonaws.com"\n      tls:\n        enabled: true\n        secretName: sterling-b2bi-b2bi-ac-frontend-svc\n      extraPaths: []\n')),(0,r.kt)("p",null,"Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"host:")," entry to either a wildcard for your custom domain or the fqdn you established if you are using your own domain. The ",(0,r.kt)("inlineCode",{parentName:"p"},"secretName:")," should match the service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sterling-b2bi-b2bi-asi-frontend-svc\nsterling-b2bi-b2bi-ac-frontend-svc\nsterling-b2bi-b2bi-api-frontend-svc\n\n")),(0,r.kt)("p",null,"For API use the same logic as above and use your specific FQDN or your wildcarded domain:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  ingress:\n    internal:\n      host: "*.amazonaws.com"\n      tls:\n        enabled: true\n        secretName: sterling-b2bi-b2bi-api-frontend-svc\n')),(0,r.kt)("h3",{id:"setting-mq-info-in-the-overrides"},"Setting MQ info in the overrides"),(0,r.kt)("p",null,"Run the following sed commands on the overrides file. You should have the cluster-ip of the MQ service from a previous step in during Preparation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'sed -i "s/^jmsVendor:.*/jmsVendor: IBMMQ/" sterling-b2bi-values.yaml\nsed -i "s/^jmsQueueName:.*/jmsQueueName: DEV.QUEUE.1/" sterling-b2bi-values.yaml\nsed -i "s/^jmsHost:.*/jmsHost: 10.100.98.89/" sterling-b2bi-values.yaml\nsed -i "s/^jmsChannel:.*/jmsChannel: DEV.APP.SVRCONN/" sterling-b2bi-values.yaml\nsed -i "s/^jmsSecret:.*/jmsSecret: mq-secret/" sterling-b2bi-values.yaml\n')),(0,r.kt)("h3",{id:"setting-the-database-info-in-the-overrides"},"Setting the Database info in the overrides"),(0,r.kt)("p",null,"Run the following sed commands on the overrides file. Make sure you took note of the RDS url to access the RDS instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'sed -i "s/^dbVendor:.*/dbVendor: Oracle/" sterling-b2bi-values.yaml\nsed -i "s/^dbHost:.*/dbHost: sterling-mft-db.cehubq1eqcri.us-east-1.rds.amazonaws.com/" sterling-b2bi-values.yaml\nsed -i "s/^dbPort:.*/dbPort: 1521/" sterling-b2bi-values.yaml\nsed -i "s/^dbData:.*/dbData: ORCL/" sterling-b2bi-values.yaml\n')),(0,r.kt)("h3",{id:"custom-network-policies"},"Custom Network Policies"),(0,r.kt)("p",null,"If your cluster is restrictive, you may need to add extra customPolicies to the overrides file. This can be found near the top and would resemble the following entries:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'global:\n  license: true\n  image:\n    repository: "cp.icr.io/cp/ibm-b2bi/b2bi"\n    tag: "6.1.2.1"\n    digest: sha256:7426e3f8d935f28135b3f2b9cd5bc653105af9609606da967cb1cf70ca0b49de\n    pullPolicy: IfNotPresent\n    pullSecret: "ibm-pull-secret"\n  networkPolicies:\n    ingress:\n      enabled: true\n      customPolicies:\n    egress:\n      enabled: true\n// hightlight-start\n      customPolicies:\n      - name: allow-egress-to-rds\n        toSelectors:\n        - podSelector:\n            matchLabels:\n              app.kubernetes.io/name: b2bi\n              release: sterling-b2bi\n        - ipBlock:\n            cidr: 192.168.99.219/32\n        ports:\n          - protocol: TCP\n            port: 1521\n      - name: allow-egress-to-cd\n        toSelectors:\n        - podSelector:\n            matchLabels:\n              app.kubernetes.io/name: b2bi\n              release: sterling-b2bi\n        - ipBlock:\n            cidr: 192.168.99.219/32\n        ports:\n          - protocol: TCP\n            port: 1366\n// highlight-end\n')),(0,r.kt)("h3",{id:"tls-secretnames-for-ingress"},"TLS SecretNames for ingress"),(0,r.kt)("p",null,"When the tls option is enabled for each app container, the secretName is created by the creattls job that is run at the beginning of the installation. So that secret can be applied in advance to the overrides:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ac.ingress.external.tls.enabled = true\n\nac.ingress.external.tls.secretName = sterling-b2bi-b2bi-ac-frontend-svc\n\nasi.ingress.external.tls.enabled = true\n\nasi.ingress.external.tls.secretName = sterling-b2bi-b2bi-asi-frontend-svc\n\napi.ingress.external.tls.enabled = true\n\napi.ingress.external.tls.secretName = sterling-b2bi-b2bi-asi-frontend-svc\n")),(0,r.kt)("h2",{id:"perform-the-helm-installation"},"Perform the Helm installation"),(0,r.kt)("p",null,"Run the helm installation with the following command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"helm install sterling-b2bi -f sterling-b2bi-values.yaml /path/to/ibm-b2bi-prod --timeout 3600s --namespace sterling\n")),(0,r.kt)("p",null,"Installation should take approximately 40 minutes"),(0,r.kt)("h3",{id:"application-validation"},"Application Validation"),(0,r.kt)("h2",{id:"default-sterling-users"},"Default Sterling Users:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Role"),(0,r.kt)("th",{parentName:"tr",align:null},"User ID"),(0,r.kt)("th",{parentName:"tr",align:null},"Password"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System Administrator"),(0,r.kt)("td",{parentName:"tr",align:null},"fg_sysadmin"),(0,r.kt)("td",{parentName:"tr",align:null},"password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Integration Architect"),(0,r.kt)("td",{parentName:"tr",align:null},"fg_architect"),(0,r.kt)("td",{parentName:"tr",align:null},"password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Route Provisioner"),(0,r.kt)("td",{parentName:"tr",align:null},"fg_provisioner"),(0,r.kt)("td",{parentName:"tr",align:null},"password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Operator"),(0,r.kt)("td",{parentName:"tr",align:null},"fg_operator"),(0,r.kt)("td",{parentName:"tr",align:null},"password")))),(0,r.kt)("p",null,"Relevant URL:\n",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/b2b-integrator/6.1.2?topic=overview-sterling-file-gateway-tutorial"},"https://www.ibm.com/docs/en/b2b-integrator/6.1.2?topic=overview-sterling-file-gateway-tutorial")))}m.isMDXComponent=!0},7326:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/sterling-b2bi-values-02e86cc34a4bc2c83cf9bf54be8ea65c.yaml"}}]);